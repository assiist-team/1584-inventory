{"version":3,"file":"BudgetProgress.js","sources":["../../src/components/ProjectForm.tsx","../../src/components/ui/BudgetProgress.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { X, DollarSign } from 'lucide-react'\n\ninterface ProjectFormData {\n  name: string;\n  description: string;\n  clientName: string;\n  budget?: number;\n  designFee?: number;\n}\n\ninterface ProjectFormProps {\n  onSubmit: (data: ProjectFormData) => Promise<void>;\n  onCancel: () => void;\n  isLoading?: boolean;\n  initialData?: Partial<ProjectFormData>;\n}\n\nexport default function ProjectForm({ onSubmit, onCancel, isLoading = false, initialData }: ProjectFormProps) {\n  const isEditing = Boolean(initialData?.name)\n\n  const [formData, setFormData] = useState<ProjectFormData>({\n    name: initialData?.name || '',\n    description: initialData?.description || '',\n    clientName: initialData?.clientName || '',\n    budget: initialData?.budget || undefined,\n    designFee: initialData?.designFee || undefined,\n  })\n\n  const [errors, setErrors] = useState<Record<string, string>>({})\n\n  const handleChange = (field: keyof ProjectFormData, value: string | number) => {\n    const processedValue = typeof value === 'number' && value === 0 ? undefined : value\n    setFormData(prev => ({ ...prev, [field]: processedValue }))\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Project name is required'\n    }\n\n    if (!formData.clientName.trim()) {\n      newErrors.clientName = 'Client name is required'\n    }\n\n    // Budget and design fee are optional, but if provided, should be valid numbers\n    if (formData.budget !== undefined && (isNaN(formData.budget) || formData.budget < 0)) {\n      newErrors.budget = 'Budget must be a positive number'\n    }\n\n    if (formData.designFee !== undefined && (isNaN(formData.designFee) || formData.designFee < 0)) {\n      newErrors.designFee = 'Design fee must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm()) {\n      return\n    }\n\n    try {\n      await onSubmit(formData)\n    } catch (error) {\n      console.error('Error submitting form:', error)\n    }\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n      <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n        <div className=\"mt-3\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              {isEditing ? 'Edit' : 'Create'}\n            </h3>\n            <button\n              onClick={onCancel}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {/* Project Name */}\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                Project Name *\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                value={formData.name}\n                onChange={(e) => handleChange('name', e.target.value)}\n                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm ${\n                  errors.name ? 'border-red-300' : ''\n                }`}\n                placeholder=\"Enter project name\"\n              />\n              {errors.name && <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>}\n            </div>\n\n            {/* Client Name */}\n            <div>\n              <label htmlFor=\"clientName\" className=\"block text-sm font-medium text-gray-700\">\n                Client Name *\n              </label>\n              <input\n                type=\"text\"\n                id=\"clientName\"\n                value={formData.clientName}\n                onChange={(e) => handleChange('clientName', e.target.value)}\n                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm ${\n                  errors.clientName ? 'border-red-300' : ''\n                }`}\n                placeholder=\"Enter client name\"\n              />\n              {errors.clientName && <p className=\"mt-1 text-sm text-red-600\">{errors.clientName}</p>}\n            </div>\n\n            {/* Description */}\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                Description\n              </label>\n              <textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => handleChange('description', e.target.value)}\n                rows={3}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n                placeholder=\"Enter project description\"\n              />\n            </div>\n\n            {/* Budget */}\n            <div>\n              <label htmlFor=\"budget\" className=\"block text-sm font-medium text-gray-700\">\n                Budget (Optional)\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <DollarSign className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"number\"\n                  id=\"budget\"\n                  value={formData.budget?.toString() || ''}\n                  onChange={(e) => handleChange('budget', parseFloat(e.target.value) || 0)}\n                  className={`block w-full pl-10 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm ${\n                    errors.budget ? 'border-red-300' : ''\n                  }`}\n                  placeholder=\"0.00\"\n                  min=\"0\"\n                  step=\"0.01\"\n                />\n              </div>\n              {errors.budget && <p className=\"mt-1 text-sm text-red-600\">{errors.budget}</p>}\n            </div>\n\n            {/* Design Fee */}\n            <div>\n              <label htmlFor=\"designFee\" className=\"block text-sm font-medium text-gray-700\">\n                Design Fee (Optional)\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <DollarSign className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"number\"\n                  id=\"designFee\"\n                  value={formData.designFee?.toString() || ''}\n                  onChange={(e) => handleChange('designFee', parseFloat(e.target.value) || 0)}\n                  className={`block w-full pl-10 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm ${\n                    errors.designFee ? 'border-red-300' : ''\n                  }`}\n                  placeholder=\"0.00\"\n                  min=\"0\"\n                  step=\"0.01\"\n                />\n              </div>\n              {errors.designFee && <p className=\"mt-1 text-sm text-red-600\">{errors.designFee}</p>}\n            </div>\n\n            {/* Buttons */}\n            <div className=\"flex justify-end space-x-3 pt-4\">\n              <button\n                type=\"button\"\n                onClick={onCancel}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                disabled={isLoading}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n              >\n                {isLoading\n                  ? (isEditing ? 'Updating...' : 'Creating...')\n                  : (isEditing ? 'Update Project' : 'Create Project')\n                }\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Transaction } from '@/types'\n\ninterface BudgetProgressProps {\n  budget?: number\n  designFee?: number\n  transactions: Transaction[]\n}\n\ninterface CompactBudgetProgressProps {\n  budget?: number\n  designFee?: number\n  transactions: Transaction[]\n}\n\nexport default function BudgetProgress({ budget, designFee, transactions }: BudgetProgressProps) {\n  // Calculate total spent (purchases + design fee, excluding returns)\n  const calculateSpent = (): number => {\n    if (!budget && budget !== 0) return 0\n\n    // Sum all purchases (exclude returns)\n    const purchases = transactions\n      .filter(transaction => transaction.transaction_type === 'Purchase')\n      .reduce((total, transaction) => total + parseFloat(transaction.amount || '0'), 0)\n\n    // Add design fee if it exists\n    const totalDesignFee = designFee || 0\n\n    return purchases + totalDesignFee\n  }\n\n  // Don't show if no budget is set\n  if (budget === null || budget === undefined) {\n    return null\n  }\n\n  const spent = calculateSpent()\n  const percentage = budget > 0 ? (spent / budget) * 100 : 0\n\n  const getProgressColor = () => {\n    if (percentage >= 100) return 'bg-red-500'\n    if (percentage >= 80) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  const getPercentageColor = () => {\n    if (percentage >= 100) return 'text-red-600'\n    if (percentage >= 80) return 'text-yellow-600'\n    return 'text-green-600'\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Budget Progress</h3>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"text-2xl font-bold text-gray-900\">\n            ${spent.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          </div>\n          <div className=\"text-sm text-gray-500\">of ${budget.toLocaleString('en-US')} budget</div>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"relative\">\n        <div className=\"w-full bg-gray-200 rounded-full h-3 mb-2\">\n          <div\n            className={`h-3 rounded-full transition-all duration-300 ${getProgressColor()}`}\n            style={{ width: `${Math.min(percentage, 100)}%` }}\n          />\n        </div>\n\n        {/* Percentage */}\n        <div className=\"flex justify-between items-center text-sm\">\n          <span className=\"text-gray-500\">Progress</span>\n          <span className={`font-semibold ${getPercentageColor()}`}>\n            {percentage.toFixed(1)}%\n          </span>\n        </div>\n\n        {/* Budget Status Message */}\n        <div className=\"mt-3 text-sm\">\n          {percentage >= 100 ? (\n            <div className=\"flex items-center text-red-600\">\n              <span className=\"mr-2\">⚠️</span>\n              Budget exceeded by ${(spent - budget).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            </div>\n          ) : percentage >= 80 ? (\n            <div className=\"flex items-center text-yellow-600\">\n              <span className=\"mr-2\">⚠️</span>\n              {((100 - percentage)).toFixed(1)}% of budget remaining\n            </div>\n          ) : (\n            <div className=\"flex items-center text-green-600\">\n              <span className=\"mr-2\">✅</span>\n              ${(budget - spent).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} remaining\n            </div>\n          )}\n        </div>\n\n        {/* Breakdown */}\n        {(transactions.length > 0 || designFee) && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\n            <div className=\"text-sm text-gray-600\">\n              <div className=\"flex justify-between mb-1\">\n                <span>Purchases:</span>\n                <span>${transactions\n                  .filter(t => t.transaction_type === 'Purchase')\n                  .reduce((sum, t) => sum + parseFloat(t.amount || '0'), 0)\n                  .toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                </span>\n              </div>\n              {designFee && designFee > 0 && (\n                <div className=\"flex justify-between mb-1\">\n                  <span>Design Fee:</span>\n                  <span>${designFee.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\n                </div>\n              )}\n              <div className=\"flex justify-between font-semibold pt-1 border-t border-gray-300\">\n                <span>Total Spent:</span>\n                <span>${spent.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport function CompactBudgetProgress({ budget, designFee, transactions }: CompactBudgetProgressProps) {\n  // Calculate total spent (purchases + design fee, excluding returns)\n  const calculateSpent = (): number => {\n    if (!budget && budget !== 0) return 0\n\n    // Sum all purchases (exclude returns)\n    const purchases = transactions\n      .filter(transaction => transaction.transaction_type === 'Purchase')\n      .reduce((total, transaction) => total + parseFloat(transaction.amount || '0'), 0)\n\n    // Add design fee if it exists\n    const totalDesignFee = designFee || 0\n\n    return purchases + totalDesignFee\n  }\n\n  // Don't show if no budget is set\n  if (budget === null || budget === undefined) {\n    return (\n      <div className=\"text-center py-2\">\n        <div className=\"text-xs text-gray-500\">No budget set</div>\n      </div>\n    )\n  }\n\n  const spent = calculateSpent()\n  const percentage = budget > 0 ? (spent / budget) * 100 : 0\n\n  const getProgressColor = () => {\n    if (percentage >= 100) return 'bg-red-500'\n    if (percentage >= 80) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  const getPercentageColor = () => {\n    if (percentage >= 100) return 'text-red-600'\n    if (percentage >= 80) return 'text-yellow-600'\n    return 'text-green-600'\n  }\n\n  return (\n    <div className=\"bg-gray-50 rounded-lg p-3\">\n      {/* Header with amount and percentage */}\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"text-sm font-medium text-gray-700\">Budget</div>\n        <div className=\"text-right\">\n          <div className=\"text-sm font-semibold text-gray-900\">\n            ${spent.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          </div>\n          <div className={`text-xs ${getPercentageColor()}`}>\n            {percentage.toFixed(0)}%\n          </div>\n        </div>\n      </div>\n\n      {/* Compact Progress Bar */}\n      <div className=\"relative\">\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div\n            className={`h-2 rounded-full transition-all duration-300 ${getProgressColor()}`}\n            style={{ width: `${Math.min(percentage, 100)}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Status indicator */}\n      <div className=\"mt-1 flex justify-between items-center text-xs\">\n        <span className=\"text-gray-500\">${budget.toLocaleString('en-US')}</span>\n        <div className=\"flex items-center\">\n          {percentage >= 100 ? (\n            <span className=\"text-red-600\">⚠️ Over budget</span>\n          ) : percentage >= 80 ? (\n            <span className=\"text-yellow-600\">⚠️ {((100 - percentage)).toFixed(0)}% left</span>\n          ) : (\n            <span className=\"text-green-600\">✅ ${((budget - spent)).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} left</span>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["ProjectForm","onSubmit","onCancel","isLoading","initialData","isEditing","formData","setFormData","useState","errors","setErrors","handleChange","field","value","processedValue","prev","validateForm","newErrors","handleSubmit","e","error","jsx","jsxs","X","DollarSign","_a","_b","BudgetProgress","budget","designFee","transactions","calculateSpent","transaction","total","spent","percentage","getProgressColor","getPercentageColor","t","sum","CompactBudgetProgress"],"mappings":"kGAkBA,SAAwBA,EAAY,CAAE,SAAAC,EAAU,SAAAC,EAAU,UAAAC,EAAY,GAAO,YAAAC,GAAiC,SAC5G,MAAMC,EAAY,GAAQD,GAAA,MAAAA,EAAa,MAEjC,CAACE,EAAUC,CAAW,EAAIC,WAA0B,CACxD,MAAMJ,GAAA,YAAAA,EAAa,OAAQ,GAC3B,aAAaA,GAAA,YAAAA,EAAa,cAAe,GACzC,YAAYA,GAAA,YAAAA,EAAa,aAAc,GACvC,QAAQA,GAAA,YAAAA,EAAa,SAAU,OAC/B,WAAWA,GAAA,YAAAA,EAAa,YAAa,MAAA,CACtC,EAEK,CAACK,EAAQC,CAAS,EAAIF,EAAAA,SAAiC,CAAA,CAAE,EAEzDG,EAAe,CAACC,EAA8BC,IAA2B,CAC7E,MAAMC,EAAiB,OAAOD,GAAU,UAAYA,IAAU,EAAI,OAAYA,EAC9EN,EAAYQ,IAAS,CAAE,GAAGA,EAAM,CAACH,CAAK,EAAGE,GAAiB,EAEtDL,EAAOG,CAAK,GACdF,EAAUK,IAAS,CAAE,GAAGA,EAAM,CAACH,CAAK,EAAG,IAAK,CAEhD,EAEMI,EAAe,IAAe,CAClC,MAAMC,EAAoC,CAAA,EAE1C,OAAKX,EAAS,KAAK,SACjBW,EAAU,KAAO,4BAGdX,EAAS,WAAW,SACvBW,EAAU,WAAa,2BAIrBX,EAAS,SAAW,SAAc,MAAMA,EAAS,MAAM,GAAKA,EAAS,OAAS,KAChFW,EAAU,OAAS,oCAGjBX,EAAS,YAAc,SAAc,MAAMA,EAAS,SAAS,GAAKA,EAAS,UAAY,KACzFW,EAAU,UAAY,wCAGxBP,EAAUO,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAC3C,EAEMC,EAAe,MAAOC,GAAuB,CAGjD,GAFAA,EAAE,eAAA,EAEE,EAACH,IAIL,GAAI,CACF,MAAMf,EAASK,CAAQ,CACzB,OAASc,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CAC/C,CACF,EAEA,OACEC,EAAAA,IAAC,MAAA,CAAI,UAAU,6EACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wEACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,OAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,MAAC,KAAA,CAAG,UAAU,oCACX,SAAAhB,EAAY,OAAS,SACxB,EACAgB,EAAAA,IAAC,SAAA,CACC,QAASnB,EACT,UAAU,oCAEV,SAAAmB,EAAAA,IAACE,EAAA,CAAE,UAAU,SAAA,CAAU,CAAA,CAAA,CACzB,EACF,EAGAD,EAAAA,KAAC,OAAA,CAAK,SAAUJ,EAAc,UAAU,YAEtC,SAAA,CAAAI,OAAC,MAAA,CACC,SAAA,CAAAD,MAAC,QAAA,CAAM,QAAQ,OAAO,UAAU,0CAA0C,SAAA,iBAE1E,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,OACH,MAAOf,EAAS,KAChB,SAAWa,GAAMR,EAAa,OAAQQ,EAAE,OAAO,KAAK,EACpD,UAAW,qHACTV,EAAO,KAAO,iBAAmB,EACnC,GACA,YAAY,oBAAA,CAAA,EAEbA,EAAO,MAAQY,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,IAAA,CAAK,CAAA,EACxE,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,aAAa,UAAU,0CAA0C,SAAA,gBAEhF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,aACH,MAAOf,EAAS,WAChB,SAAWa,GAAMR,EAAa,aAAcQ,EAAE,OAAO,KAAK,EAC1D,UAAW,qHACTV,EAAO,WAAa,iBAAmB,EACzC,GACA,YAAY,mBAAA,CAAA,EAEbA,EAAO,YAAcY,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,UAAA,CAAW,CAAA,EACpF,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,cAAc,UAAU,0CAA0C,SAAA,cAEjF,EACAA,EAAAA,IAAC,WAAA,CACC,GAAG,cACH,MAAOf,EAAS,YAChB,SAAWa,GAAMR,EAAa,cAAeQ,EAAE,OAAO,KAAK,EAC3D,KAAM,EACN,UAAU,oHACV,YAAY,2BAAA,CAAA,CACd,EACF,SAGC,MAAA,CACC,SAAA,CAAAE,MAAC,QAAA,CAAM,QAAQ,SAAS,UAAU,0CAA0C,SAAA,oBAE5E,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,uEACb,eAACG,EAAA,CAAW,UAAU,wBAAwB,CAAA,CAChD,EACAH,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,SACH,QAAOI,EAAAnB,EAAS,SAAT,YAAAmB,EAAiB,aAAc,GACtC,SAAWN,GAAMR,EAAa,SAAU,WAAWQ,EAAE,OAAO,KAAK,GAAK,CAAC,EACvE,UAAW,sHACTV,EAAO,OAAS,iBAAmB,EACrC,GACA,YAAY,OACZ,IAAI,IACJ,KAAK,MAAA,CAAA,CACP,EACF,EACCA,EAAO,QAAUY,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,MAAA,CAAO,CAAA,EAC5E,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,YAAY,UAAU,0CAA0C,SAAA,wBAE/E,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,uEACb,eAACG,EAAA,CAAW,UAAU,wBAAwB,CAAA,CAChD,EACAH,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,YACH,QAAOK,EAAApB,EAAS,YAAT,YAAAoB,EAAoB,aAAc,GACzC,SAAWP,GAAMR,EAAa,YAAa,WAAWQ,EAAE,OAAO,KAAK,GAAK,CAAC,EAC1E,UAAW,sHACTV,EAAO,UAAY,iBAAmB,EACxC,GACA,YAAY,OACZ,IAAI,IACJ,KAAK,MAAA,CAAA,CACP,EACF,EACCA,EAAO,WAAaY,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,SAAA,CAAU,CAAA,EAClF,EAGAC,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASnB,EACT,UAAU,+JACV,SAAUC,EACX,SAAA,QAAA,CAAA,EAGDkB,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUlB,EACV,UAAU,yLAET,SAAAA,EACIE,EAAY,cAAgB,cAC5BA,EAAY,iBAAmB,gBAAA,CAAA,CAEtC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,CAEJ,CClNA,SAAwBsB,EAAe,CAAE,OAAAC,EAAQ,UAAAC,EAAW,aAAAC,GAAqC,CAE/F,MAAMC,EAAiB,IACjB,CAACH,GAAUA,IAAW,EAAU,EAGlBE,EACf,UAAsBE,EAAY,mBAAqB,UAAU,EACjE,OAAO,CAACC,EAAOD,IAAgBC,EAAQ,WAAWD,EAAY,QAAU,GAAG,EAAG,CAAC,GAG3DH,GAAa,GAMtC,GAAID,GAAW,KACb,OAAO,KAGT,MAAMM,EAAQH,EAAA,EACRI,EAAaP,EAAS,EAAKM,EAAQN,EAAU,IAAM,EAEnDQ,EAAmB,IACnBD,GAAc,IAAY,aAC1BA,GAAc,GAAW,gBACtB,eAGHE,EAAqB,IACrBF,GAAc,IAAY,eAC1BA,GAAc,GAAW,kBACtB,iBAGT,OACEb,EAAAA,KAAC,MAAA,CAAI,UAAU,sCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,oBACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,oCAAoC,2BAAe,CAAA,CACnE,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCAAmC,SAAA,CAAA,IAC9CY,EAAM,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,CAAA,EACxF,EACAZ,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,OAAKM,EAAO,eAAe,OAAO,EAAE,SAAA,CAAA,CAAO,CAAA,CAAA,CACpF,CAAA,EACF,EAGAN,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,2CACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAW,gDAAgDe,EAAA,CAAkB,GAC7E,MAAO,CAAE,MAAO,GAAG,KAAK,IAAID,EAAY,GAAG,CAAC,GAAA,CAAI,CAAA,EAEpD,EAGAb,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,WAAQ,SACvC,OAAA,CAAK,UAAW,iBAAiBgB,EAAA,CAAoB,GACnD,SAAA,CAAAF,EAAW,QAAQ,CAAC,EAAE,GAAA,CAAA,CACzB,CAAA,EACF,EAGAd,EAAAA,IAAC,OAAI,UAAU,eACZ,YAAc,IACbC,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,OAAO,SAAA,KAAE,EAAO,wBACVa,EAAQN,GAAQ,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,CAAA,CAAG,CAAA,EACtH,EACEO,GAAc,GAChBb,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,OAAO,SAAA,KAAE,GACtB,IAAMc,GAAa,QAAQ,CAAC,EAAE,uBAAA,CAAA,CACnC,EAEAb,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,OAAO,SAAA,IAAC,EAAO,KAC5BO,EAASM,GAAO,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,EAAE,YAAA,CAAA,CACrG,CAAA,CAEJ,GAGEJ,EAAa,OAAS,GAAKD,IAC3BR,EAAAA,IAAC,MAAA,CAAI,UAAU,qCACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAD,EAAAA,IAAC,QAAK,SAAA,YAAA,CAAU,SACf,OAAA,CAAK,SAAA,CAAA,IAAES,EACL,OAAOQ,GAAKA,EAAE,mBAAqB,UAAU,EAC7C,OAAO,CAACC,EAAKD,IAAMC,EAAM,WAAWD,EAAE,QAAU,GAAG,EAAG,CAAC,EACvD,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,CAAA,CAAG,CAAA,CAAA,CACjF,CAAA,EACF,EACCT,GAAaA,EAAY,GACxBP,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAD,EAAAA,IAAC,QAAK,SAAA,aAAA,CAAW,SAChB,OAAA,CAAK,SAAA,CAAA,IAAEQ,EAAU,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,CAAA,CAAA,CAAE,CAAA,EACpG,EAEFP,EAAAA,KAAC,MAAA,CAAI,UAAU,mEACb,SAAA,CAAAD,EAAAA,IAAC,QAAK,SAAA,cAAA,CAAY,SACjB,OAAA,CAAK,SAAA,CAAA,IAAEa,EAAM,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,CAAA,CAAA,CAAE,CAAA,CAAA,CAChG,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ,CAEO,SAASM,EAAsB,CAAE,OAAAZ,EAAQ,UAAAC,EAAW,aAAAC,GAA4C,CAErG,MAAMC,EAAiB,IACjB,CAACH,GAAUA,IAAW,EAAU,EAGlBE,EACf,UAAsBE,EAAY,mBAAqB,UAAU,EACjE,OAAO,CAACC,EAAOD,IAAgBC,EAAQ,WAAWD,EAAY,QAAU,GAAG,EAAG,CAAC,GAG3DH,GAAa,GAMtC,GAAID,GAAW,KACb,OACEP,EAAAA,IAAC,OAAI,UAAU,mBACb,eAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,eAAA,CAAa,CAAA,CACtD,EAIJ,MAAMa,EAAQH,EAAA,EACRI,EAAaP,EAAS,EAAKM,EAAQN,EAAU,IAAM,EAEnDQ,EAAmB,IACnBD,GAAc,IAAY,aAC1BA,GAAc,GAAW,gBACtB,eAGHE,EAAqB,IACrBF,GAAc,IAAY,eAC1BA,GAAc,GAAW,kBACtB,iBAGT,OACEb,EAAAA,KAAC,MAAA,CAAI,UAAU,4BAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAoC,SAAA,SAAM,EACzDC,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,sCAAsC,SAAA,CAAA,IACjDY,EAAM,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,CAAA,EACxF,SACC,MAAA,CAAI,UAAW,WAAWG,EAAA,CAAoB,GAC5C,SAAA,CAAAF,EAAW,QAAQ,CAAC,EAAE,GAAA,CAAA,CACzB,CAAA,CAAA,CACF,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,WACb,SAAAd,MAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAW,gDAAgDe,EAAA,CAAkB,GAC7E,MAAO,CAAE,MAAO,GAAG,KAAK,IAAID,EAAY,GAAG,CAAC,GAAA,CAAI,CAAA,EAEpD,CAAA,CACF,EAGAb,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,IAAEM,EAAO,eAAe,OAAO,CAAA,EAAE,QAChE,MAAA,CAAI,UAAU,oBACZ,SAAAO,GAAc,IACbd,EAAAA,IAAC,OAAA,CAAK,UAAU,eAAe,0BAAc,EAC3Cc,GAAc,GAChBb,OAAC,OAAA,CAAK,UAAU,kBAAkB,SAAA,CAAA,OAAM,IAAMa,GAAa,QAAQ,CAAC,EAAE,QAAA,CAAA,CAAM,EAE5Eb,EAAAA,KAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,OAAMM,EAASM,GAAQ,eAAe,QAAS,CAAE,sBAAuB,EAAG,sBAAuB,EAAG,EAAE,OAAA,CAAA,CAAK,CAAA,CAEjJ,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}