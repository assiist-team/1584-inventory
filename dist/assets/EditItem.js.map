{"version":3,"file":"EditItem.js","sources":["../../src/pages/EditItem.tsx"],"sourcesContent":["import { ArrowLeft, Save, X, Bookmark } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { itemService, transactionService } from '@/services/inventoryService'\nimport { TRANSACTION_SOURCES } from '@/constants/transactionSources'\nimport { Transaction } from '@/types'\nimport { Select } from '@/components/ui/Select'\nimport { useAuth } from '../contexts/AuthContext'\nimport { UserRole } from '../types'\nimport { Shield } from 'lucide-react'\n\nexport default function EditItem() {\n  const { id: projectId, itemId } = useParams<{ id: string; itemId: string }>()\n  const navigate = useNavigate()\n  const { hasRole } = useAuth()\n\n  // Check if user has permission to edit items (DESIGNER role or higher)\n  if (!hasRole(UserRole.DESIGNER)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-red-100\">\n            <Shield className=\"h-6 w-6 text-red-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Access Denied</h2>\n          <p className=\"text-gray-600\">\n            You don't have permission to edit items. Please contact an administrator if you need access.\n          </p>\n          <Link\n            to={`/project/${projectId}`}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            Back to Project\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const [formData, setFormData] = useState({\n    description: '',\n    source: '',\n    sku: '',\n    price: '',\n    market_value: '',\n    payment_method: '',\n    disposition: '',\n    space: '',\n    notes: '',\n    bookmark: false,\n    selectedTransactionId: ''\n  })\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [loadingTransactions, setLoadingTransactions] = useState(false)\n\n  console.log('EditItem - URL params:', { projectId, itemId })\n\n  // Initialize custom states based on form data\n  useEffect(() => {\n    const predefinedSources = TRANSACTION_SOURCES\n    if (formData.source && !predefinedSources.includes(formData.source as any)) {\n      setIsCustomSource(true)\n    } else if (formData.source && predefinedSources.includes(formData.source as any)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n\n  // Load item data\n  useEffect(() => {\n    const fetchItem = async () => {\n      console.log('fetchItem called with:', { projectId, itemId })\n      if (itemId && projectId) {\n        try {\n          const fetchedItem = await itemService.getItem(projectId, itemId)\n          console.log('Fetched item data:', fetchedItem)\n          if (fetchedItem) {\n            setFormData({\n              description: String(fetchedItem.description || ''),\n              source: String(fetchedItem.source || ''),\n              sku: String(fetchedItem.sku || ''),\n              price: String(fetchedItem.price || ''),\n              market_value: String(fetchedItem.market_value || ''),\n              payment_method: String(fetchedItem.payment_method || ''),\n              disposition: String(fetchedItem.disposition || ''),\n              space: String(fetchedItem.space || ''),\n              notes: String(fetchedItem.notes || ''),\n              bookmark: Boolean(fetchedItem.bookmark || false),\n              selectedTransactionId: String(fetchedItem.transaction_id || '')\n            })\n            console.log('Form data set:', {\n              description: String(fetchedItem.description || ''),\n              source: String(fetchedItem.source || ''),\n              sku: String(fetchedItem.sku || ''),\n              price: String(fetchedItem.price || ''),\n              market_value: String(fetchedItem.market_value || ''),\n              payment_method: String(fetchedItem.payment_method || ''),\n              disposition: String(fetchedItem.disposition || ''),\n              notes: String(fetchedItem.notes || ''),\n              bookmark: Boolean(fetchedItem.bookmark || false)\n            })\n          }\n        } catch (error) {\n          console.error('Failed to fetch item:', error)\n          setErrors({ fetch: 'Failed to load item data' })\n        }\n      }\n      setLoading(false)\n    }\n\n    fetchItem()\n  }, [itemId, projectId])\n\n  // Fetch transactions when component mounts\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      if (projectId) {\n        setLoadingTransactions(true)\n        try {\n          const fetchedTransactions = await transactionService.getTransactions(projectId)\n          setTransactions(fetchedTransactions)\n        } catch (error) {\n          console.error('Error fetching transactions:', error)\n        } finally {\n          setLoadingTransactions(false)\n        }\n      }\n    }\n\n    fetchTransactions()\n  }, [projectId])\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n    // Validate market value if provided\n    if (formData.market_value.trim() && (isNaN(Number(formData.market_value)) || Number(formData.market_value) <= 0)) {\n      newErrors.market_value = 'Market value must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !itemId || !projectId) return\n\n    setSaving(true)\n\n    try {\n      const itemData = {\n        ...formData,\n        transaction_id: formData.selectedTransactionId || '', // Use selected transaction or empty string\n        last_updated: new Date().toISOString()\n      }\n\n      await itemService.updateItem(projectId, itemId, itemData)\n      navigate(`/project/${projectId}?tab=inventory`)\n    } catch (error) {\n      console.error('Error updating item:', error)\n      setErrors({ submit: 'Failed to update item. Please try again.' })\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    console.log('Updating field:', field, 'with value:', value)\n    setFormData(prev => {\n      const newData = { ...prev, [field]: value }\n      console.log('New form data:', newData)\n      return newData\n    })\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const handleTransactionChange = (transactionId: string) => {\n    setFormData(prev => ({ ...prev, selectedTransactionId: transactionId }))\n\n    // Clear error when user makes selection\n    if (errors.selectedTransactionId) {\n      setErrors(prev => ({ ...prev, selectedTransactionId: '' }))\n    }\n  }\n\n  const toggleBookmark = async () => {\n    if (!itemId || !projectId) return\n\n    try {\n      await itemService.updateItem(projectId, itemId, {\n        bookmark: !formData.bookmark\n      })\n      setFormData(prev => ({ ...prev, bookmark: !prev.bookmark }))\n    } catch (error) {\n      console.error('Failed to update bookmark:', error)\n    }\n  }\n\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <Link\n              to={`/project/${projectId}?tab=inventory`}\n              className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-1\" />\n              Back\n            </Link>\n          </div>\n        </div>\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">Edit Item</h1>\n          </div>\n          <div className=\"p-8\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-300 rounded w-3/4 mb-4\"></div>\n              <div className=\"h-4 bg-gray-300 rounded w-1/2 mb-4\"></div>\n              <div className=\"h-4 bg-gray-300 rounded w-2/3\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=inventory`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Edit Item</h1>\n        </div>\n        <div className=\"px-6 py-4\">\n          <div className=\"flex justify-end mb-8\">\n            <button\n              onClick={toggleBookmark}\n              className={`inline-flex items-center px-3 py-2 border text-sm font-medium rounded-md ${\n                formData.bookmark\n                  ? 'border-red-300 text-red-700 bg-red-50 hover:bg-red-100'\n                  : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n              } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n            >\n              <Bookmark className=\"h-4 w-4 mr-2\" fill={formData.bookmark ? 'currentColor' : 'none'} />\n              {formData.bookmark ? 'Bookmarked' : 'Bookmark'}\n            </button>\n          </div>\n\n          <div className=\"px-6 py-4\">\n            <form onSubmit={handleSubmit} className=\"space-y-8\">\n              {/* Description */}\n              <div>\n                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                  Description *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"description\"\n                  value={formData.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"e.g., Wooden dining table, 6 chairs\"\n                  className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                    errors.description ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                />\n                {errors.description && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n                )}\n              </div>\n\n              {/* Transaction Selection */}\n              <Select\n                label=\"Associate with Transaction (Optional)\"\n                id=\"selectedTransactionId\"\n                value={formData.selectedTransactionId}\n                onChange={(e) => handleTransactionChange(e.target.value)}\n                error={errors.selectedTransactionId}\n                disabled={loadingTransactions}\n              >\n                <option value=\"\">Select a transaction (optional)</option>\n                {loadingTransactions ? (\n                  <option disabled>Loading transactions...</option>\n                ) : (\n                  transactions.map((transaction) => (\n                    <option key={transaction.transaction_id} value={transaction.transaction_id}>\n                      {new Date(transaction.transaction_date).toLocaleDateString()} - {transaction.source} - ${transaction.amount}\n                    </option>\n                  ))\n                )}\n              </Select>\n              {!loadingTransactions && transactions.length === 0 && (\n                <p className=\"mt-1 text-sm text-gray-500\">No transactions available for this project</p>\n              )}\n\n              {/* Source */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Source\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n                  {TRANSACTION_SOURCES.map((source) => (\n                    <div key={source} className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                        name=\"source\"\n                        value={source}\n                        checked={formData.source === source}\n                        onChange={(e) => {\n                          handleInputChange('source', e.target.value)\n                          setIsCustomSource(false)\n                        }}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                      />\n                      <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                        {source}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id=\"source_custom\"\n                    name=\"source\"\n                    value=\"custom\"\n                    checked={isCustomSource}\n                    onChange={() => {\n                      setIsCustomSource(true)\n                      handleInputChange('source', '')\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                    Other\n                  </label>\n                </div>\n                {isCustomSource && (\n                  <input\n                    type=\"text\"\n                    id=\"source_custom_input\"\n                    value={formData.source}\n                    onChange={(e) => handleInputChange('source', e.target.value)}\n                    placeholder=\"Enter custom source...\"\n                    className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                      errors.source ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                  />\n                )}\n                {errors.source && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n                )}\n              </div>\n\n              {/* SKU */}\n              <div>\n                <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n                  SKU\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"sku\"\n                  value={formData.sku}\n                  onChange={(e) => handleInputChange('sku', e.target.value)}\n                  placeholder=\"Product SKU or model number\"\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n\n              {/* Price */}\n              <div>\n                <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n                  Price\n                </label>\n                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <span className=\"text-gray-500 sm:text-sm\">$</span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"price\"\n                    value={formData.price}\n                    onChange={(e) => handleInputChange('price', e.target.value)}\n                    placeholder=\"0.00\"\n                    className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                      errors.price ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                  />\n                </div>\n                {errors.price && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>\n                )}\n              </div>\n\n\n              {/* Market Value */}\n              <div>\n                <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n                  Market Value\n                </label>\n                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <span className=\"text-gray-500 sm:text-sm\">$</span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"market_value\"\n                    value={formData.market_value}\n                    onChange={(e) => handleInputChange('market_value', e.target.value)}\n                    placeholder=\"0.00\"\n                    className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                      errors.market_value ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                  />\n                </div>\n                {errors.market_value && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n                )}\n              </div>\n\n              {/* Payment Method */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Payment Method\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-3\">\n                  {['Client Card', '1584 Design'].map((method) => (\n                    <div key={method} className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`}\n                        name=\"payment_method\"\n                        value={method}\n                        checked={formData.payment_method === method}\n                        onChange={(e) => {\n                          handleInputChange('payment_method', e.target.value)\n                        }}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                      />\n                      <label htmlFor={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                        {method}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n                {errors.payment_method && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n                )}\n              </div>\n\n              {/* Disposition */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Disposition\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  {['keep', 'to return', 'returned', 'inventory'].map((disposition) => (\n                    <div key={disposition} className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id={`disposition_${disposition.toLowerCase()}`}\n                        name=\"disposition\"\n                        value={disposition}\n                        checked={formData.disposition === disposition}\n                        onChange={(e) => handleInputChange('disposition', e.target.value)}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                      />\n                      <label htmlFor={`disposition_${disposition.toLowerCase()}`} className=\"ml-2 block text-sm text-gray-900\">\n                        {disposition === 'to return' ? 'To Return' : disposition.charAt(0).toUpperCase() + disposition.slice(1)}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n                {errors.disposition && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.disposition}</p>\n                )}\n              </div>\n\n              {/* Space */}\n              <div>\n                <label htmlFor=\"space\" className=\"block text-sm font-medium text-gray-700\">\n                  Space\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"space\"\n                  value={formData.space}\n                  onChange={(e) => handleInputChange('space', e.target.value)}\n                  placeholder=\"e.g., Living Room, Master Bedroom, Kitchen\"\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n\n              {/* Transaction Selection */}\n              <Select\n                label=\"Associate with Transaction (Optional)\"\n                id=\"selectedTransactionId\"\n                value={formData.selectedTransactionId}\n                onChange={(e) => handleTransactionChange(e.target.value)}\n                error={errors.selectedTransactionId}\n                disabled={loadingTransactions}\n              >\n                <option value=\"\">Select a transaction (optional)</option>\n                {loadingTransactions ? (\n                  <option disabled>Loading transactions...</option>\n                ) : (\n                  transactions.map((transaction) => (\n                    <option key={transaction.transaction_id} value={transaction.transaction_id}>\n                      {new Date(transaction.transaction_date).toLocaleDateString()} - {transaction.source} - ${transaction.amount}\n                    </option>\n                  ))\n                )}\n              </Select>\n              {!loadingTransactions && transactions.length === 0 && (\n                <p className=\"mt-1 text-sm text-gray-500\">No transactions available for this project</p>\n              )}\n\n              {/* Notes */}\n              <div>\n                <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n                  Notes\n                </label>\n                <textarea\n                  id=\"notes\"\n                  rows={3}\n                  value={formData.notes}\n                  onChange={(e) => handleInputChange('notes', e.target.value)}\n                  placeholder=\"Additional notes about this item...\"\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n\n              {/* Error message */}\n              {errors.submit && (\n                <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n                  <p className=\"text-sm text-red-600\">{errors.submit}</p>\n                </div>\n              )}\n\n              {/* Form Actions */}\n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <Link\n                  to={`/project/${projectId}?tab=inventory`}\n                  className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  <X className=\"h-4 w-4 mr-2\" />\n                  Cancel\n                </Link>\n                <button\n                  type=\"submit\"\n                  disabled={saving}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  <Save className=\"h-4 w-4 mr-2\" />\n                  {saving ? 'Saving...' : 'Save'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["EditItem","projectId","itemId","useParams","navigate","useNavigate","hasRole","useAuth","UserRole","jsxs","jsx","Shield","Link","formData","setFormData","useState","isCustomSource","setIsCustomSource","loading","setLoading","saving","setSaving","errors","setErrors","transactions","setTransactions","loadingTransactions","setLoadingTransactions","useEffect","predefinedSources","TRANSACTION_SOURCES","fetchedItem","itemService","error","fetchedTransactions","transactionService","validateForm","newErrors","handleSubmit","e","itemData","handleInputChange","field","value","prev","newData","handleTransactionChange","transactionId","toggleBookmark","ArrowLeft","Bookmark","Select","transaction","source","method","disposition","X","Save"],"mappings":"sUAWA,SAAwBA,GAAW,CACjC,KAAM,CAAE,GAAIC,EAAW,OAAAC,CAAA,EAAWC,EAAA,EAC5BC,EAAWC,EAAA,EACX,CAAE,QAAAC,CAAA,EAAYC,EAAA,EAGpB,GAAI,CAACD,EAAQE,EAAS,QAAQ,EAC5B,aACG,MAAA,CAAI,UAAU,2DACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,6EACb,eAACC,EAAA,CAAO,UAAU,uBAAuB,CAAA,CAC3C,EACAD,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,gBAAa,EAC9DA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,+FAE7B,EACAA,EAAAA,IAACE,EAAA,CACC,GAAI,YAAYX,CAAS,GACzB,UAAU,6IACX,SAAA,iBAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,EAIJ,KAAM,CAACY,EAAUC,CAAW,EAAIC,WAAS,CACvC,YAAa,GACb,OAAQ,GACR,IAAK,GACL,MAAO,GACP,aAAc,GACd,eAAgB,GAChB,YAAa,GACb,MAAO,GACP,MAAO,GACP,SAAU,GACV,sBAAuB,EAAA,CACxB,EAEK,CAACC,EAAgBC,CAAiB,EAAIF,EAAAA,SAAS,EAAK,EACpD,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAACK,EAAQC,CAAS,EAAIN,EAAAA,SAAS,EAAK,EACpC,CAACO,EAAQC,CAAS,EAAIR,EAAAA,SAAiC,CAAA,CAAE,EACzD,CAACS,EAAcC,CAAe,EAAIV,EAAAA,SAAwB,CAAA,CAAE,EAC5D,CAACW,EAAqBC,CAAsB,EAAIZ,EAAAA,SAAS,EAAK,EAEpE,QAAQ,IAAI,yBAA0B,CAAE,UAAAd,EAAW,OAAAC,EAAQ,EAG3D0B,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAoBC,EACtBjB,EAAS,QAAU,CAACgB,EAAkB,SAAShB,EAAS,MAAa,EACvEI,EAAkB,EAAI,EACbJ,EAAS,QAAUgB,EAAkB,SAAShB,EAAS,MAAa,GAC7EI,EAAkB,EAAK,CAE3B,EAAG,CAACJ,EAAS,MAAM,CAAC,EAIpBe,EAAAA,UAAU,IAAM,EACI,SAAY,CAE5B,GADA,QAAQ,IAAI,yBAA0B,CAAE,UAAA3B,EAAW,OAAAC,EAAQ,EACvDA,GAAUD,EACZ,GAAI,CACF,MAAM8B,EAAc,MAAMC,EAAY,QAAQ/B,EAAWC,CAAM,EAC/D,QAAQ,IAAI,qBAAsB6B,CAAW,EACzCA,IACFjB,EAAY,CACV,YAAa,OAAOiB,EAAY,aAAe,EAAE,EACjD,OAAQ,OAAOA,EAAY,QAAU,EAAE,EACvC,IAAK,OAAOA,EAAY,KAAO,EAAE,EACjC,MAAO,OAAOA,EAAY,OAAS,EAAE,EACrC,aAAc,OAAOA,EAAY,cAAgB,EAAE,EACnD,eAAgB,OAAOA,EAAY,gBAAkB,EAAE,EACvD,YAAa,OAAOA,EAAY,aAAe,EAAE,EACjD,MAAO,OAAOA,EAAY,OAAS,EAAE,EACrC,MAAO,OAAOA,EAAY,OAAS,EAAE,EACrC,SAAU,EAAQA,EAAY,SAC9B,sBAAuB,OAAOA,EAAY,gBAAkB,EAAE,CAAA,CAC/D,EACD,QAAQ,IAAI,iBAAkB,CAC5B,YAAa,OAAOA,EAAY,aAAe,EAAE,EACjD,OAAQ,OAAOA,EAAY,QAAU,EAAE,EACvC,IAAK,OAAOA,EAAY,KAAO,EAAE,EACjC,MAAO,OAAOA,EAAY,OAAS,EAAE,EACrC,aAAc,OAAOA,EAAY,cAAgB,EAAE,EACnD,eAAgB,OAAOA,EAAY,gBAAkB,EAAE,EACvD,YAAa,OAAOA,EAAY,aAAe,EAAE,EACjD,MAAO,OAAOA,EAAY,OAAS,EAAE,EACrC,SAAU,EAAQA,EAAY,QAAiB,CAChD,EAEL,OAASE,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CV,EAAU,CAAE,MAAO,2BAA4B,CACjD,CAEFJ,EAAW,EAAK,CAClB,GAEA,CACF,EAAG,CAACjB,EAAQD,CAAS,CAAC,EAGtB2B,EAAAA,UAAU,IAAM,EACY,SAAY,CACpC,GAAI3B,EAAW,CACb0B,EAAuB,EAAI,EAC3B,GAAI,CACF,MAAMO,EAAsB,MAAMC,EAAmB,gBAAgBlC,CAAS,EAC9EwB,EAAgBS,CAAmB,CACrC,OAASD,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CACrD,QAAA,CACEN,EAAuB,EAAK,CAC9B,CACF,CACF,GAEA,CACF,EAAG,CAAC1B,CAAS,CAAC,EAGd,MAAMmC,EAAe,IAAe,CAClC,MAAMC,EAAoC,CAAA,EAE1C,OAAKxB,EAAS,YAAY,SACxBwB,EAAU,YAAc,2BAItBxB,EAAS,aAAa,KAAA,IAAW,MAAM,OAAOA,EAAS,YAAY,CAAC,GAAK,OAAOA,EAAS,YAAY,GAAK,KAC5GwB,EAAU,aAAe,0CAG3Bd,EAAUc,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAC3C,EAEMC,EAAe,MAAOC,GAAiB,CAG3C,GAFAA,EAAE,eAAA,EAEE,GAACH,EAAA,GAAkB,CAAClC,GAAU,CAACD,GAEnC,CAAAoB,EAAU,EAAI,EAEd,GAAI,CACF,MAAMmB,EAAW,CACf,GAAG3B,EACH,eAAgBA,EAAS,uBAAyB,GAClD,aAAc,IAAI,KAAA,EAAO,YAAA,CAAY,EAGvC,MAAMmB,EAAY,WAAW/B,EAAWC,EAAQsC,CAAQ,EACxDpC,EAAS,YAAYH,CAAS,gBAAgB,CAChD,OAASgC,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,EAC3CV,EAAU,CAAE,OAAQ,2CAA4C,CAClE,QAAA,CACEF,EAAU,EAAK,CACjB,EACF,EAEMoB,EAAoB,CAACC,EAAeC,IAAkB,CAC1D,QAAQ,IAAI,kBAAmBD,EAAO,cAAeC,CAAK,EAC1D7B,EAAY8B,GAAQ,CAClB,MAAMC,EAAU,CAAE,GAAGD,EAAM,CAACF,CAAK,EAAGC,CAAA,EACpC,eAAQ,IAAI,iBAAkBE,CAAO,EAC9BA,CACT,CAAC,EAGGvB,EAAOoB,CAAK,GACdnB,EAAUqB,IAAS,CAAE,GAAGA,EAAM,CAACF,CAAK,EAAG,IAAK,CAEhD,EAEMI,EAA2BC,GAA0B,CACzDjC,MAAqB,CAAE,GAAG8B,EAAM,sBAAuBG,GAAgB,EAGnEzB,EAAO,uBACTC,MAAmB,CAAE,GAAGqB,EAAM,sBAAuB,IAAK,CAE9D,EAEMI,EAAiB,SAAY,CACjC,GAAI,GAAC9C,GAAU,CAACD,GAEhB,GAAI,CACF,MAAM+B,EAAY,WAAW/B,EAAWC,EAAQ,CAC9C,SAAU,CAACW,EAAS,QAAA,CACrB,EACDC,EAAY8B,IAAS,CAAE,GAAGA,EAAM,SAAU,CAACA,EAAK,UAAW,CAC7D,OAASX,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CACnD,CACF,EAGA,OAAIf,EAEAT,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,YACb,SAAAA,MAAC,MAAA,CAAI,UAAU,oCACb,SAAAD,EAAAA,KAACG,EAAA,CACC,GAAI,YAAYX,CAAS,iBACzB,UAAU,iFAEV,SAAA,CAAAS,EAAAA,IAACuC,EAAA,CAAU,UAAU,cAAA,CAAe,EAAE,MAAA,CAAA,CAAA,EAG1C,CAAA,CACF,EACAxC,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,qCACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,mCAAmC,qBAAS,CAAA,CAC5D,QACC,MAAA,CAAI,UAAU,MACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAA,CAAqC,EACpDA,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAA,CAAqC,EACpDA,EAAAA,IAAC,MAAA,CAAI,UAAU,+BAAA,CAAgC,CAAA,CAAA,CACjD,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAKFD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,YAEb,SAAAA,MAAC,MAAA,CAAI,UAAU,oCACb,SAAAD,EAAAA,KAACG,EAAA,CACC,GAAI,YAAYX,CAAS,iBACzB,UAAU,iFAEV,SAAA,CAAAS,EAAAA,IAACuC,EAAA,CAAU,UAAU,cAAA,CAAe,EAAE,MAAA,CAAA,CAAA,EAG1C,CAAA,CACF,EAEAxC,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,qCACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,mCAAmC,qBAAS,CAAA,CAC5D,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,wBACb,SAAAD,EAAAA,KAAC,SAAA,CACC,QAASuC,EACT,UAAW,4EACTnC,EAAS,SACL,yDACA,yDACN,8EAEA,SAAA,CAAAH,MAACwC,GAAS,UAAU,eAAe,KAAMrC,EAAS,SAAW,eAAiB,OAAQ,EACrFA,EAAS,SAAW,aAAe,UAAA,CAAA,CAAA,EAExC,EAEAH,EAAAA,IAAC,OAAI,UAAU,YACb,gBAAC,OAAA,CAAK,SAAU4B,EAAc,UAAU,YAEtC,SAAA,CAAA7B,OAAC,MAAA,CACC,SAAA,CAAAC,MAAC,QAAA,CAAM,QAAQ,cAAc,UAAU,0CAA0C,SAAA,gBAEjF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,cACH,MAAOG,EAAS,YAChB,SAAW0B,GAAME,EAAkB,cAAeF,EAAE,OAAO,KAAK,EAChE,YAAY,sCACZ,UAAW,8HACTjB,EAAO,YAAc,iBAAmB,iBAC1C,EAAA,CAAA,EAEDA,EAAO,aACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,WAAA,CAAY,CAAA,EAEjE,EAGAD,EAAAA,KAAC0C,EAAA,CACC,MAAM,wCACN,GAAG,wBACH,MAAOtC,EAAS,sBAChB,SAAW0B,GAAMO,EAAwBP,EAAE,OAAO,KAAK,EACvD,MAAOjB,EAAO,sBACd,SAAUI,EAEV,SAAA,CAAAhB,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,kCAA+B,EAC/CgB,EACChB,EAAAA,IAAC,SAAA,CAAO,SAAQ,GAAC,SAAA,yBAAA,CAAuB,EAExCc,EAAa,IAAK4B,GAChB3C,EAAAA,KAAC,SAAA,CAAwC,MAAO2C,EAAY,eACzD,SAAA,CAAA,IAAI,KAAKA,EAAY,gBAAgB,EAAE,mBAAA,EAAqB,MAAIA,EAAY,OAAO,OAAKA,EAAY,MAAA,CAAA,EAD1FA,EAAY,cAEzB,CACD,CAAA,CAAA,CAAA,EAGJ,CAAC1B,GAAuBF,EAAa,SAAW,GAC/Cd,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,4CAAA,CAA0C,SAIrF,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,SAEhE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,6CACZ,SAAAoB,EAAoB,IAAKuB,GACxB5C,EAAAA,KAAC,MAAA,CAAiB,UAAU,oBAC1B,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAI,UAAU2C,EAAO,YAAA,EAAc,QAAQ,OAAQ,GAAG,CAAC,GACvD,KAAK,SACL,MAAOA,EACP,QAASxC,EAAS,SAAWwC,EAC7B,SAAWd,GAAM,CACfE,EAAkB,SAAUF,EAAE,OAAO,KAAK,EAC1CtB,EAAkB,EAAK,CACzB,EACA,UAAU,iEAAA,CAAA,EAEZP,EAAAA,IAAC,QAAA,CAAM,QAAS,UAAU2C,EAAO,YAAA,EAAc,QAAQ,OAAQ,GAAG,CAAC,GAAI,UAAU,mCAC9E,SAAAA,CAAA,CACH,CAAA,GAfQA,CAgBV,CACD,EACH,EACA5C,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,gBACH,KAAK,SACL,MAAM,SACN,QAASM,EACT,SAAU,IAAM,CACdC,EAAkB,EAAI,EACtBwB,EAAkB,SAAU,EAAE,CAChC,EACA,UAAU,iEAAA,CAAA,QAEX,QAAA,CAAM,QAAQ,gBAAgB,UAAU,mCAAmC,SAAA,OAAA,CAE5E,CAAA,EACF,EACCzB,GACCN,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,sBACH,MAAOG,EAAS,OAChB,SAAW0B,GAAME,EAAkB,SAAUF,EAAE,OAAO,KAAK,EAC3D,YAAY,yBACZ,UAAW,8HACTjB,EAAO,OAAS,iBAAmB,iBACrC,EAAA,CAAA,EAGHA,EAAO,QACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,MAAA,CAAO,CAAA,EAE5D,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,MAAM,UAAU,0CAA0C,SAAA,MAEzE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,MACH,MAAOG,EAAS,IAChB,SAAW0B,GAAME,EAAkB,MAAOF,EAAE,OAAO,KAAK,EACxD,YAAY,8BACZ,UAAU,4IAAA,CAAA,CACZ,EACF,SAGC,MAAA,CACC,SAAA,CAAA7B,MAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,0CAA0C,SAAA,QAE3E,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,uEACb,SAAAA,EAAAA,IAAC,QAAK,UAAU,2BAA2B,aAAC,CAAA,CAC9C,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,QACH,MAAOG,EAAS,MAChB,SAAW0B,GAAME,EAAkB,QAASF,EAAE,OAAO,KAAK,EAC1D,YAAY,OACZ,UAAW,8HACTjB,EAAO,MAAQ,iBAAmB,iBACpC,EAAA,CAAA,CACF,EACF,EACCA,EAAO,OACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAA,CAAM,CAAA,EAE3D,SAIC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,eAAe,UAAU,0CAA0C,SAAA,eAElF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,uEACb,SAAAA,EAAAA,IAAC,QAAK,UAAU,2BAA2B,aAAC,CAAA,CAC9C,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,eACH,MAAOG,EAAS,aAChB,SAAW0B,GAAME,EAAkB,eAAgBF,EAAE,OAAO,KAAK,EACjE,YAAY,OACZ,UAAW,8HACTjB,EAAO,aAAe,iBAAmB,iBAC3C,EAAA,CAAA,CACF,EACF,EACCA,EAAO,cACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,YAAA,CAAa,CAAA,EAElE,SAGC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,iBAEhE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,6CACZ,UAAC,cAAe,aAAa,EAAE,IAAK4C,GACnC7C,OAAC,MAAA,CAAiB,UAAU,oBAC1B,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAI,WAAW4C,EAAO,YAAA,EAAc,QAAQ,OAAQ,GAAG,CAAC,GACxD,KAAK,iBACL,MAAOA,EACP,QAASzC,EAAS,iBAAmByC,EACrC,SAAWf,GAAM,CACfE,EAAkB,iBAAkBF,EAAE,OAAO,KAAK,CACpD,EACA,UAAU,iEAAA,CAAA,EAEZ7B,EAAAA,IAAC,QAAA,CAAM,QAAS,WAAW4C,EAAO,YAAA,EAAc,QAAQ,OAAQ,GAAG,CAAC,GAAI,UAAU,mCAC/E,SAAAA,CAAA,CACH,CAAA,GAdQA,CAeV,CACD,EACH,EACChC,EAAO,gBACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,cAAA,CAAe,CAAA,EAEpE,SAGC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,cAEhE,QACC,MAAA,CAAI,UAAU,wCACZ,SAAA,CAAC,OAAQ,YAAa,WAAY,WAAW,EAAE,IAAK6C,GACnD9C,EAAAA,KAAC,MAAA,CAAsB,UAAU,oBAC/B,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAI,eAAe6C,EAAY,YAAA,CAAa,GAC5C,KAAK,cACL,MAAOA,EACP,QAAS1C,EAAS,cAAgB0C,EAClC,SAAWhB,GAAME,EAAkB,cAAeF,EAAE,OAAO,KAAK,EAChE,UAAU,iEAAA,CAAA,EAEZ7B,EAAAA,IAAC,SAAM,QAAS,eAAe6C,EAAY,aAAa,GAAI,UAAU,mCACnE,SAAAA,IAAgB,YAAc,YAAcA,EAAY,OAAO,CAAC,EAAE,cAAgBA,EAAY,MAAM,CAAC,CAAA,CACxG,CAAA,GAZQA,CAaV,CACD,EACH,EACCjC,EAAO,aACNZ,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,WAAA,CAAY,CAAA,EAEjE,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,0CAA0C,SAAA,QAE3E,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,QACH,MAAOG,EAAS,MAChB,SAAW0B,GAAME,EAAkB,QAASF,EAAE,OAAO,KAAK,EAC1D,YAAY,6CACZ,UAAU,4IAAA,CAAA,CACZ,EACF,EAGA9B,EAAAA,KAAC0C,EAAA,CACC,MAAM,wCACN,GAAG,wBACH,MAAOtC,EAAS,sBAChB,SAAW0B,GAAMO,EAAwBP,EAAE,OAAO,KAAK,EACvD,MAAOjB,EAAO,sBACd,SAAUI,EAEV,SAAA,CAAAhB,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,kCAA+B,EAC/CgB,EACChB,EAAAA,IAAC,SAAA,CAAO,SAAQ,GAAC,SAAA,yBAAA,CAAuB,EAExCc,EAAa,IAAK4B,GAChB3C,EAAAA,KAAC,SAAA,CAAwC,MAAO2C,EAAY,eACzD,SAAA,CAAA,IAAI,KAAKA,EAAY,gBAAgB,EAAE,mBAAA,EAAqB,MAAIA,EAAY,OAAO,OAAKA,EAAY,MAAA,CAAA,EAD1FA,EAAY,cAEzB,CACD,CAAA,CAAA,CAAA,EAGJ,CAAC1B,GAAuBF,EAAa,SAAW,GAC/Cd,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,4CAAA,CAA0C,SAIrF,MAAA,CACC,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,0CAA0C,SAAA,QAE3E,EACAA,EAAAA,IAAC,WAAA,CACC,GAAG,QACH,KAAM,EACN,MAAOG,EAAS,MAChB,SAAW0B,GAAME,EAAkB,QAASF,EAAE,OAAO,KAAK,EAC1D,YAAY,sCACZ,UAAU,4IAAA,CAAA,CACZ,EACF,EAGCjB,EAAO,QACNZ,MAAC,MAAA,CAAI,UAAU,iDACb,SAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,uBAAwB,SAAAY,EAAO,MAAA,CAAO,EACrD,EAIFb,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAA,EAAAA,KAACG,EAAA,CACC,GAAI,YAAYX,CAAS,iBACzB,UAAU,wNAEV,SAAA,CAAAS,EAAAA,IAAC8C,EAAA,CAAE,UAAU,cAAA,CAAe,EAAE,QAAA,CAAA,CAAA,EAGhC/C,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,SAAUW,EACV,UAAU,wQAEV,SAAA,CAAAV,EAAAA,IAAC+C,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9BrC,EAAS,YAAc,MAAA,CAAA,CAAA,CAC1B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}