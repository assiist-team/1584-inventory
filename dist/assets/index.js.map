{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","Subscribable","listener","defaultTimeoutProvider","callback","delay","timeoutId","intervalId","TimeoutManager","_a","__privateAdd","_provider","_providerCalled","provider","__privateSet","__privateGet","timeoutManager","systemSetTimeoutZero","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","key","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","equalItems","i","aItem","bItem","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","_focused","_cleanup","_setup","onFocus","setup","focused","isFocused","focusManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultScheduler","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","fn","notifyManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","createRetryer","config","isRetryCancelled","continueFn","isResolved","cancel","cancelOptions","error","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","shouldRetry","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","defaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","_c","_d","_f","_e","_h","_g","_j","_i","_l","_k","action","reducer","fetchState","newState","hasData","initialDataUpdatedAt","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","variables","onContinue","mutationFnContext","restored","isPaused","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","index","mutationsWithSameScope","firstPendingMutation","foundMutation","defaultedFilters","event","pausedMutations","QueryCache","_queries","queryHash","queryInMap","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","defaultedOptions","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","name","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","isServerError","FirebaseError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","getExpiresInFromResponseExpiresIn","getErrorFromResponse","requestName","errorData","getHeaders","apiKey","getHeadersWithAuth","appConfig","refreshToken","headers","getAuthorizationHeader","retryIfServerError","responseExpiresIn","createInstallationRequest","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","body","request","responseValue","ms","bufferToBase64UrlSafe","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","encode","getKey","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","broadcastFidChange","callbacks","channel","getBroadcastChannel","closeBroadcastChannel","broadcastChannel","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","openDB","db","oldVersion","set","tx","objectStore","oldValue","remove","update","updateFn","store","newValue","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","clearTimedOutRequest","registrationPromiseWithError","inProgressEntry","registerInstallation","waitUntilFidRegistration","registeredInstallationEntry","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","authToken","hasAuthTokenRequestTimedOut","updatedInstallationEntry","isAuthTokenExpired","now","inProgressAuthToken","getId","installationsImpl","getToken","completeInstallationRegistration","extractAppConfig","app","getMissingValueError","configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","_getProvider","internalFactory","registerInstallations","_registerComponent","Component","registerVersion","ANALYTICS_TYPE","GA_FID_KEY","ORIGIN_KEY","FETCH_TIMEOUT_MILLIS","DYNAMIC_CONFIG_URL","GTAG_URL","logger","Logger","ERRORS","createGtagTrustedTypesScriptURL","url","err","promiseAllSettled","createTrustedTypesPolicy","policyName","policyOptions","trustedTypesPolicy","insertScriptTag","dataLayerName","measurementId","script","gtagScriptURL","getOrCreateDataLayer","dataLayer","gtagOnConfig","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","gtagParams","correspondingAppId","foundConfig","gtagOnEvent","initializationPromisesToWaitFor","gaSendToList","dynamicConfigResults","sendToId","initializationPromise","wrapGtag","gtagWrapper","command","consentAction","fieldName","customParams","wrapOrCreateGtag","gtagFunctionName","_args","findGtagScriptOnPage","scriptTags","tag","LONG_RETRY_FACTOR","BASE_INTERVAL_MILLIS","RetryData","throttleMetadata","intervalMillis","appId","metadata","defaultRetryData","fetchDynamicConfig","appFields","appUrl","errorMessage","jsonResponse","fetchDynamicConfigWithRetry","retryData","timeoutMillis","signal","AnalyticsAbortSignal","attemptFetchDynamicConfigWithRetry","throttleEndTimeMillis","backoffCount","setAbortableTimeout","isRetriableError","backoffMillis","calculateBackoffMillis","httpStatus","logEvent$1","gtagFunction","eventName","eventParams","params","validateIndexedDB","isIndexedDBAvailable","validateIndexedDBOpenable","_initializeAnalytics","dynamicConfigPromise","fidPromise","envIsValid","dynamicConfig","configProperties","AnalyticsService","gtagName","gtagCoreFunction","wrappedGtagFunction","globalInitDone","warnOnBrowserContextMismatch","mismatchedEnvMessages","isBrowserExtension","areCookiesEnabled","details","message","factory","wrappedGtag","getAnalytics","getApp","getModularInstance","analyticsProvider","initializeAnalytics","existingInstance","deepEqual","logEvent","analyticsInstance","registerAnalytics","analyticsOptions","analytics","UserRole","BudgetCategory","firebaseConfig","initializeApp","getFirestore","auth","getAuth","storage","getStorage","initializeAuthPersistence","setPersistence","browserLocalPersistence","timestampToDate","timestamp","Timestamp","dateStr","year","month","day","convertTimestamps","converted","timestampFields","convertObject","obj","field","finalResult","getCurrentUserAsync","unsubscribe","user","ensureAuthenticatedForStorage","refreshError","tokenError","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","createOrUpdateUserDocument","signOutUser","signOut","firebaseUser","userDocRef","doc","userDoc","getDoc","userData","setDoc","assignedRole","invitation","checkUserInvitation","acceptUserInvitation","usersCollection","collection","getDocs","newUserData","createUserInvitation","email","role","invitedBy","invitationId","invitationRef","invitationsRef","where","querySnapshot","updateDoc","getUserData","uid","onAuthStateChange","onAuthStateChanged","getCurrentUserWithData","appUser","AuthContext","createContext","AuthProvider","setFirebaseUser","useState","setUser","loading","setLoading","useEffect","isInitialLoad","cleanup","useAuth","useContext","Button","variant","size","className","props","baseClasses","variantClasses","sizeClasses","classes","clsx","Header","jsxs","Link","Settings","LogOut","Layout","Outlet","LoadingSpinner","Loader2","iconMap","CheckCircle","XCircle","AlertCircle","Info","colorMap","ToastItem","toast","onClose","isVisible","setIsVisible","isExiting","setIsExiting","Icon","colors","duration","timer","handleClose","X","ToastContext","useToast","ToastProvider","toasts","setToasts","generateId","showToast","useCallback","id","prev","removeToast","showSuccess","showError","showWarning","showInfo","Login","onSuccess","signIn","setError","handleSignIn","ProtectedRoute","isAuthenticated","App","Suspense","Routes","Route","Projects","ItemDetail","ProjectDetail","AddItem","EditItem","AddTransaction","EditTransaction","TransactionDetail","lazy","queryClient","ReactDOM","React","BrowserRouter"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@firebase/installations/dist/esm/index.esm2017.js","../../node_modules/@firebase/analytics/dist/esm/index.esm2017.js","../../src/types/index.ts","../../src/services/firebase.ts","../../src/contexts/AuthContext.tsx","../../src/components/ui/Button.tsx","../../src/components/layout/Header.tsx","../../src/components/layout/Layout.tsx","../../src/components/ui/LoadingSpinner.tsx","../../src/components/ui/Toast.tsx","../../src/components/ui/ToastContext.tsx","../../src/components/auth/Login.tsx","../../src/components/auth/ProtectedRoute.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #client;\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.#client = config.client;\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this,\n          mutationFnContext\n        );\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext\n        );\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.6.9\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_TIMEOUT_MS = 10000;\r\nconst PACKAGE_VERSION = `w:${version}`;\r\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nconst SERVICE = 'installations';\r\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\r\n    [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\r\n    [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\r\n    [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint({ projectId }) {\r\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* RequestStatus.COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nasync function getErrorFromResponse(requestName, response) {\r\n    const responseJson = await response.json();\r\n    const errorData = responseJson.error;\r\n    return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\r\n        requestName,\r\n        serverCode: errorData.code,\r\n        serverMessage: errorData.message,\r\n        serverStatus: errorData.status\r\n    });\r\n}\r\nfunction getHeaders({ apiKey }) {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\r\n    const headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nasync function retryIfServerError(fn) {\r\n    const result = await fn();\r\n    if (result.status >= 500 && result.status < 600) {\r\n        // Internal Server Error. Retry request.\r\n        return fn();\r\n    }\r\n    return result;\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\r\n    const endpoint = getInstallationsEndpoint(appConfig);\r\n    const headers = getHeaders(appConfig);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        fid,\r\n        authVersion: INTERNAL_AUTH_VERSION,\r\n        appId: appConfig.appId,\r\n        sdkVersion: PACKAGE_VERSION\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const registeredInstallationEntry = {\r\n            fid: responseValue.fid || fid,\r\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\r\n            refreshToken: responseValue.refreshToken,\r\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n        };\r\n        return registeredInstallationEntry;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Create Installation', response);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    const b64 = btoa(String.fromCharCode(...array));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nconst INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        const fidByteArray = new Uint8Array(17);\r\n        const crypto = self.crypto || self.msCrypto;\r\n        crypto.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\r\n        const fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return `${appConfig.appName}!${appConfig.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    const key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    const key = getKey(appConfig);\r\n    let callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    const key = getKey(appConfig);\r\n    const callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    const callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    for (const callback of callbacks) {\r\n        callback(fid);\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    const channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key, fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nlet broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = e => {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DATABASE_NAME = 'firebase-installations-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function set(appConfig, value) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await objectStore.get(key));\r\n    await objectStore.put(value, key);\r\n    await tx.done;\r\n    if (!oldValue || oldValue.fid !== value.fid) {\r\n        fidChanged(appConfig, value.fid);\r\n    }\r\n    return value;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function remove(appConfig) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nasync function update(appConfig, updateFn) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await store.get(key));\r\n    const newValue = updateFn(oldValue);\r\n    if (newValue === undefined) {\r\n        await store.delete(key);\r\n    }\r\n    else {\r\n        await store.put(newValue, key);\r\n    }\r\n    await tx.done;\r\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n        fidChanged(appConfig, newValue.fid);\r\n    }\r\n    return newValue;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nasync function getInstallationEntry(installations) {\r\n    let registrationPromise;\r\n    const installationEntry = await update(installations.appConfig, oldEntry => {\r\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\r\n        registrationPromise = entryWithPromise.registrationPromise;\r\n        return entryWithPromise.installationEntry;\r\n    });\r\n    if (installationEntry.fid === INVALID_FID) {\r\n        // FID generation failed. Waiting for the FID from the server.\r\n        return { installationEntry: await registrationPromise };\r\n    }\r\n    return {\r\n        installationEntry,\r\n        registrationPromise\r\n    };\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    const entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\r\n            return {\r\n                installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        const inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        return {\r\n            installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(installations)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nasync function registerInstallation(installations, installationEntry) {\r\n    try {\r\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\r\n        return set(installations.appConfig, registeredInstallationEntry);\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && e.customData.serverCode === 409) {\r\n            // Server returned a \"FID cannot be used\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            // Registration failed. Set FID as not registered.\r\n            await set(installations.appConfig, {\r\n                fid: installationEntry.fid,\r\n                registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n            });\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nasync function waitUntilFidRegistration(installations) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateInstallationRequest(installations.appConfig);\r\n    while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        // createInstallation request still in progress.\r\n        await sleep(100);\r\n        entry = await updateInstallationRequest(installations.appConfig);\r\n    }\r\n    if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\r\n        if (registrationPromise) {\r\n            return registrationPromise;\r\n        }\r\n        else {\r\n            // if there is no registrationPromise, entry is registered.\r\n            return installationEntry;\r\n        }\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\r\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        installation: {\r\n            sdkVersion: PACKAGE_VERSION,\r\n            appId: appConfig.appId\r\n        }\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n        return completedAuthToken;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Generate Auth Token', response);\r\n    }\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nasync function refreshAuthToken(installations, forceRefresh = false) {\r\n    let tokenPromise;\r\n    const entry = await update(installations.appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(installations.appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(installations.appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        return refreshAuthToken(installations, forceRefresh);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\r\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\r\n        await set(installations.appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) &&\r\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\r\n            await set(installations.appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function getId(installations) {\r\n    const installationsImpl = installations;\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\r\n    if (registrationPromise) {\r\n        registrationPromise.catch(console.error);\r\n    }\r\n    else {\r\n        // If the installation is already registered, update the authentication\r\n        // token if needed.\r\n        refreshAuthToken(installationsImpl).catch(console.error);\r\n    }\r\n    return installationEntry.fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getToken(installations, forceRefresh = false) {\r\n    const installationsImpl = installations;\r\n    await completeInstallationRegistration(installationsImpl);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\r\n    return authToken.token;\r\n}\r\nasync function completeInstallationRegistration(installations) {\r\n    const { registrationPromise } = await getInstallationEntry(installations);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteInstallationRequest(appConfig, installationEntry) {\r\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    const request = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (!response.ok) {\r\n        throw await getErrorFromResponse('Delete Installation', response);\r\n    }\r\n}\r\nfunction getDeleteEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function deleteInstallations(installations) {\r\n    const { appConfig } = installations;\r\n    const entry = await update(appConfig, oldEntry => {\r\n        if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n            // Delete the unregistered entry without sending a deleteInstallation request.\r\n            return undefined;\r\n        }\r\n        return oldEntry;\r\n    });\r\n    if (entry) {\r\n        if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n            // Can't delete while trying to register.\r\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\r\n        }\r\n        else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\r\n            }\r\n            else {\r\n                await deleteInstallationRequest(appConfig, entry);\r\n                await remove(appConfig);\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\r\nfunction onIdChange(installations, callback) {\r\n    const { appConfig } = installations;\r\n    addCallback(appConfig, callback);\r\n    return () => {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\r\nfunction getInstallations(app = getApp()) {\r\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\r\n    return installationsImpl;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    for (const keyName of configKeys) {\r\n        if (!app.options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INSTALLATIONS_NAME = 'installations';\r\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\r\nconst publicFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Throws if app isn't configured properly.\r\n    const appConfig = extractAppConfig(app);\r\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\r\n    const installationsImpl = {\r\n        app,\r\n        appConfig,\r\n        heartbeatServiceProvider,\r\n        _delete: () => Promise.resolve()\r\n    };\r\n    return installationsImpl;\r\n};\r\nconst internalFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Internal FIS instance relies on public FIS instance.\r\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\r\n    const installationsInternal = {\r\n        getId: () => getId(installations),\r\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\r\n    };\r\n    return installationsInternal;\r\n};\r\nfunction registerInstallations() {\r\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n}\n\n/**\r\n * The Firebase Installations Web SDK.\r\n * This SDK does not work in a Node.js environment.\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterInstallations();\r\nregisterVersion(name, version);\r\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, calculateBackoffMillis, FirebaseError, isIndexedDBAvailable, validateIndexedDBOpenable, isBrowserExtension, areCookiesEnabled, getModularInstance, deepEqual } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nconst ANALYTICS_TYPE = 'analytics';\r\n// Key to attach FID to in gtag params.\r\nconst GA_FID_KEY = 'firebase_id';\r\nconst ORIGIN_KEY = 'origin';\r\nconst FETCH_TIMEOUT_MILLIS = 60 * 1000;\r\nconst DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\r\nconst GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */]: 'A Firebase Analytics instance with the appId {$id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each appId.',\r\n    [\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */]: 'initializeAnalytics() cannot be called again with different options than those ' +\r\n        'it was initially called with. It can be called again with the same options to ' +\r\n        'return the existing instance, or getAnalytics() can be used ' +\r\n        'to get a reference to the already-initialized instance.',\r\n    [\"already-initialized-settings\" /* AnalyticsError.ALREADY_INITIALIZED_SETTINGS */]: 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    [\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */]: 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\r\n    [\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */]: 'Firebase Analytics is not supported in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    [\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */]: 'IndexedDB unavailable or restricted in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    [\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */]: 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    [\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */]: 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\r\n    [\"no-api-key\" /* AnalyticsError.NO_API_KEY */]: 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid API key.',\r\n    [\"no-app-id\" /* AnalyticsError.NO_APP_ID */]: 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid app ID.',\r\n    [\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */]: 'The \"client_id\" field is empty.',\r\n    [\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */]: 'Trusted Types detected an invalid gtag resource: {$gtagURL}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Verifies and creates a TrustedScriptURL.\r\n */\r\nfunction createGtagTrustedTypesScriptURL(url) {\r\n    if (!url.startsWith(GTAG_URL)) {\r\n        const err = ERROR_FACTORY.create(\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */, {\r\n            gtagURL: url\r\n        });\r\n        logger.warn(err.message);\r\n        return '';\r\n    }\r\n    return url;\r\n}\r\n/**\r\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\r\n * have either resolved or rejected.\r\n *\r\n * @param promises Array of promises to wait for.\r\n */\r\nfunction promiseAllSettled(promises) {\r\n    return Promise.all(promises.map(promise => promise.catch(e => e)));\r\n}\r\n/**\r\n * Creates a TrustedTypePolicy object that implements the rules passed as policyOptions.\r\n *\r\n * @param policyName A string containing the name of the policy\r\n * @param policyOptions Object containing implementations of instance methods for TrustedTypesPolicy, see {@link https://developer.mozilla.org/en-US/docs/Web/API/TrustedTypePolicy#instance_methods\r\n * | the TrustedTypePolicy reference documentation}.\r\n */\r\nfunction createTrustedTypesPolicy(policyName, policyOptions) {\r\n    // Create a TrustedTypes policy that we can use for updating src\r\n    // properties\r\n    let trustedTypesPolicy;\r\n    if (window.trustedTypes) {\r\n        trustedTypesPolicy = window.trustedTypes.createPolicy(policyName, policyOptions);\r\n    }\r\n    return trustedTypesPolicy;\r\n}\r\n/**\r\n * Inserts gtag script tag into the page to asynchronously download gtag.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction insertScriptTag(dataLayerName, measurementId) {\r\n    const trustedTypesPolicy = createTrustedTypesPolicy('firebase-js-sdk-policy', {\r\n        createScriptURL: createGtagTrustedTypesScriptURL\r\n    });\r\n    const script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    const gtagScriptURL = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\r\n    script.src = trustedTypesPolicy\r\n        ? trustedTypesPolicy === null || trustedTypesPolicy === void 0 ? void 0 : trustedTypesPolicy.createScriptURL(gtagScriptURL)\r\n        : gtagScriptURL;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/**\r\n * Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    let dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'config' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param measurementId GA Measurement ID to set config for.\r\n * @param gtagParams Gtag config params to set.\r\n */\r\nasync function gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\r\n    // If config is already fetched, we know the appId and can use it to look up what FID promise we\r\n    /// are waiting for, and wait only on that one.\r\n    const correspondingAppId = measurementIdToAppId[measurementId];\r\n    try {\r\n        if (correspondingAppId) {\r\n            await initializationPromisesMap[correspondingAppId];\r\n        }\r\n        else {\r\n            // If config is not fetched yet, wait for all configs (we don't know which one we need) and\r\n            // find the appId (if any) corresponding to this measurementId. If there is one, wait on\r\n            // that appId's initialization promise. If there is none, promise resolves and gtag\r\n            // call goes through.\r\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\r\n            const foundConfig = dynamicConfigResults.find(config => config.measurementId === measurementId);\r\n            if (foundConfig) {\r\n                await initializationPromisesMap[foundConfig.appId];\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        logger.error(e);\r\n    }\r\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, measurementId, gtagParams);\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'event' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementId GA Measurement ID to log event to.\r\n * @param gtagParams Params to log with this event.\r\n */\r\nasync function gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\r\n    try {\r\n        let initializationPromisesToWaitFor = [];\r\n        // If there's a 'send_to' param, check if any ID specified matches\r\n        // an initializeIds() promise we are waiting for.\r\n        if (gtagParams && gtagParams['send_to']) {\r\n            let gaSendToList = gtagParams['send_to'];\r\n            // Make it an array if is isn't, so it can be dealt with the same way.\r\n            if (!Array.isArray(gaSendToList)) {\r\n                gaSendToList = [gaSendToList];\r\n            }\r\n            // Checking 'send_to' fields requires having all measurement ID results back from\r\n            // the dynamic config fetch.\r\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\r\n            for (const sendToId of gaSendToList) {\r\n                // Any fetched dynamic measurement ID that matches this 'send_to' ID\r\n                const foundConfig = dynamicConfigResults.find(config => config.measurementId === sendToId);\r\n                const initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\r\n                if (initializationPromise) {\r\n                    initializationPromisesToWaitFor.push(initializationPromise);\r\n                }\r\n                else {\r\n                    // Found an item in 'send_to' that is not associated\r\n                    // directly with an FID, possibly a group.  Empty this array,\r\n                    // exit the loop early, and let it get populated below.\r\n                    initializationPromisesToWaitFor = [];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // This will be unpopulated if there was no 'send_to' field , or\r\n        // if not all entries in the 'send_to' field could be mapped to\r\n        // a FID. In these cases, wait on all pending initialization promises.\r\n        if (initializationPromisesToWaitFor.length === 0) {\r\n            /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\r\n            initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\r\n        }\r\n        // Run core gtag function with args after all relevant initialization\r\n        // promises have been resolved.\r\n        await Promise.all(initializationPromisesToWaitFor);\r\n        // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n        gtagCore(\"event\" /* GtagCommand.EVENT */, measurementId, gtagParams || {});\r\n    }\r\n    catch (e) {\r\n        logger.error(e);\r\n    }\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n */\r\nfunction wrapGtag(gtagCore, \r\n/**\r\n * Allows wrapped gtag calls to wait on whichever initialization promises are required,\r\n * depending on the contents of the gtag params' `send_to` field, if any.\r\n */\r\ninitializationPromisesMap, \r\n/**\r\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\r\n * before determining what initialization promises (which include FIDs) to wait for.\r\n */\r\ndynamicConfigPromisesList, \r\n/**\r\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\r\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\r\n * which is the key for the initialization promises map.\r\n */\r\nmeasurementIdToAppId) {\r\n    /**\r\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\r\n     * @param command Gtag command type.\r\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\r\n     * @param gtagParams Params if event is EVENT/CONFIG.\r\n     */\r\n    async function gtagWrapper(command, ...args) {\r\n        try {\r\n            // If event, check that relevant initialization promises have completed.\r\n            if (command === \"event\" /* GtagCommand.EVENT */) {\r\n                const [measurementId, gtagParams] = args;\r\n                // If EVENT, second arg must be measurementId.\r\n                await gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams);\r\n            }\r\n            else if (command === \"config\" /* GtagCommand.CONFIG */) {\r\n                const [measurementId, gtagParams] = args;\r\n                // If CONFIG, second arg must be measurementId.\r\n                await gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams);\r\n            }\r\n            else if (command === \"consent\" /* GtagCommand.CONSENT */) {\r\n                const [consentAction, gtagParams] = args;\r\n                // consentAction can be one of 'default' or 'update'.\r\n                gtagCore(\"consent\" /* GtagCommand.CONSENT */, consentAction, gtagParams);\r\n            }\r\n            else if (command === \"get\" /* GtagCommand.GET */) {\r\n                const [measurementId, fieldName, callback] = args;\r\n                gtagCore(\"get\" /* GtagCommand.GET */, measurementId, fieldName, callback);\r\n            }\r\n            else if (command === \"set\" /* GtagCommand.SET */) {\r\n                const [customParams] = args;\r\n                // If SET, second arg must be params.\r\n                gtagCore(\"set\" /* GtagCommand.SET */, customParams);\r\n            }\r\n            else {\r\n                gtagCore(command, ...args);\r\n            }\r\n        }\r\n        catch (e) {\r\n            logger.error(e);\r\n        }\r\n    }\r\n    return gtagWrapper;\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\r\n */\r\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    let gtagCore = function (..._args) {\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\r\n    return {\r\n        gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns the script tag in the DOM matching both the gtag url pattern\r\n * and the provided data layer name.\r\n */\r\nfunction findGtagScriptOnPage(dataLayerName) {\r\n    const scriptTags = window.document.getElementsByTagName('script');\r\n    for (const tag of Object.values(scriptTags)) {\r\n        if (tag.src &&\r\n            tag.src.includes(GTAG_URL) &&\r\n            tag.src.includes(dataLayerName)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Backoff factor for 503 errors, which we want to be conservative about\r\n * to avoid overloading servers. Each retry interval will be\r\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\r\n * will be ~30 seconds (with fuzzing).\r\n */\r\nconst LONG_RETRY_FACTOR = 30;\r\n/**\r\n * Base wait interval to multiplied by backoffFactor^backoffCount.\r\n */\r\nconst BASE_INTERVAL_MILLIS = 1000;\r\n/**\r\n * Stubbable retry data storage class.\r\n */\r\nclass RetryData {\r\n    constructor(throttleMetadata = {}, intervalMillis = BASE_INTERVAL_MILLIS) {\r\n        this.throttleMetadata = throttleMetadata;\r\n        this.intervalMillis = intervalMillis;\r\n    }\r\n    getThrottleMetadata(appId) {\r\n        return this.throttleMetadata[appId];\r\n    }\r\n    setThrottleMetadata(appId, metadata) {\r\n        this.throttleMetadata[appId] = metadata;\r\n    }\r\n    deleteThrottleMetadata(appId) {\r\n        delete this.throttleMetadata[appId];\r\n    }\r\n}\r\nconst defaultRetryData = new RetryData();\r\n/**\r\n * Set GET request headers.\r\n * @param apiKey App API key.\r\n */\r\nfunction getHeaders(apiKey) {\r\n    return new Headers({\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nasync function fetchDynamicConfig(appFields) {\r\n    var _a;\r\n    const { appId, apiKey } = appFields;\r\n    const request = {\r\n        method: 'GET',\r\n        headers: getHeaders(apiKey)\r\n    };\r\n    const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\r\n    const response = await fetch(appUrl, request);\r\n    if (response.status !== 200 && response.status !== 304) {\r\n        let errorMessage = '';\r\n        try {\r\n            // Try to get any error message text from server response.\r\n            const jsonResponse = (await response.json());\r\n            if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\r\n                errorMessage = jsonResponse.error.message;\r\n            }\r\n        }\r\n        catch (_ignored) { }\r\n        throw ERROR_FACTORY.create(\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */, {\r\n            httpStatus: response.status,\r\n            responseMessage: errorMessage\r\n        });\r\n    }\r\n    return response.json();\r\n}\r\n/**\r\n * Fetches dynamic config from backend, retrying if failed.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nasync function fetchDynamicConfigWithRetry(app, \r\n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\r\nretryData = defaultRetryData, timeoutMillis) {\r\n    const { appId, apiKey, measurementId } = app.options;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\r\n    }\r\n    if (!apiKey) {\r\n        if (measurementId) {\r\n            return {\r\n                measurementId,\r\n                appId\r\n            };\r\n        }\r\n        throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\r\n    }\r\n    const throttleMetadata = retryData.getThrottleMetadata(appId) || {\r\n        backoffCount: 0,\r\n        throttleEndTimeMillis: Date.now()\r\n    };\r\n    const signal = new AnalyticsAbortSignal();\r\n    setTimeout(async () => {\r\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n        signal.abort();\r\n    }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\r\n    return attemptFetchDynamicConfigWithRetry({ appId, apiKey, measurementId }, throttleMetadata, signal, retryData);\r\n}\r\n/**\r\n * Runs one retry attempt.\r\n * @param appFields Necessary app config fields.\r\n * @param throttleMetadata Ongoing metadata to determine throttling times.\r\n * @param signal Abort signal.\r\n */\r\nasync function attemptFetchDynamicConfigWithRetry(appFields, { throttleEndTimeMillis, backoffCount }, signal, retryData = defaultRetryData // for testing\r\n) {\r\n    var _a;\r\n    const { appId, measurementId } = appFields;\r\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n    // Ensures the throttle end time is honored if the last attempt timed out.\r\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n    try {\r\n        await setAbortableTimeout(signal, throttleEndTimeMillis);\r\n    }\r\n    catch (e) {\r\n        if (measurementId) {\r\n            logger.warn(`Timed out fetching this Firebase app's measurement ID from the server.` +\r\n                ` Falling back to the measurement ID ${measurementId}` +\r\n                ` provided in the \"measurementId\" field in the local Firebase config. [${e === null || e === void 0 ? void 0 : e.message}]`);\r\n            return { appId, measurementId };\r\n        }\r\n        throw e;\r\n    }\r\n    try {\r\n        const response = await fetchDynamicConfig(appFields);\r\n        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n        retryData.deleteThrottleMetadata(appId);\r\n        return response;\r\n    }\r\n    catch (e) {\r\n        const error = e;\r\n        if (!isRetriableError(error)) {\r\n            retryData.deleteThrottleMetadata(appId);\r\n            if (measurementId) {\r\n                logger.warn(`Failed to fetch this Firebase app's measurement ID from the server.` +\r\n                    ` Falling back to the measurement ID ${measurementId}` +\r\n                    ` provided in the \"measurementId\" field in the local Firebase config. [${error === null || error === void 0 ? void 0 : error.message}]`);\r\n                return { appId, measurementId };\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        const backoffMillis = Number((_a = error === null || error === void 0 ? void 0 : error.customData) === null || _a === void 0 ? void 0 : _a.httpStatus) === 503\r\n            ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\r\n            : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\r\n        // Increments backoff state.\r\n        const throttleMetadata = {\r\n            throttleEndTimeMillis: Date.now() + backoffMillis,\r\n            backoffCount: backoffCount + 1\r\n        };\r\n        // Persists state.\r\n        retryData.setThrottleMetadata(appId, throttleMetadata);\r\n        logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\r\n        return attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData);\r\n    }\r\n}\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise((resolve, reject) => {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        const timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(() => {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    const httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Shims a minimal AbortSignal (copied from Remote Config).\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nclass AnalyticsAbortSignal {\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    addEventListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    abort() {\r\n        this.listeners.forEach(listener => listener());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Event parameters to set on 'gtag' during initialization.\r\n */\r\nlet defaultEventParametersForInit;\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nasync function logEvent$1(gtagFunction, initializationPromise, eventName, eventParams, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, eventParams);\r\n        return;\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        const params = Object.assign(Object.assign({}, eventParams), { 'send_to': measurementId });\r\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, params);\r\n    }\r\n}\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\r\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nasync function setCurrentScreen$1(gtagFunction, initializationPromise, screenName, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'screen_name': screenName });\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\r\n            update: true,\r\n            'screen_name': screenName\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nasync function setUserId$1(gtagFunction, initializationPromise, id, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'user_id': id });\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\r\n            update: true,\r\n            'user_id': id\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nasync function setUserProperties$1(gtagFunction, initializationPromise, properties, options) {\r\n    if (options && options.global) {\r\n        const flatProperties = {};\r\n        for (const key of Object.keys(properties)) {\r\n            // use dot notation for merge behavior in gtag.js\r\n            flatProperties[`user_properties.${key}`] = properties[key];\r\n        }\r\n        gtagFunction(\"set\" /* GtagCommand.SET */, flatProperties);\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\r\n            update: true,\r\n            'user_properties': properties\r\n        });\r\n    }\r\n}\r\n/**\r\n * Retrieves a unique Google Analytics identifier for the web client.\r\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n */\r\nasync function internalGetGoogleAnalyticsClientId(gtagFunction, initializationPromise) {\r\n    const measurementId = await initializationPromise;\r\n    return new Promise((resolve, reject) => {\r\n        gtagFunction(\"get\" /* GtagCommand.GET */, measurementId, 'client_id', (clientId) => {\r\n            if (!clientId) {\r\n                reject(ERROR_FACTORY.create(\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */));\r\n            }\r\n            resolve(clientId);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nasync function setAnalyticsCollectionEnabled$1(initializationPromise, enabled) {\r\n    const measurementId = await initializationPromise;\r\n    window[`ga-disable-${measurementId}`] = !enabled;\r\n}\r\n/**\r\n * Consent parameters to default to during 'gtag' initialization.\r\n */\r\nlet defaultConsentSettingsForInit;\r\n/**\r\n * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of\r\n * analytics.\r\n *\r\n * @param consentSettings Maps the applicable end user consent state for gtag.js.\r\n */\r\nfunction _setConsentDefaultForInit(consentSettings) {\r\n    defaultConsentSettingsForInit = consentSettings;\r\n}\r\n/**\r\n * Sets the variable `defaultEventParametersForInit` for use in the initialization of\r\n * analytics.\r\n *\r\n * @param customParams Any custom params the user may pass to gtag.js.\r\n */\r\nfunction _setDefaultEventParametersForInit(customParams) {\r\n    defaultEventParametersForInit = customParams;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function validateIndexedDB() {\r\n    if (!isIndexedDBAvailable()) {\r\n        logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\r\n            errorInfo: 'IndexedDB is not available in this environment.'\r\n        }).message);\r\n        return false;\r\n    }\r\n    else {\r\n        try {\r\n            await validateIndexedDBOpenable();\r\n        }\r\n        catch (e) {\r\n            logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\r\n                errorInfo: e === null || e === void 0 ? void 0 : e.toString()\r\n            }).message);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\r\n * @param measurementIdToAppId Maps measurementID to appID.\r\n * @param installations _FirebaseInstallationsInternal instance.\r\n *\r\n * @returns Measurement ID.\r\n */\r\nasync function _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore, dataLayerName, options) {\r\n    var _a;\r\n    const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\r\n    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\r\n    dynamicConfigPromise\r\n        .then(config => {\r\n        measurementIdToAppId[config.measurementId] = config.appId;\r\n        if (app.options.measurementId &&\r\n            config.measurementId !== app.options.measurementId) {\r\n            logger.warn(`The measurement ID in the local Firebase config (${app.options.measurementId})` +\r\n                ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\r\n                ` To ensure analytics events are always sent to the correct Analytics property,` +\r\n                ` update the` +\r\n                ` measurement ID field in the local config or remove it from the local config.`);\r\n        }\r\n    })\r\n        .catch(e => logger.error(e));\r\n    // Add to list to track state of all dynamic config promises.\r\n    dynamicConfigPromisesList.push(dynamicConfigPromise);\r\n    const fidPromise = validateIndexedDB().then(envIsValid => {\r\n        if (envIsValid) {\r\n            return installations.getId();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    const [dynamicConfig, fid] = await Promise.all([\r\n        dynamicConfigPromise,\r\n        fidPromise\r\n    ]);\r\n    // Detect if user has already put the gtag <script> tag on this page with the passed in\r\n    // data layer name.\r\n    if (!findGtagScriptOnPage(dataLayerName)) {\r\n        insertScriptTag(dataLayerName, dynamicConfig.measurementId);\r\n    }\r\n    // Detects if there are consent settings that need to be configured.\r\n    if (defaultConsentSettingsForInit) {\r\n        gtagCore(\"consent\" /* GtagCommand.CONSENT */, 'default', defaultConsentSettingsForInit);\r\n        _setConsentDefaultForInit(undefined);\r\n    }\r\n    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n    // but since it is idempotent, we can call it multiple times.\r\n    // We keep it together with other initialization logic for better code structure.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    gtagCore('js', new Date());\r\n    // User config added first. We don't want users to accidentally overwrite\r\n    // base Firebase config properties.\r\n    const configProperties = (_a = options === null || options === void 0 ? void 0 : options.config) !== null && _a !== void 0 ? _a : {};\r\n    // guard against developers accidentally setting properties with prefix `firebase_`\r\n    configProperties[ORIGIN_KEY] = 'firebase';\r\n    configProperties.update = true;\r\n    if (fid != null) {\r\n        configProperties[GA_FID_KEY] = fid;\r\n    }\r\n    // It should be the first config command called on this GA-ID\r\n    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n    // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\r\n    // `configProperties`.\r\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, dynamicConfig.measurementId, configProperties);\r\n    // Detects if there is data that will be set on every event logged from the SDK.\r\n    if (defaultEventParametersForInit) {\r\n        gtagCore(\"set\" /* GtagCommand.SET */, defaultEventParametersForInit);\r\n        _setDefaultEventParametersForInit(undefined);\r\n    }\r\n    return dynamicConfig.measurementId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Analytics Service class.\r\n */\r\nclass AnalyticsService {\r\n    constructor(app) {\r\n        this.app = app;\r\n    }\r\n    _delete() {\r\n        delete initializationPromisesMap[this.app.options.appId];\r\n        return Promise.resolve();\r\n    }\r\n}\r\n/**\r\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\r\n * all or some of these, depending on the call's `send_to` param and the status\r\n * of the dynamic config fetches (see below).\r\n */\r\nlet initializationPromisesMap = {};\r\n/**\r\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\r\n * wait on all these to be complete in order to determine if it can selectively\r\n * wait for only certain initialization (FID) promises or if it must wait for all.\r\n */\r\nlet dynamicConfigPromisesList = [];\r\n/**\r\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\r\n * fetch completes. If already populated, gtag config calls can use this to\r\n * selectively wait for only this app's initialization promise (FID) instead of all\r\n * initialization promises.\r\n */\r\nconst measurementIdToAppId = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nlet dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nlet gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nlet gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nlet wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nlet globalInitDone = false;\r\n/**\r\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\r\n * Intended to be used if `gtag.js` script has been installed on\r\n * this page independently of Firebase Analytics, and is using non-default\r\n * names for either the `gtag` function or for `dataLayer`.\r\n * Must be called before calling `getAnalytics()` or it won't\r\n * have any effect.\r\n *\r\n * @public\r\n *\r\n * @param options - Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\n/**\r\n * Returns true if no environment mismatch is found.\r\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\r\n * error that also lists details for each mismatch found.\r\n */\r\nfunction warnOnBrowserContextMismatch() {\r\n    const mismatchedEnvMessages = [];\r\n    if (isBrowserExtension()) {\r\n        mismatchedEnvMessages.push('This is a browser extension environment.');\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        mismatchedEnvMessages.push('Cookies are not available.');\r\n    }\r\n    if (mismatchedEnvMessages.length > 0) {\r\n        const details = mismatchedEnvMessages\r\n            .map((message, index) => `(${index + 1}) ${message}`)\r\n            .join(' ');\r\n        const err = ERROR_FACTORY.create(\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */, {\r\n            errorInfo: details\r\n        });\r\n        logger.warn(err.message);\r\n    }\r\n}\r\n/**\r\n * Analytics instance factory.\r\n * @internal\r\n */\r\nfunction factory(app, installations, options) {\r\n    warnOnBrowserContextMismatch();\r\n    const appId = app.options.appId;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\r\n    }\r\n    if (!app.options.apiKey) {\r\n        if (app.options.measurementId) {\r\n            logger.warn(`The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\r\n                ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\r\n                ` provided in the \"measurementId\" field in the local Firebase config.`);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\r\n        }\r\n    }\r\n    if (initializationPromisesMap[appId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */, {\r\n            id: appId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        getOrCreateDataLayer(dataLayerName);\r\n        const { wrappedGtag, gtagCore } = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName);\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    // This map reflects the completion state of all promises for each appId.\r\n    initializationPromisesMap[appId] = _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction, dataLayerName, options);\r\n    const analyticsInstance = new AnalyticsService(app);\r\n    return analyticsInstance;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Returns an {@link Analytics} instance for the given app.\r\n *\r\n * @public\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n */\r\nfunction getAnalytics(app = getApp()) {\r\n    app = getModularInstance(app);\r\n    // Dependencies\r\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\r\n    if (analyticsProvider.isInitialized()) {\r\n        return analyticsProvider.getImmediate();\r\n    }\r\n    return initializeAnalytics(app);\r\n}\r\n/**\r\n * Returns an {@link Analytics} instance for the given app.\r\n *\r\n * @public\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n */\r\nfunction initializeAnalytics(app, options = {}) {\r\n    // Dependencies\r\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\r\n    if (analyticsProvider.isInitialized()) {\r\n        const existingInstance = analyticsProvider.getImmediate();\r\n        if (deepEqual(options, analyticsProvider.getOptions())) {\r\n            return existingInstance;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\r\n        }\r\n    }\r\n    const analyticsInstance = analyticsProvider.initialize({ options });\r\n    return analyticsInstance;\r\n}\r\n/**\r\n * This is a public static method provided to users that wraps four different checks:\r\n *\r\n * 1. Check if it's not a browser extension environment.\r\n * 2. Check if cookies are enabled in current browser.\r\n * 3. Check if IndexedDB is supported by the browser environment.\r\n * 4. Check if the current browser context is valid for using `IndexedDB.open()`.\r\n *\r\n * @public\r\n *\r\n */\r\nasync function isSupported() {\r\n    if (isBrowserExtension()) {\r\n        return false;\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        return false;\r\n    }\r\n    if (!isIndexedDBAvailable()) {\r\n        return false;\r\n    }\r\n    try {\r\n        const isDBOpenable = await validateIndexedDBOpenable();\r\n        return isDBOpenable;\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Use gtag `config` command to set `screen_name`.\r\n *\r\n * @public\r\n *\r\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\r\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\r\n *\r\n * @param analyticsInstance - The {@link Analytics} instance.\r\n * @param screenName - Screen name to set.\r\n */\r\nfunction setCurrentScreen(analyticsInstance, screenName, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setCurrentScreen$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], screenName, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Retrieves a unique Google Analytics identifier for the web client.\r\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\r\n *\r\n * @public\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n */\r\nasync function getGoogleAnalyticsClientId(analyticsInstance) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    return internalGetGoogleAnalyticsClientId(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId]);\r\n}\r\n/**\r\n * Use gtag `config` command to set `user_id`.\r\n *\r\n * @public\r\n *\r\n * @param analyticsInstance - The {@link Analytics} instance.\r\n * @param id - User ID to set.\r\n */\r\nfunction setUserId(analyticsInstance, id, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setUserId$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], id, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Use gtag `config` command to set all params specified.\r\n *\r\n * @public\r\n */\r\nfunction setUserProperties(analyticsInstance, properties, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setUserProperties$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], properties, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Sets whether Google Analytics collection is enabled for this app on this device.\r\n * Sets global `window['ga-disable-analyticsId'] = true;`\r\n *\r\n * @public\r\n *\r\n * @param analyticsInstance - The {@link Analytics} instance.\r\n * @param enabled - If true, enables collection, if false, disables it.\r\n */\r\nfunction setAnalyticsCollectionEnabled(analyticsInstance, enabled) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setAnalyticsCollectionEnabled$1(initializationPromisesMap[analyticsInstance.app.options.appId], enabled).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Adds data that will be set on every event logged from the SDK, including automatic ones.\r\n * With gtag's \"set\" command, the values passed persist on the current page and are passed with\r\n * all subsequent events.\r\n * @public\r\n * @param customParams - Any custom params the user may pass to gtag.js.\r\n */\r\nfunction setDefaultEventParameters(customParams) {\r\n    // Check if reference to existing gtag function on window object exists\r\n    if (wrappedGtagFunction) {\r\n        wrappedGtagFunction(\"set\" /* GtagCommand.SET */, customParams);\r\n    }\r\n    else {\r\n        _setDefaultEventParametersForInit(customParams);\r\n    }\r\n}\r\n/**\r\n * Sends a Google Analytics event with given `eventParams`. This method\r\n * automatically associates this logged event with this Firebase web\r\n * app instance on this device.\r\n * List of official event parameters can be found in the gtag.js\r\n * reference documentation:\r\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\r\n * | the GA4 reference documentation}.\r\n *\r\n * @public\r\n */\r\nfunction logEvent(analyticsInstance, eventName, eventParams, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    logEvent$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], eventName, eventParams, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Sets the applicable end user consent state for this web app across all gtag references once\r\n * Firebase Analytics is initialized.\r\n *\r\n * Use the {@link ConsentSettings} to specify individual consent type values. By default consent\r\n * types are set to \"granted\".\r\n * @public\r\n * @param consentSettings - Maps the applicable end user consent state for gtag.js.\r\n */\r\nfunction setConsent(consentSettings) {\r\n    // Check if reference to existing gtag function on window object exists\r\n    if (wrappedGtagFunction) {\r\n        wrappedGtagFunction(\"consent\" /* GtagCommand.CONSENT */, 'update', consentSettings);\r\n    }\r\n    else {\r\n        _setConsentDefaultForInit(consentSettings);\r\n    }\r\n}\n\nconst name = \"@firebase/analytics\";\nconst version = \"0.10.8\";\n\n/**\r\n * The Firebase Analytics Web SDK.\r\n * This SDK does not work in a Node.js environment.\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction registerAnalytics() {\r\n    _registerComponent(new Component(ANALYTICS_TYPE, (container, { options: analyticsOptions }) => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app').getImmediate();\r\n        const installations = container\r\n            .getProvider('installations-internal')\r\n            .getImmediate();\r\n        return factory(app, installations, analyticsOptions);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    _registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    registerVersion(name, version);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n    function internalFactory(container) {\r\n        try {\r\n            const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: (eventName, eventParams, options) => logEvent(analytics, eventName, eventParams, options)\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics();\n\nexport { getAnalytics, getGoogleAnalyticsClientId, initializeAnalytics, isSupported, logEvent, setAnalyticsCollectionEnabled, setConsent, setCurrentScreen, setDefaultEventParameters, setUserId, setUserProperties, settings };\n//# sourceMappingURL=index.esm2017.js.map\n","// Core types for the inventory management system\nexport interface User {\n  id: string;\n  email: string;\n  displayName: string;\n  role: UserRole;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\nexport enum UserRole {\n  OWNER = 'owner',\n  ADMIN = 'admin',\n  DESIGNER = 'designer',\n  VIEWER = 'viewer'\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  description: string;\n  clientName: string;\n  budget?: number;\n  designFee?: number;\n  budgetCategories?: ProjectBudgetCategories;\n  createdAt: Date;\n  updatedAt: Date;\n  createdBy: string;\n  settings?: ProjectSettings;\n  metadata?: ProjectMetadata;\n}\n\nexport interface ProjectBudgetCategories {\n  designFee: number;\n  furnishings: number;\n  propertyManagement: number;\n  kitchen: number;\n  install: number;\n  storageReceiving: number;\n  fuel: number;\n}\n\nexport interface ProjectSettings {\n  allowPublicAccess: boolean;\n  notificationsEnabled: boolean;\n}\n\nexport interface ProjectMetadata {\n  totalItems: number;\n  lastActivity: Date;\n  completionPercentage: number;\n}\n\nexport interface Item {\n  // Note: This interface defines the FORM field names used in AddItem/EditItem forms\n  // Field mapping to Firebase happens in the service layer:\n  // - resale_price (form) ↔ \"1584_resale_price\" (Firebase)\n  // - market_value (form) ↔ market_value (Firebase) - direct mapping\n  item_id: string;\n  description: string;\n  source: string;\n  sku: string;\n  price: string;\n  resale_price?: string;        // Form field name - maps to \"1584_resale_price\" in Firebase\n  market_value?: string;        // Direct mapping - no transformation needed\n  payment_method: string;\n  disposition: string;\n  notes?: string;\n  qr_key: string;\n  bookmark: boolean;\n  transaction_id: string;\n  project_id: string;\n  date_created: string;\n  last_updated: string;\n  images?: ItemImage[];         // Images associated with this item\n\n  // Optional transaction selection for form UI\n  selectedTransactionId?: string; // UI field for selecting transaction\n}\n\n// Note: ItemCategory and ItemStatus enums have been removed as they don't align\n// with the original Apps Script schema. The forms now use the correct field structure\n// that matches the original inventory system.\n\nexport interface ItemImage {\n  url: string;\n  alt: string;\n  isPrimary: boolean;\n  uploadedAt: Date;\n  fileName: string;\n  size: number; // in bytes\n  mimeType: string;\n  caption?: string; // Optional caption for the image\n}\n\nexport interface TransactionImage {\n  url: string;\n  fileName: string;\n  uploadedAt: Date;\n  size: number; // in bytes\n  mimeType: string;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n  depth?: number;\n  unit: 'inches' | 'cm' | 'mm';\n}\n\nexport interface ItemLocation {\n  storage: string;\n  shelf: string;\n  position: string;\n}\n\nexport interface QRCodeData {\n  data: string;\n  generatedAt: Date;\n  lastScanned?: Date;\n}\n\nexport interface FilterOptions {\n  disposition?: string;\n  source?: string;\n  status?: string; // For filtering by item status\n  category?: string; // For filtering by category\n  tags?: string[];\n  priceRange?: {\n    min: number;\n    max: number;\n  };\n  searchQuery?: string;\n}\n\nexport interface PaginationOptions {\n  page: number;\n  limit: number;\n  total?: number;\n}\n\nexport interface ApiError {\n  type: ErrorType;\n  message: string;\n  code?: string;\n  details?: any;\n}\n\nexport interface Transaction {\n  transaction_id: string;\n  project_id: string;\n  project_name: string;\n  transaction_date: string;\n  source: string;\n  transaction_type: string;\n  payment_method: string;\n  amount: string;\n  budget_category?: string;\n  notes?: string;\n  transaction_images?: TransactionImage[];\n  receipt_emailed: boolean;\n  created_at: string;\n  created_by: string;\n}\n\nexport enum BudgetCategory {\n  DESIGN_FEE = 'Design Fee',\n  FURNISHINGS = 'Furnishings',\n  PROPERTY_MANAGEMENT = 'Property Management',\n  KITCHEN = 'Kitchen',\n  INSTALL = 'Install',\n  STORAGE_RECEIVING = 'Storage & Receiving',\n  FUEL = 'Fuel'\n}\n\nexport enum ErrorType {\n  AUTHENTICATION = 'authentication',\n  AUTHORIZATION = 'authorization',\n  VALIDATION = 'validation',\n  NETWORK = 'network',\n  SERVER = 'server',\n  CLIENT = 'client'\n}\n\n// Transaction form types and validation\nexport interface TransactionFormData {\n  transaction_date: string;\n  source: string;\n  transaction_type: string;\n  payment_method: string;\n  amount: string;\n  budget_category?: string;\n  notes?: string;\n  transaction_images?: File[];\n  receipt_emailed: boolean;\n  items?: TransactionItemFormData[];\n}\n\nexport interface TransactionItemFormData {\n  id: string; // temporary id for form management\n  description: string;\n  sku?: string;\n  price: string;\n  market_value?: string;\n  notes?: string;\n  images?: ItemImage[]; // Images associated with this item\n  imageFiles?: File[]; // File objects for upload (not persisted)\n}\n\nexport interface TransactionValidationErrors {\n  transaction_date?: string;\n  source?: string;\n  transaction_type?: string;\n  payment_method?: string;\n  amount?: string;\n  budget_category?: string;\n  notes?: string;\n  transaction_images?: string;\n  receipt_emailed?: string;\n  items?: string; // General error for items\n  general?: string; // General form error\n}\n\nexport interface TransactionItemValidationErrors {\n  description?: string;\n  sku?: string;\n  price?: string;\n  market_value?: string;\n  notes?: string;\n}\n\nexport interface TransactionFormProps {\n  projectId: string;\n  transactionId?: string;\n  onSubmit: (data: TransactionFormData) => Promise<void>;\n  onCancel: () => void;\n  initialData?: Partial<TransactionFormData>;\n  isEditing?: boolean;\n}\n\n// Utility type for date values that might be Firestore Timestamp, Date, string, or number\nexport type DateValue = Date | string | number | { toDate?: () => Date; seconds?: number; nanoseconds?: number } | null | undefined\n","import { initializeApp } from 'firebase/app'\nimport { getFirestore, Timestamp, doc, setDoc, getDoc, collection, getDocs, query, where, updateDoc } from 'firebase/firestore'\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut, User, onAuthStateChanged, setPersistence, browserLocalPersistence } from 'firebase/auth'\nimport { getStorage } from 'firebase/storage'\nimport { getAnalytics } from 'firebase/analytics'\nimport { User as AppUser, UserRole } from '../types'\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID,\n  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\n\n// Initialize Firebase services\nexport const db = getFirestore(app)\nexport const auth = getAuth(app)\nexport const storage = getStorage(app)\n\n// Configure Firebase Auth to use local persistence for persistent login\n// This ensures users stay logged in across browser sessions\nexport const initializeAuthPersistence = async (): Promise<void> => {\n  if (typeof window !== 'undefined') {\n    try {\n      await setPersistence(auth, browserLocalPersistence)\n      console.log('Firebase Auth persistence set to LOCAL - users will stay logged in across browser sessions')\n    } catch (error) {\n      console.error('Error setting Firebase Auth persistence:', error)\n      throw error\n    }\n  }\n}\n\n\n// Initialize Analytics (only in browser)\nlet analytics: any = null\nif (typeof window !== 'undefined') {\n  analytics = getAnalytics(app)\n}\n\nexport { analytics }\n\n// Enable offline persistence\nif (typeof window !== 'undefined') {\n  // Note: enableNetworkPersistence has been deprecated and removed in newer Firebase versions\n  // This would typically be handled by Firestore's built-in offline persistence\n  console.log('Firestore offline persistence is enabled by default in modern Firebase versions')\n}\n\n// Helper function to get current user (returns null if not authenticated)\nexport const getCurrentUser = (): Promise<User | null> => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      unsubscribe()\n      resolve(user) // Resolve with user or null\n    }, reject)\n  })\n}\n\n// Utility function to convert Firestore Timestamp to JavaScript Date\nexport const timestampToDate = (timestamp: any): Date => {\n  if (timestamp instanceof Timestamp) {\n    return timestamp.toDate()\n  }\n  if (timestamp instanceof Date) {\n    return timestamp\n  }\n  if (typeof timestamp === 'string') {\n    // Handle date-only strings (YYYY-MM-DD) by creating date at midnight local time\n    const dateStr = timestamp.trim()\n    if (/^\\d{4}-\\d{2}-\\d{2}$/.test(dateStr)) {\n      // It's a date-only string, create Date object for that date at midnight local time\n      // This avoids timezone conversion issues\n      const [year, month, day] = dateStr.split('-').map(Number)\n      return new Date(year, month - 1, day) // month is 0-indexed\n    }\n    return new Date(timestamp)\n  }\n  // If it's already a number (milliseconds), create a Date from it\n  if (typeof timestamp === 'number') {\n    return new Date(timestamp)\n  }\n  // If it's null or undefined, return current date\n  if (!timestamp) {\n    return new Date()\n  }\n  // Try to parse as ISO string\n  try {\n    return new Date(timestamp)\n  } catch (error) {\n    console.warn('Failed to convert timestamp to date:', timestamp, error)\n    return new Date()\n  }\n}\n\n// Utility function to convert Firestore document data with Timestamp conversion\nexport const convertTimestamps = (data: any): any => {\n  console.log('convertTimestamps - input data:', data)\n  console.log('convertTimestamps - transaction_images in input:', data.transaction_images)\n\n  if (!data || typeof data !== 'object') {\n    return data\n  }\n\n  const converted: any = { ...data }\n\n  // Convert known timestamp fields (transaction_date should remain as string)\n  const timestampFields = ['createdAt', 'updatedAt', 'lastActivity', 'uploadedAt', 'generatedAt', 'lastScanned']\n\n  const convertObject = (obj: any): any => {\n    if (!obj || typeof obj !== 'object') {\n      return obj\n    }\n\n    const result: any = { ...obj }\n\n    // Handle arrays of objects FIRST\n    if (Array.isArray(result)) {\n      console.log('convertTimestamps - processing array:', result)\n      return result.map((item: any) => {\n        console.log('convertTimestamps - processing array item:', item)\n        return convertObject(item)\n      })\n    }\n\n    // Convert timestamp fields\n    timestampFields.forEach(field => {\n      if (result[field]) {\n        console.log('convertTimestamps - converting timestamp field:', field, result[field])\n        result[field] = timestampToDate(result[field])\n      }\n    })\n\n    // Handle nested objects and arrays (but arrays get special treatment)\n    Object.keys(result).forEach(key => {\n      if (result[key] && typeof result[key] === 'object') {\n        if (Array.isArray(result[key])) {\n          console.log('convertTimestamps - processing array field:', key, result[key])\n          result[key] = result[key].map((item: any) => convertObject(item))\n        } else {\n          console.log('convertTimestamps - recursing into nested object:', key, result[key])\n          result[key] = convertObject(result[key])\n        }\n      }\n    })\n\n    return result\n  }\n\n  const finalResult = convertObject(converted)\n  console.log('convertTimestamps - final result:', finalResult)\n  console.log('convertTimestamps - transaction_images in final result:', finalResult.transaction_images)\n  return finalResult\n}\n\n// Removed anonymous authentication - all users must sign in with Google\n// This ensures all actions are traceable to specific users\n\n// Get current authenticated user (waits for auth state to be ready)\nexport const getCurrentUserAsync = async (): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      unsubscribe()\n      resolve(user)\n    })\n\n    // Timeout after 5 seconds\n    setTimeout(() => {\n      unsubscribe()\n      reject(new Error('Authentication state check timeout'))\n    }, 5000)\n  })\n}\n\n// Enhanced authentication check for storage operations\nexport const ensureAuthenticatedForStorage = async (): Promise<void> => {\n  try {\n    console.log('Ensuring authentication for storage operations...')\n\n    // Wait for authentication to be ready (with timeout)\n    const user = await getCurrentUserAsync()\n\n    if (!user) {\n      console.warn('No authenticated user found for storage operations')\n      // Don't throw error immediately - allow operations to proceed and fail naturally if needed\n      return\n    }\n\n    // Verify the user has a valid ID token (but don't fail hard if token refresh fails)\n    try {\n      const token = await user.getIdToken()\n      if (!token) {\n        console.warn('User authenticated but no valid token, attempting refresh...')\n        try {\n          await user.reload()\n          const newToken = await user.getIdToken()\n          if (!newToken) {\n            console.warn('Token refresh failed, but proceeding with current auth state')\n          }\n        } catch (refreshError) {\n          console.warn('Token refresh error:', refreshError)\n          // Continue anyway - the operation might still work\n        }\n      }\n    } catch (tokenError) {\n      console.warn('Token verification error:', tokenError)\n      // Don't throw - allow the operation to proceed\n    }\n\n    console.log('Storage authentication check completed for user:', user.uid)\n  } catch (error) {\n    console.error('Error during storage authentication check:', error)\n    // Don't throw - allow operations to proceed and fail naturally if needed\n  }\n}\n\n// Get current authenticated user synchronously\nexport const getCurrentUserSync = (): User | null => {\n  return auth.currentUser\n}\n\n// Google Authentication Provider\nconst googleProvider = new GoogleAuthProvider()\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n})\n\n// Sign in with Google\nexport const signInWithGoogle = async (): Promise<User> => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider)\n    const user = result.user\n\n    // Create or update user document in Firestore\n    await createOrUpdateUserDocument(user)\n\n    return user\n  } catch (error) {\n    console.error('Google sign-in error:', error)\n    throw error\n  }\n}\n\n// Sign out\nexport const signOutUser = async (): Promise<void> => {\n  try {\n    await signOut(auth)\n  } catch (error) {\n    console.error('Sign-out error:', error)\n    throw error\n  }\n}\n\n// Create or update user document in Firestore\nexport const createOrUpdateUserDocument = async (firebaseUser: User): Promise<void> => {\n  try {\n    const userDocRef = doc(db, 'users', firebaseUser.uid)\n    const userDoc = await getDoc(userDocRef)\n\n    const userData: Partial<AppUser> = {\n      id: firebaseUser.uid,\n      email: firebaseUser.email || '',\n      displayName: firebaseUser.displayName || firebaseUser.email?.split('@')[0] || 'User',\n      lastLogin: new Date(),\n    }\n\n    if (userDoc.exists()) {\n      // Update existing user\n      await setDoc(userDocRef, userData, { merge: true })\n    } else {\n      // Check for pending invitation\n      let assignedRole = UserRole.VIEWER // Default role\n\n      if (firebaseUser.email) {\n        const invitation = await checkUserInvitation(firebaseUser.email)\n        if (invitation) {\n          assignedRole = invitation.role\n          // Accept the invitation\n          await acceptUserInvitation(invitation.invitationId)\n          console.log('User invited with role:', assignedRole)\n        } else {\n          // Check if this is the first user (for owner assignment)\n          const usersCollection = collection(db, 'users')\n          const usersSnapshot = await getDocs(usersCollection)\n          const isFirstUser = usersSnapshot.empty\n\n          if (isFirstUser) {\n            assignedRole = UserRole.OWNER // First user becomes owner\n          }\n        }\n      }\n\n      // Create new user\n      const newUserData: AppUser = {\n        ...userData as AppUser,\n        role: assignedRole,\n        createdAt: new Date(),\n        lastLogin: new Date(),\n      }\n      await setDoc(userDocRef, newUserData)\n    }\n  } catch (error) {\n    console.error('Error creating/updating user document:', error)\n    throw error\n  }\n}\n\n// Create user invitation\nexport const createUserInvitation = async (email: string, role: UserRole, invitedBy: string): Promise<void> => {\n  try {\n    const invitationId = `${email.replace('@', '_').replace('.', '_')}_${Date.now()}`\n    const invitationRef = doc(db, 'invitations', invitationId)\n\n    await setDoc(invitationRef, {\n      email,\n      role,\n      invitedBy,\n      status: 'pending',\n      createdAt: new Date(),\n      expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days\n    })\n\n    console.log('Invitation created for:', email)\n  } catch (error) {\n    console.error('Error creating invitation:', error)\n    throw error\n  }\n}\n\n// Check if user has pending invitation\nexport const checkUserInvitation = async (email: string): Promise<{ role: UserRole; invitationId: string } | null> => {\n  try {\n    const invitationsRef = collection(db, 'invitations')\n    const q = query(\n      invitationsRef,\n      where('email', '==', email),\n      where('status', '==', 'pending')\n    )\n\n    const querySnapshot = await getDocs(q)\n    if (!querySnapshot.empty) {\n      const invitation = querySnapshot.docs[0].data()\n      const invitationId = querySnapshot.docs[0].id\n\n      // Check if invitation is expired\n      if (invitation.expiresAt.toDate() < new Date()) {\n        // Mark as expired\n        await updateDoc(doc(db, 'invitations', invitationId), {\n          status: 'expired'\n        })\n        return null\n      }\n\n      return {\n        role: invitation.role,\n        invitationId\n      }\n    }\n\n    return null\n  } catch (error) {\n    console.error('Error checking invitation:', error)\n    return null\n  }\n}\n\n// Accept user invitation\nexport const acceptUserInvitation = async (invitationId: string): Promise<void> => {\n  try {\n    await updateDoc(doc(db, 'invitations', invitationId), {\n      status: 'accepted',\n      acceptedAt: new Date(),\n    })\n\n    console.log('Invitation accepted:', invitationId)\n  } catch (error) {\n    console.error('Error accepting invitation:', error)\n    throw error\n  }\n}\n\n// Get user data from Firestore\nexport const getUserData = async (uid: string): Promise<AppUser | null> => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', uid))\n    if (userDoc.exists()) {\n      return userDoc.data() as AppUser\n    }\n    return null\n  } catch (error) {\n    console.error('Error fetching user data:', error)\n    return null\n  }\n}\n\n// Auth state observer\nexport const onAuthStateChange = (callback: (user: User | null) => void) => {\n  return onAuthStateChanged(auth, callback)\n}\n\n// Check if user is authenticated\nexport const isAuthenticated = (): boolean => {\n  return auth.currentUser !== null\n}\n\n// Get current user with app user data\nexport const getCurrentUserWithData = async (): Promise<{ firebaseUser: User | null; appUser: AppUser | null }> => {\n  const firebaseUser = auth.currentUser\n  if (!firebaseUser) {\n    return { firebaseUser: null, appUser: null }\n  }\n\n  const appUser = await getUserData(firebaseUser.uid)\n  return { firebaseUser, appUser }\n}\n\n\nexport default app\n","import { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { User as FirebaseUser } from 'firebase/auth'\nimport {\n  onAuthStateChange,\n  signInWithGoogle,\n  signOutUser,\n  getCurrentUserWithData,\n  createOrUpdateUserDocument,\n  initializeAuthPersistence\n} from '../services/firebase'\nimport { User, UserRole } from '../types'\n\ninterface AuthContextType {\n  firebaseUser: FirebaseUser | null\n  user: User | null\n  loading: boolean\n  signIn: () => Promise<void>\n  signOut: () => Promise<void>\n  isAuthenticated: boolean\n  hasRole: (role: UserRole) => boolean\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null)\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let isInitialLoad = true\n\n    // Initialize auth persistence first, then set up auth state listener\n    const initializeAuth = async () => {\n      try {\n        // Ensure auth persistence is properly configured before listening to auth state\n        await initializeAuthPersistence()\n        console.log('Auth persistence initialized successfully')\n      } catch (error) {\n        console.error('Failed to initialize auth persistence:', error)\n        // Continue anyway - the auth state listener should still work\n      }\n\n      // Listen for auth state changes\n      const unsubscribe = onAuthStateChange(async (firebaseUser) => {\n        setFirebaseUser(firebaseUser)\n\n        if (firebaseUser) {\n          try {\n            // First, ensure the user document exists\n            await createOrUpdateUserDocument(firebaseUser)\n\n            // Then fetch the user data - this is critical for proper authentication\n            const { appUser } = await getCurrentUserWithData()\n            setUser(appUser)\n\n            // Ensure we have a valid user with email before considering auth complete\n            if (appUser?.email) {\n              console.log('User authentication completed successfully:', appUser.email)\n            } else {\n              console.warn('User document created but no email found in user data')\n              setUser(null)\n            }\n          } catch (error) {\n            console.error('Error fetching user data:', error)\n            setUser(null)\n          }\n        } else {\n          setUser(null)\n        }\n\n        // Only set loading to false on the initial load\n        if (isInitialLoad) {\n          setLoading(false)\n          isInitialLoad = false\n        }\n      })\n\n      return unsubscribe\n    }\n\n    const cleanup = initializeAuth()\n\n    return () => {\n      cleanup.then(unsubscribe => unsubscribe?.())\n    }\n  }, [])\n\n  const signIn = async () => {\n    try {\n      setLoading(true)\n      const firebaseUser = await signInWithGoogle()\n\n      // Ensure user document is created immediately after sign in\n      await createOrUpdateUserDocument(firebaseUser)\n\n      // Fetch the complete user data\n      const { appUser } = await getCurrentUserWithData()\n      setUser(appUser)\n    } catch (error) {\n      console.error('Sign in error:', error)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const signOut = async () => {\n    try {\n      setLoading(true)\n      await signOutUser()\n    } catch (error) {\n      console.error('Sign out error:', error)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const hasRole = (role: UserRole): boolean => {\n    return user?.role === role || user?.role === UserRole.OWNER || user?.role === UserRole.ADMIN\n  }\n\n  const value: AuthContextType = {\n    firebaseUser,\n    user,\n    loading,\n    signIn,\n    signOut,\n    isAuthenticated: !!firebaseUser,\n    hasRole\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n","import React, { ButtonHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger'\n  size?: 'sm' | 'md' | 'lg'\n  children: React.ReactNode\n}\n\nexport function Button({\n  variant = 'primary',\n  size = 'md',\n  className,\n  children,\n  ...props\n}: ButtonProps) {\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed'\n\n  const variantClasses = {\n    primary: 'text-white bg-primary-600 hover:bg-primary-700 focus:ring-primary-500 border border-transparent',\n    secondary: 'text-gray-700 bg-white hover:bg-gray-50 focus:ring-primary-500 border border-gray-300',\n    danger: 'text-white bg-red-600 hover:bg-red-700 focus:ring-red-500 border border-transparent'\n  }\n\n  const sizeClasses = {\n    sm: 'px-3 py-2 text-sm rounded-md',\n    md: 'px-4 py-2 text-sm rounded-md',\n    lg: 'px-6 py-3 text-base rounded-md'\n  }\n\n  const classes = clsx(\n    baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    className\n  )\n\n  return (\n    <button className={classes} {...props}>\n      {children}\n    </button>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { Button } from '../ui/Button'\nimport { LogOut, Settings } from 'lucide-react'\n\nexport default function Header() {\n  const { user, signOut, loading } = useAuth()\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex h-16 justify-between items-center flex-wrap gap-2\">\n          {/* Left side */}\n          <div className=\"flex items-center\">\n            {/* Logo/Brand */}\n            <Link to=\"/\" className=\"text-xl font-bold text-gray-900\">\n              1584\n            </Link>\n          </div>\n\n          {/* Right side */}\n          <div className=\"flex items-center\">\n            {user && (\n              <div className=\"flex items-center space-x-2\">\n                <Link\n                  to=\"/settings\"\n                  className=\"flex items-center text-sm text-gray-700 hover:text-gray-900\"\n                  title=\"Settings\"\n                >\n                  <Settings className=\"h-4 w-4\" />\n                </Link>\n                <Button\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  onClick={signOut}\n                  disabled={loading}\n                  className=\"flex items-center\"\n                  title=\"Sign Out\"\n                >\n                  <LogOut className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","import { Outlet } from 'react-router-dom'\nimport Header from './Header'\n\ninterface LayoutProps {\n  children?: React.ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Main content area */}\n      <div className=\"flex flex-col\">\n        <Header />\n\n        <main className=\"flex-1 py-6\">\n          <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n            {children || <Outlet />}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n","import { Loader2 } from 'lucide-react'\nimport clsx from 'clsx'\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  className?: string\n}\n\nexport default function LoadingSpinner({ size = 'md', className }: LoadingSpinnerProps) {\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-8 w-8',\n    lg: 'h-12 w-12'\n  }\n\n  return (\n    <div className={clsx('flex items-center justify-center', className)}>\n      <Loader2 className={clsx('animate-spin text-primary-600', sizeClasses[size])} />\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { CheckCircle, XCircle, X, AlertCircle, Info } from 'lucide-react'\nimport { clsx } from 'clsx'\n\nexport interface Toast {\n  id: string\n  message: string\n  type: 'success' | 'error' | 'info' | 'warning'\n  duration?: number\n}\n\ninterface ToastProps {\n  toast: Toast\n  onClose: (id: string) => void\n}\n\nconst iconMap = {\n  success: CheckCircle,\n  error: XCircle,\n  warning: AlertCircle,\n  info: Info,\n}\n\nconst colorMap = {\n  success: {\n    container: 'bg-green-50 border-green-200',\n    icon: 'text-green-400',\n    text: 'text-green-800',\n    button: 'text-green-400 hover:bg-green-100',\n  },\n  error: {\n    container: 'bg-red-50 border-red-200',\n    icon: 'text-red-400',\n    text: 'text-red-800',\n    button: 'text-red-400 hover:bg-red-100',\n  },\n  warning: {\n    container: 'bg-yellow-50 border-yellow-200',\n    icon: 'text-yellow-400',\n    text: 'text-yellow-800',\n    button: 'text-yellow-400 hover:bg-yellow-100',\n  },\n  info: {\n    container: 'bg-blue-50 border-blue-200',\n    icon: 'text-blue-400',\n    text: 'text-blue-800',\n    button: 'text-blue-400 hover:bg-blue-100',\n  },\n}\n\nfunction ToastItem({ toast, onClose }: ToastProps) {\n  const [isVisible, setIsVisible] = useState(false)\n  const [isExiting, setIsExiting] = useState(false)\n\n  const Icon = iconMap[toast.type]\n  const colors = colorMap[toast.type]\n\n  useEffect(() => {\n    // Trigger entrance animation\n    setIsVisible(true)\n\n    // Auto-close after duration\n    const duration = toast.duration || (toast.type === 'error' ? 6000 : 4000)\n    const timer = setTimeout(() => {\n      handleClose()\n    }, duration)\n\n    return () => clearTimeout(timer)\n  }, [toast.duration, toast.type])\n\n  const handleClose = () => {\n    setIsExiting(true)\n    setTimeout(() => {\n      onClose(toast.id)\n    }, 300) // Match transition duration\n  }\n\n  return (\n    <div\n      className={clsx(\n        'flex items-center justify-between p-4 mb-3 border rounded-lg shadow-sm transition-all duration-300 transform',\n        colors.container,\n        isVisible && !isExiting\n          ? 'translate-x-0 opacity-100'\n          : '-translate-x-full opacity-0'\n      )}\n    >\n      <div className=\"flex items-center\">\n        <Icon className={clsx('h-5 w-5 mr-3 flex-shrink-0', colors.icon)} />\n        <p className={clsx('text-sm font-medium', colors.text)}>\n          {toast.message}\n        </p>\n      </div>\n      <button\n        onClick={handleClose}\n        className={clsx(\n          'ml-4 inline-flex rounded-md p-1.5 transition-colors duration-200',\n          colors.button\n        )}\n      >\n        <X className=\"h-4 w-4\" />\n      </button>\n    </div>\n  )\n}\n\nexport default ToastItem\n","import React, { createContext, useContext, useState, useCallback } from 'react'\nimport ToastItem, { Toast } from './Toast'\n\ninterface ToastContextType {\n  showToast: (message: string, type: Toast['type'], duration?: number) => string\n  showSuccess: (message: string, duration?: number) => string\n  showError: (message: string, duration?: number) => string\n  showWarning: (message: string, duration?: number) => string\n  showInfo: (message: string, duration?: number) => string\n  removeToast: (id: string) => void\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined)\n\nexport function useToast() {\n  const context = useContext(ToastContext)\n  if (context === undefined) {\n    throw new Error('useToast must be used within a ToastProvider')\n  }\n  return context\n}\n\ninterface ToastProviderProps {\n  children: React.ReactNode\n}\n\nexport function ToastProvider({ children }: ToastProviderProps) {\n  const [toasts, setToasts] = useState<Toast[]>([])\n\n  const generateId = () => Math.random().toString(36).substr(2, 9)\n\n  const showToast = useCallback((message: string, type: Toast['type'], duration?: number): string => {\n    const id = generateId()\n    const toast: Toast = { id, message, type, duration }\n\n    setToasts(prev => [...prev, toast])\n\n    // Auto-remove toast after animation\n    setTimeout(() => {\n      removeToast(id)\n    }, (duration || (type === 'error' ? 6000 : 4000)) + 300)\n\n    return id\n  }, [])\n\n  const showSuccess = useCallback((message: string, duration?: number) => {\n    return showToast(message, 'success', duration)\n  }, [showToast])\n\n  const showError = useCallback((message: string, duration?: number) => {\n    return showToast(message, 'error', duration)\n  }, [showToast])\n\n  const showWarning = useCallback((message: string, duration?: number) => {\n    return showToast(message, 'warning', duration)\n  }, [showToast])\n\n  const showInfo = useCallback((message: string, duration?: number) => {\n    return showToast(message, 'info', duration)\n  }, [showToast])\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id))\n  }, [])\n\n  const value: ToastContextType = {\n    showToast,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    removeToast,\n  }\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      {/* Toast Container */}\n      <div className=\"fixed top-4 right-4 z-50 min-w-96 max-w-sm\">\n        {toasts.map(toast => (\n          <ToastItem\n            key={toast.id}\n            toast={toast}\n            onClose={removeToast}\n          />\n        ))}\n      </div>\n    </ToastContext.Provider>\n  )\n}\n","import { useState } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { Button } from '../ui/Button'\n\ninterface LoginProps {\n  onSuccess?: () => void\n}\n\nexport default function Login({ onSuccess }: LoginProps) {\n  const { signIn, loading } = useAuth()\n  const [error, setError] = useState<string>('')\n\n  const handleSignIn = async () => {\n    try {\n      setError('')\n      await signIn()\n      onSuccess?.()\n    } catch (err) {\n      console.error('Login error:', err)\n      setError('Failed to sign in. Please try again.')\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-primary-100\">\n            <span className=\"text-2xl font-bold text-primary-600\">1584</span>\n          </div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Welcome to 1584 Design\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Sign in to access your inventory and transaction management system\n          </p>\n        </div>\n\n        <div className=\"mt-8 space-y-6\">\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <div className=\"text-sm text-red-600\">{error}</div>\n            </div>\n          )}\n\n          <div>\n            <Button\n              onClick={handleSignIn}\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <svg className=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                />\n              </svg>\n              {loading ? 'Signing in...' : 'Continue with Google'}\n            </Button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-xs text-gray-500\">\n              By signing in, you agree to our terms of service and privacy policy.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport Login from './Login'\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode\n}\n\nexport default function ProtectedRoute({ children }: ProtectedRouteProps) {\n  const { isAuthenticated, loading, user } = useAuth()\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\n      </div>\n    )\n  }\n\n  if (!isAuthenticated) {\n    return <Login />\n  }\n\n  // Check if user has proper authentication\n  // We check for user.email instead of just firebaseUser to ensure we have complete user data\n  if (!user?.email) {\n    return <Login />\n  }\n\n  return <>{children}</>\n}\n","import { Routes, Route } from 'react-router-dom'\nimport { lazy, Suspense } from 'react'\nimport Layout from './components/layout/Layout'\nimport LoadingSpinner from './components/ui/LoadingSpinner'\nimport { ToastProvider } from './components/ui/ToastContext'\nimport { AuthProvider } from './contexts/AuthContext'\nimport ProtectedRoute from './components/auth/ProtectedRoute'\n\nfunction App() {\n  // No longer initializing anonymous authentication\n  // Users must explicitly sign in with Google for security\n\n  return (\n    <AuthProvider>\n      <ToastProvider>\n        <ProtectedRoute>\n          <Layout>\n            <Suspense fallback={<LoadingSpinner />}>\n            <Routes>\n              <Route path=\"/\" element={<Projects />} />\n              <Route path=\"/projects\" element={<Projects />} />\n              <Route path=\"/settings\" element={<Settings />} />\n              <Route path=\"/item/:id\" element={<ItemDetail />} />\n              <Route path=\"/project/:id\" element={<ProjectDetail />} />\n              <Route path=\"/project/:id/item/:itemId\" element={<ItemDetail />} />\n              <Route path=\"/project/:id/item/add\" element={<AddItem />} />\n              <Route path=\"/project/:id/edit-item/:itemId\" element={<EditItem />} />\n              <Route path=\"/project/:id/transaction/add\" element={<AddTransaction />} />\n              <Route path=\"/project/:id/transaction/:transactionId/edit\" element={<EditTransaction />} />\n              <Route path=\"/project/:id/transaction/:transactionId\" element={<TransactionDetail />} />\n            </Routes>\n            </Suspense>\n          </Layout>\n        </ProtectedRoute>\n      </ToastProvider>\n    </AuthProvider>\n  )\n}\n\n// Lazy load pages for better performance\nconst Projects = lazy(() => import('./pages/Projects'))\nconst ItemDetail = lazy(() => import('./pages/ItemDetail'))\nconst ProjectDetail = lazy(() => import('./pages/ProjectDetail'))\nconst AddItem = lazy(() => import('./pages/AddItem'))\nconst EditItem = lazy(() => import('./pages/EditItem'))\nconst AddTransaction = lazy(() => import('./pages/AddTransaction'))\nconst EditTransaction = lazy(() => import('./pages/EditTransaction'))\nconst TransactionDetail = lazy(() => import('./pages/TransactionDetail'))\nconst Settings = lazy(() => import('./pages/Settings'))\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport App from './App.tsx'\nimport './index.css'\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      gcTime: 10 * 60 * 1000, // 10 minutes (was cacheTime)\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n)\n"],"file":"assets/index.js"}