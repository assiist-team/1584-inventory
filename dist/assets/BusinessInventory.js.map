{"version":3,"file":"BusinessInventory.js","sources":["../../src/pages/BusinessInventory.tsx"],"sourcesContent":["import { Plus, Search, Package, Receipt, Filter, QrCode, Trash2, Camera, Edit, Bookmark, Copy } from 'lucide-react'\nimport { useMemo } from 'react'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Item, Transaction, ItemImage, Project } from '@/types'\nimport { unifiedItemsService, transactionService, projectService } from '@/services/inventoryService'\nimport { ImageUploadService } from '@/services/imageService'\nimport { formatCurrency, formatDate } from '@/utils/dateUtils'\nimport { useBookmark } from '@/hooks/useBookmark'\nimport { useDuplication } from '@/hooks/useDuplication'\n\ninterface FilterOptions {\n  status?: string\n  searchQuery?: string\n}\n\nexport default function BusinessInventory() {\n  const [activeTab, setActiveTab] = useState<'inventory' | 'transactions'>('inventory')\n  const [items, setItems] = useState<Item[]>([])\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [filters] = useState<FilterOptions>({\n    status: '',\n    searchQuery: ''\n  })\n  const [inventorySearchQuery, setInventorySearchQuery] = useState<string>('')\n  const [transactionSearchQuery, setTransactionSearchQuery] = useState<string>('')\n\n  // Filter state for transactions tab\n  const [showTransactionFilterMenu, setShowTransactionFilterMenu] = useState(false)\n  const [transactionFilterMode, setTransactionFilterMode] = useState<'all' | 'pending' | 'completed' | 'cancelled'>('all')\n\n  // Image upload state\n  const [uploadingImages, setUploadingImages] = useState<Set<string>>(new Set())\n\n  // Filter and selection state for inventory items (matching InventoryList.tsx)\n  const [filterMode, setFilterMode] = useState<'all' | 'bookmarked'>('all')\n  const [showFilterMenu, setShowFilterMenu] = useState(false)\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n\n  // Batch allocation state\n  const [projects, setProjects] = useState<Project[]>([])\n  const [showBatchAllocationModal, setShowBatchAllocationModal] = useState(false)\n  const [showProjectDropdown, setShowProjectDropdown] = useState(false)\n  const [batchAllocationForm, setBatchAllocationForm] = useState({\n    projectId: '',\n    space: ''\n  })\n  const [isAllocating, setIsAllocating] = useState(false)\n\n  // Close filter menus when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if ((showFilterMenu || showTransactionFilterMenu) && !event.target) return\n\n      const target = event.target as Element\n      if (!target.closest('.filter-menu') && !target.closest('.filter-button') && !target.closest('.transaction-filter-menu') && !target.closest('.transaction-filter-button')) {\n        setShowFilterMenu(false)\n        setShowTransactionFilterMenu(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showFilterMenu, showTransactionFilterMenu])\n\n  // Compute filtered items (matching InventoryList.tsx)\n  const filteredItems = useMemo(() => {\n    return items.filter(item => {\n      // Apply search filter\n      const matchesSearch = !inventorySearchQuery ||\n        item.description?.toLowerCase().includes(inventorySearchQuery.toLowerCase()) ||\n        item.sku?.toLowerCase().includes(inventorySearchQuery.toLowerCase()) ||\n        item.business_inventory_location?.toLowerCase().includes(inventorySearchQuery.toLowerCase())\n\n      // Apply status filter\n      const matchesStatus = !filters.status || item.inventory_status === filters.status\n\n      // Apply bookmark filter\n      const matchesFilter = filterMode === 'all' || (filterMode === 'bookmarked' && item.bookmark)\n\n      return matchesSearch && matchesStatus && matchesFilter\n    })\n  }, [items, inventorySearchQuery, filters.status, filterMode])\n\n  // Compute filtered transactions\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions\n\n    // Apply status filter based on filter mode\n    if (transactionFilterMode !== 'all') {\n      filtered = filtered.filter(t => t.status === transactionFilterMode)\n    }\n\n    // Apply search filter\n    if (transactionSearchQuery) {\n      const query = transactionSearchQuery.toLowerCase()\n      filtered = filtered.filter(t =>\n        t.source?.toLowerCase().includes(query) ||\n        t.transaction_type?.toLowerCase().includes(query) ||\n        t.project_name?.toLowerCase().includes(query) ||\n        t.notes?.toLowerCase().includes(query)\n      )\n    }\n\n    return filtered\n  }, [transactions, transactionFilterMode, transactionSearchQuery])\n\n  const tabs = [\n    { id: 'inventory' as const, name: 'Items', icon: Package },\n    { id: 'transactions' as const, name: 'Transactions', icon: Receipt }\n  ]\n\n  useEffect(() => {\n    loadBusinessInventory()\n    loadBusinessTransactions()\n    loadProjects()\n  }, [])\n\n  // Subscribe to real-time updates for inventory\n  useEffect(() => {\n    const unsubscribe = unifiedItemsService.subscribeToBusinessInventory(\n      (updatedItems) => {\n        setItems(updatedItems)\n        setIsLoading(false)\n      },\n      filters\n    )\n\n    return unsubscribe\n  }, [filters])\n\n  // Subscribe to real-time updates for transactions when on transactions tab\n  useEffect(() => {\n    if (activeTab !== 'transactions') return\n\n    const loadTransactionsOnTabChange = async () => {\n      await loadBusinessTransactions()\n    }\n\n    loadTransactionsOnTabChange()\n  }, [activeTab])\n\n  // Reset uploading state on unmount to prevent hanging state\n  useEffect(() => {\n    return () => {\n      setUploadingImages(new Set())\n    }\n  }, [])\n\n  const loadBusinessInventory = async () => {\n    try {\n      const data = await unifiedItemsService.getBusinessInventoryItems(filters)\n      setItems(data)\n    } catch (error) {\n      console.error('Error loading business inventory:', error)\n      setItems([])\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n\n  const loadBusinessTransactions = async () => {\n    try {\n      // Get all projects first\n      const projects = await projectService.getProjects()\n\n      // Collect all transactions from all projects that are inventory-related\n      const allTransactions: Transaction[] = []\n\n      for (const project of projects) {\n        try {\n          const projectTransactions = await transactionService.getTransactions(project.id)\n          // Filter for inventory-related transactions (those with reimbursement_type or trigger_event related to inventory)\n          const inventoryTransactions = projectTransactions.filter(t =>\n            t.reimbursement_type ||\n            t.trigger_event === 'Inventory allocation' ||\n            t.trigger_event === 'Inventory return' ||\n            t.trigger_event === 'Purchase from client' ||\n            t.source?.toLowerCase().includes('inventory')\n          )\n          allTransactions.push(...inventoryTransactions)\n        } catch (error) {\n          console.error(`Error loading transactions for project ${project.id}:`, error)\n        }\n      }\n\n      // Sort by creation date, newest first\n      allTransactions.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n      setTransactions(allTransactions)\n    } catch (error) {\n      console.error('Error loading business transactions:', error)\n      setTransactions([])\n    }\n  }\n\n  const loadProjects = async () => {\n    try {\n      const projectsData = await projectService.getProjects()\n      setProjects(projectsData)\n    } catch (error) {\n      console.error('Error loading projects:', error)\n    }\n  }\n\n  const handleInventorySearchChange = (searchQuery: string) => {\n    setInventorySearchQuery(searchQuery)\n  }\n\n  // Use centralized bookmark hook\n  const { toggleBookmark } = useBookmark<Item>({\n    items,\n    setItems,\n    updateItemService: unifiedItemsService.updateItem\n  })\n\n  // Use duplication hook for business inventory items\n  const { duplicateItem } = useDuplication({\n    items,\n    setItems,\n    duplicationService: async (itemId: string) => {\n      // Since we're using the unified service, we need to create a duplicate item\n      const originalItem = await unifiedItemsService.getItemById(itemId)\n      if (!originalItem) throw new Error('Item not found')\n\n      // Create a new item with similar data but new ID\n      const { item_id, date_created, last_updated, ...itemData } = originalItem\n      return await unifiedItemsService.createItem({\n        ...itemData,\n        inventory_status: 'available',\n        project_id: null\n      })\n    }\n  })\n\n  // Batch allocation functions\n  const openBatchAllocationModal = () => {\n    setShowBatchAllocationModal(true)\n  }\n\n  const closeBatchAllocationModal = () => {\n    setShowBatchAllocationModal(false)\n    setShowProjectDropdown(false)\n    setBatchAllocationForm({\n      projectId: '',\n      space: ''\n    })\n  }\n\n  const getSelectedProjectName = () => {\n    const selectedProject = projects.find(p => p.id === batchAllocationForm.projectId)\n    return selectedProject ? `${selectedProject.name} - ${selectedProject.clientName}` : 'Select a project...'\n  }\n\n  const handleBatchAllocationSubmit = async () => {\n    if (!batchAllocationForm.projectId || selectedItems.size === 0) return\n\n    setIsAllocating(true)\n    try {\n      const itemIds = Array.from(selectedItems)\n      await unifiedItemsService.batchAllocateItemsToProject(\n        itemIds,\n        batchAllocationForm.projectId,\n        {\n          space: batchAllocationForm.space\n        }\n      )\n\n      // Clear selections and close modal\n      setSelectedItems(new Set())\n      closeBatchAllocationModal()\n\n      // Show success message\n      alert(`Successfully allocated ${itemIds.length} items to project!`)\n\n      // Items will be updated via real-time subscription\n    } catch (error) {\n      console.error('Error batch allocating items:', error)\n      alert('Error allocating items. Please try again.')\n    } finally {\n      setIsAllocating(false)\n    }\n  }\n\n  // Image handling functions\n  const handleAddImage = async (itemId: string) => {\n    try {\n      setUploadingImages(prev => new Set(prev).add(itemId))\n\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files.length > 0) {\n        // Process all selected files sequentially\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i]\n          await processImageUpload(itemId, file, files)\n        }\n      }\n    } catch (error: any) {\n      console.error('Error adding image:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      alert('Failed to add image. Please try again.')\n    } finally {\n      setUploadingImages(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(itemId)\n        return newSet\n      })\n    }\n  }\n\n  const processImageUpload = async (itemId: string, file: File, allFiles?: File[]) => {\n    const uploadResult = await ImageUploadService.uploadItemImage(\n      file,\n      'Business Inventory',\n      itemId\n    )\n\n    const newImage: ItemImage = {\n      url: uploadResult.url,\n      alt: file.name,\n      isPrimary: true, // First image is always primary when added from list\n      uploadedAt: new Date(),\n      fileName: file.name,\n      size: file.size,\n      mimeType: file.type\n    }\n\n    // Update the item with the new image\n    await unifiedItemsService.updateItem(itemId, { images: [newImage] })\n\n    // Show success notification on the last file\n    if (allFiles && allFiles.indexOf(file) === allFiles.length - 1) {\n      const message = allFiles.length > 1 ? `${allFiles.length} images uploaded successfully!` : 'Image uploaded successfully!'\n      alert(message)\n    }\n  }\n\n\n  // Filter handlers (matching InventoryList.tsx)\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedItems(new Set(filteredItems.map(item => item.item_id)))\n    } else {\n      setSelectedItems(new Set())\n    }\n  }\n\n  const handleSelectItem = (itemId: string, checked: boolean) => {\n    const newSelected = new Set(selectedItems)\n    if (checked) {\n      newSelected.add(itemId)\n    } else {\n      newSelected.delete(itemId)\n    }\n    setSelectedItems(newSelected)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-32\">\n        <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">1584 Inventory</h1>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-base flex items-center ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"h-4 w-4 mr-2\" />\n                  {tab.name}\n                </button>\n              )\n            })}\n          </nav>\n        </div>\n\n\n        {/* Tab Content */}\n        <div className=\"px-6 py-6\">\n          {activeTab === 'inventory' && (\n            <>\n              {/* Header - Just Add Item button */}\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4 mb-2\">\n                <Link\n                  to=\"/business-inventory/add?returnTo=/business-inventory\"\n                  className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors duration-200 w-full sm:w-auto\"\n                >\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Item\n                </Link>\n              </div>\n\n              {/* Search and Controls - Sticky Container */}\n              <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 pb-0 mb-2\">\n                <div className=\"space-y-0\">\n                  {/* Search Bar */}\n                  <div className=\"relative pt-2\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Search className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-base\"\n                      placeholder=\"Search items by description, SKU, or location...\"\n                      value={inventorySearchQuery || ''}\n                      onChange={(e) => handleInventorySearchChange(e.target.value)}\n                    />\n                  </div>\n\n          {/* Select All and Bulk Actions */}\n          <div className=\"flex items-center justify-between gap-4 p-3 rounded-lg\">\n            {/* Select All */}\n            <label className=\"flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500 h-4 w-4\"\n                onChange={(e) => handleSelectAll(e.target.checked)}\n                checked={selectedItems.size === filteredItems.length && filteredItems.length > 0}\n              />\n              <span className=\"ml-3 text-sm font-medium text-gray-700\">Select all</span>\n            </label>\n\n            {/* Right section - counter and buttons */}\n            <div className=\"flex items-center gap-3\">\n\n              {/* Bulk action buttons */}\n              <div className=\"flex items-center space-x-2\">\n                {/* Filter Button */}\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowFilterMenu(!showFilterMenu)}\n                    className=\"filter-button inline-flex items-center justify-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors duration-200\"\n                    title=\"Filter items\"\n                  >\n                    <Filter className=\"h-4 w-4\" />\n                  </button>\n\n                  {/* Filter Dropdown Menu */}\n                  {showFilterMenu && (\n                    <div className=\"filter-menu absolute top-full right-0 mt-1 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                      <div className=\"py-1\">\n                        <button\n                          onClick={() => {\n                            setFilterMode('all')\n                            setShowFilterMenu(false)\n                          }}\n                          className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                            filterMode === 'all' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                          }`}\n                        >\n                          All Items\n                        </button>\n                        <button\n                          onClick={() => {\n                            setFilterMode('bookmarked')\n                            setShowFilterMenu(false)\n                          }}\n                          className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                            filterMode === 'bookmarked' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                          }`}\n                        >\n                          Bookmarked Only\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Allocate to Project Button */}\n                <button\n                  onClick={openBatchAllocationModal}\n                  className=\"inline-flex items-center justify-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors duration-200\"\n                  disabled={selectedItems.size === 0}\n                  title=\"Allocate selected items to project\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                </button>\n\n                <button\n                  className=\"inline-flex items-center justify-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 transition-colors duration-200\"\n                  disabled={selectedItems.size === 0}\n                  title=\"Generate QR Codes\"\n                >\n                  <QrCode className=\"h-4 w-4\" />\n                </button>\n\n                <button\n                  className=\"inline-flex items-center justify-center px-3 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 disabled:opacity-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-200\"\n                  disabled={selectedItems.size === 0}\n                  title=\"Delete All\"\n                >\n                  <Trash2 className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n              {/* Items List */}\n              {filteredItems.length === 0 ? (\n                <div className=\"text-center py-12 px-4\">\n                  <div className=\"mx-auto h-16 w-16 text-gray-400 -mb-1\">📦</div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                    No items found\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    {inventorySearchQuery || filters.status || filterMode === 'bookmarked'\n                      ? 'Try adjusting your search or filter criteria.'\n                      : 'No items found.'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n                  <ul className=\"divide-y divide-gray-200\">\n                    {filteredItems.map((item) => (\n                      <li key={item.item_id} className=\"relative bg-gray-50 transition-colors duration-200 hover:bg-gray-100\">\n                        {/* Top row: Controls - stays outside Link */}\n                        <div className=\"flex items-center justify-between mb-0 px-4 py-3\">\n                          <div className=\"flex items-center\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500 h-4 w-4 flex-shrink-0\"\n                              checked={selectedItems.has(item.item_id)}\n                              onChange={(e) => handleSelectItem(item.item_id, e.target.checked)}\n                            />\n                          </div>\n\n                          {/* Action buttons */}\n                          <div className=\"flex items-center gap-2\">\n                            <button\n                              className={`inline-flex items-center justify-center p-2 border text-sm font-medium rounded-md transition-colors ${\n                                item.bookmark\n                                  ? 'border-red-300 text-red-700 bg-red-50 hover:bg-red-100'\n                                  : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n                              } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n                              title={item.bookmark ? 'Remove Bookmark' : 'Add Bookmark'}\n                              onClick={(e) => {\n                                e.preventDefault()\n                                e.stopPropagation()\n                                toggleBookmark(item.item_id)\n                              }}\n                            >\n                              <Bookmark className=\"h-4 w-4\" fill={item.bookmark ? 'currentColor' : 'none'} />\n                            </button>\n                            <Link\n                              to={`/business-inventory/${item.item_id}/edit?returnTo=/business-inventory`}\n                              onClick={(e) => e.stopPropagation()}\n                              className=\"inline-flex items-center justify-center p-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors\"\n                              title=\"Edit item\"\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Link>\n                            <button\n                              onClick={(e) => {\n                                e.preventDefault()\n                                e.stopPropagation()\n                                duplicateItem(item.item_id)\n                              }}\n                              className=\"inline-flex items-center justify-center p-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors\"\n                              title=\"Duplicate item\"\n                            >\n                              <Copy className=\"h-4 w-4\" />\n                            </button>\n                            {/* Status badge moved to top-right corner */}\n                            <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                              item.inventory_status === 'available'\n                                ? 'bg-green-100 text-green-800'\n                                : item.inventory_status === 'pending'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-red-100 text-red-800'\n                            }`}>\n                              {item.inventory_status === 'available' ? 'Available' :\n                               item.inventory_status === 'pending' ? 'Allocated' : 'Sold'}\n                            </span>\n                          </div>\n                        </div>\n\n                        {/* Main tappable content - wrapped in Link */}\n                        <Link to={`/business-inventory/${item.item_id}`}>\n                          <div className=\"block bg-transparent\">\n                            <div className=\"px-4 pb-3 sm:px-6\">\n                              {/* Middle row: Thumbnail and Description - now tappable */}\n                              <div className=\"flex items-center gap-3 py-3\">\n                                <div className=\"flex-shrink-0\">\n                                  {item.images && item.images.length > 0 ? (\n                                    // Show primary image thumbnail or first image if no primary\n                                    (() => {\n                                      const primaryImage = item.images.find(img => img.isPrimary) || item.images[0]\n                                      return (\n                                        <div className=\"w-16 h-16 rounded-lg overflow-hidden border-2 border-gray-200\">\n                                          <img\n                                            src={primaryImage.url}\n                                            alt={primaryImage.alt || 'Item image'}\n                                            className=\"w-full h-full object-cover\"\n                                          />\n                                        </div>\n                                      )\n                                    })()\n                                  ) : (\n                                    // Show camera placeholder when no images\n                                    <button\n                                      onClick={(e) => {\n                                        e.preventDefault()\n                                        e.stopPropagation()\n                                        handleAddImage(item.item_id)\n                                      }}\n                                      disabled={uploadingImages.has(item.item_id)}\n                                      className=\"w-16 h-16 rounded-lg border-2 border-dashed border-gray-300 flex items-center justify-center text-gray-400 hover:text-gray-600 hover:border-gray-400 transition-colors disabled:opacity-50\"\n                                      title=\"Add image (camera or gallery)\"\n                                    >\n                                      <Camera className=\"h-6 w-6\" />\n                                    </button>\n                                  )}\n                                </div>\n\n                                {/* Item description - now tappable */}\n                                <div className=\"flex-1 min-w-0 flex items-center\">\n                                  <div>\n                                    <h3 className=\"text-base font-medium text-gray-900 line-clamp-2 break-words\">\n                                      {item.description}\n                                    </h3>\n                                    {/* Storage Location field */}\n                                    {item.business_inventory_location && (\n                                      <p className=\"text-sm text-gray-600 mt-1\">\n                                        {item.business_inventory_location}\n                                      </p>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n\n                              {/* Bottom row: Content - now tappable */}\n                              <div className=\"space-y-2\">\n                                {/* Project Price (or Purchase Price if project price not set), Source, SKU on same row */}\n                                <div className=\"flex flex-wrap items-center gap-x-4 gap-y-1 text-sm text-gray-500\">\n                                  {(item.project_price || item.purchase_price) && (\n                                    <span className=\"font-medium text-gray-700\">${item.project_price || item.purchase_price}</span>\n                                  )}\n                                  {item.source && (\n                                    <>\n                                      {(item.project_price || item.purchase_price) && <span className=\"hidden sm:inline\">•</span>}\n                                      <span className=\"font-medium text-gray-700\">{item.source}</span>\n                                    </>\n                                  )}\n                                  {item.sku && (\n                                    <>\n                                      {(item.project_price || item.purchase_price || item.source) && <span className=\"hidden sm:inline\">•</span>}\n                                      <span className=\"font-medium text-gray-700\">{item.sku}</span>\n                                    </>\n                                  )}\n                                </div>\n\n                                {/* Notes */}\n                                {item.notes && (\n                                  <p className=\"text-sm text-gray-600 line-clamp-2\">\n                                    {item.notes}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </>\n          )}\n\n          {activeTab === 'transactions' && (\n            <>\n              {/* Header - Add Transaction button */}\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2 mb-2\">\n                <Link\n                  to=\"/business-inventory/transactions/add\"\n                  className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors duration-200 w-full sm:w-auto\"\n                >\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Transaction\n                </Link>\n              </div>\n\n              {/* Search and Controls - Sticky Container */}\n              <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 pb-0 mb-2\">\n                <div className=\"space-y-0\">\n                  {/* Search Bar */}\n                  <div className=\"relative pt-2\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Search className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-base\"\n                      placeholder=\"Search transactions by source, type, project, or notes...\"\n                      value={transactionSearchQuery || ''}\n                      onChange={(e) => setTransactionSearchQuery(e.target.value)}\n                    />\n                  </div>\n\n                  {/* Filter Controls */}\n                  <div className=\"flex items-center justify-end gap-4 p-3 rounded-lg\">\n                    {/* Filter Button */}\n                    <div className=\"relative\">\n                      <button\n                        onClick={() => setShowTransactionFilterMenu(!showTransactionFilterMenu)}\n                        className={`transaction-filter-button inline-flex items-center justify-center px-3 py-2 border text-sm font-medium rounded-md transition-colors duration-200 ${\n                          transactionFilterMode === 'all'\n                            ? 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n                            : 'border-primary-500 text-primary-600 bg-primary-50 hover:bg-primary-100'\n                        }`}\n                        title=\"Filter transactions\"\n                      >\n                        <Filter className=\"h-4 w-4\" />\n                      </button>\n\n                      {/* Transaction Filter Dropdown Menu */}\n                      {showTransactionFilterMenu && (\n                        <div className=\"transaction-filter-menu absolute top-full right-0 mt-1 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                          <div className=\"py-1\">\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('all')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'all' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              All Status\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('pending')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'pending' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Pending\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('completed')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'completed' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Completed\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('cancelled')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'cancelled' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Cancelled\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Transactions List */}\n              {filteredTransactions.length === 0 ? (\n                <div className=\"text-center py-12 px-4\">\n                  <div className=\"mx-auto h-16 w-16 text-gray-400 -mb-1\">🧾</div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                    No transactions found\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    {transactionSearchQuery || transactionFilterMode !== 'all'\n                      ? 'Try adjusting your search or filter criteria.'\n                      : 'No inventory-related transactions found.'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n                  <ul className=\"divide-y divide-gray-200\">\n                    {filteredTransactions.map((transaction) => (\n                      <li key={transaction.transaction_id} className=\"relative\">\n                        <Link to={`/business-inventory/transaction/${transaction.transaction_id}`}>\n                          <div className=\"block bg-gray-50 transition-colors duration-200 hover:bg-gray-100\">\n                            <div className=\"px-4 py-4 sm:px-6\">\n                            {/* Top row: Header with source and status */}\n                            <div className=\"flex items-center justify-between mb-3\">\n                              <div className=\"flex items-center\">\n                                <h3 className=\"text-base font-medium text-gray-900\">\n                                  {transaction.source}\n                                </h3>\n                              </div>\n                              <div className=\"flex items-center flex-wrap gap-2\">\n                                <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium no-icon ${\n                                  transaction.status === 'completed'\n                                    ? 'bg-green-100 text-green-800'\n                                    : transaction.status === 'pending'\n                                    ? 'bg-yellow-100 text-yellow-800'\n                                    : 'bg-red-100 text-red-800'\n                                }`}>\n                                  {transaction.status === 'completed' ? 'Completed' :\n                                   transaction.status === 'pending' ? 'Pending' :\n                                   transaction.status === 'cancelled' ? 'Cancelled' :\n                                   transaction.status}\n                                </span>\n                              </div>\n                            </div>\n\n                            {/* Bottom row: Details */}\n                            <div className=\"space-y-2\">\n                              {/* Details row - Price, project, date */}\n                              <div className=\"flex items-center flex-wrap gap-x-4 gap-y-1 text-sm text-gray-500\">\n                                <span className=\"font-medium text-gray-700\">{formatCurrency(transaction.amount)}</span>\n                                {transaction.project_name && (\n                                  <>\n                                    <span className=\"hidden sm:inline\">•</span>\n                                    <span className=\"font-medium text-gray-700\">\n                                      {transaction.project_name}\n                                    </span>\n                                  </>\n                                )}\n                                <span className=\"hidden sm:inline\">•</span>\n                                <span className=\"font-medium text-gray-700\">\n                                  {formatDate(transaction.transaction_date)}\n                                </span>\n                              </div>\n\n                              {/* Notes */}\n                              {transaction.notes && (\n                                <p className=\"text-sm text-gray-600 line-clamp-2\">\n                                  {transaction.notes}\n                                </p>\n                              )}\n\n                            </div>\n\n                            </div>\n                          </div>\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Batch Allocation Modal */}\n      {showBatchAllocationModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                Allocate {selectedItems.size} Items to Project\n              </h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Select Project\n                  </label>\n                  <div className=\"relative mt-1\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowProjectDropdown(!showProjectDropdown)}\n                      className=\"project-dropdown-button relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    >\n                      <span className={`block truncate ${!batchAllocationForm.projectId ? 'text-gray-500' : 'text-gray-900'}`}>\n                        {getSelectedProjectName()}\n                      </span>\n                      <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                        <svg className=\"h-5 w-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </span>\n                    </button>\n\n                    {showProjectDropdown && (\n                      <div className=\"project-dropdown absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base border border-gray-200 overflow-auto focus:outline-none sm:text-sm\">\n                        {projects.map((project) => (\n                          <button\n                            key={project.id}\n                            type=\"button\"\n                            onClick={() => {\n                              setBatchAllocationForm(prev => ({ ...prev, projectId: project.id }))\n                              setShowProjectDropdown(false)\n                            }}\n                            className={`w-full text-left px-3 py-2 hover:bg-gray-50 ${\n                              batchAllocationForm.projectId === project.id ? 'bg-primary-50 text-primary-600' : 'text-gray-900'\n                            }`}\n                          >\n                            <div className=\"font-medium\">{project.name}</div>\n                            <div className=\"text-sm text-gray-500\">{project.clientName}</div>\n                          </button>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Space (Optional)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={batchAllocationForm.space}\n                    onChange={(e) => setBatchAllocationForm(prev => ({ ...prev, space: e.target.value }))}\n                    className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    placeholder=\"e.g. Living Room, Bedroom, etc.\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={closeBatchAllocationModal}\n                  className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleBatchAllocationSubmit}\n                  disabled={!batchAllocationForm.projectId || isAllocating}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 disabled:opacity-50\"\n                >\n                  {isAllocating ? 'Allocating...' : `Allocate ${selectedItems.size} Items`}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["BusinessInventory","activeTab","setActiveTab","useState","items","setItems","transactions","setTransactions","isLoading","setIsLoading","filters","inventorySearchQuery","setInventorySearchQuery","transactionSearchQuery","setTransactionSearchQuery","showTransactionFilterMenu","setShowTransactionFilterMenu","transactionFilterMode","setTransactionFilterMode","uploadingImages","setUploadingImages","filterMode","setFilterMode","showFilterMenu","setShowFilterMenu","selectedItems","setSelectedItems","projects","setProjects","showBatchAllocationModal","setShowBatchAllocationModal","showProjectDropdown","setShowProjectDropdown","batchAllocationForm","setBatchAllocationForm","isAllocating","setIsAllocating","useEffect","handleClickOutside","event","target","filteredItems","useMemo","item","matchesSearch","_a","_b","_c","matchesStatus","matchesFilter","filteredTransactions","filtered","t","query","_d","tabs","Package","Receipt","loadBusinessInventory","loadBusinessTransactions","loadProjects","unifiedItemsService","updatedItems","data","error","projectService","allTransactions","project","inventoryTransactions","transactionService","a","b","projectsData","handleInventorySearchChange","searchQuery","toggleBookmark","useBookmark","duplicateItem","useDuplication","itemId","originalItem","item_id","date_created","last_updated","itemData","openBatchAllocationModal","closeBatchAllocationModal","getSelectedProjectName","selectedProject","p","handleBatchAllocationSubmit","itemIds","handleAddImage","prev","files","ImageUploadService","i","file","processImageUpload","newSet","allFiles","newImage","message","handleSelectAll","checked","handleSelectItem","newSelected","jsx","jsxs","tab","Icon","Fragment","Link","Plus","Search","e","Filter","QrCode","Trash2","Bookmark","Edit","Copy","primaryImage","img","Camera","transaction","formatCurrency","formatDate"],"mappings":"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"}