{"version":3,"file":"BusinessInventory.js","sources":["../../src/pages/BusinessInventory.tsx"],"sourcesContent":["import { Plus, Search, Package, Receipt, Filter, QrCode, Trash2, Camera, Edit, Bookmark } from 'lucide-react'\nimport { useMemo } from 'react'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { BusinessInventoryItem, Transaction, ItemImage } from '@/types'\nimport { businessInventoryService, transactionService, projectService } from '@/services/inventoryService'\nimport { ImageUploadService } from '@/services/imageService'\nimport { formatCurrency, formatDate } from '@/utils/dateUtils'\nimport { useBookmark } from '@/hooks/useBookmark'\n\ninterface FilterOptions {\n  status?: string\n  searchQuery?: string\n}\n\nexport default function BusinessInventory() {\n  const [activeTab, setActiveTab] = useState<'inventory' | 'transactions'>('inventory')\n  const [items, setItems] = useState<BusinessInventoryItem[]>([])\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [filters] = useState<FilterOptions>({\n    status: '',\n    searchQuery: ''\n  })\n  const [inventorySearchQuery, setInventorySearchQuery] = useState<string>('')\n  const [transactionSearchQuery, setTransactionSearchQuery] = useState<string>('')\n\n  // Filter state for transactions tab\n  const [showTransactionFilterMenu, setShowTransactionFilterMenu] = useState(false)\n  const [transactionFilterMode, setTransactionFilterMode] = useState<'all' | 'pending' | 'completed' | 'cancelled'>('all')\n\n  // Image upload state\n  const [uploadingImages, setUploadingImages] = useState<Set<string>>(new Set())\n\n  // Filter and selection state for inventory items (matching InventoryList.tsx)\n  const [filterMode, setFilterMode] = useState<'all' | 'bookmarked'>('all')\n  const [showFilterMenu, setShowFilterMenu] = useState(false)\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n\n  // Close filter menus when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if ((showFilterMenu || showTransactionFilterMenu) && !event.target) return\n\n      const target = event.target as Element\n      if (!target.closest('.filter-menu') && !target.closest('.filter-button') && !target.closest('.transaction-filter-menu') && !target.closest('.transaction-filter-button')) {\n        setShowFilterMenu(false)\n        setShowTransactionFilterMenu(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showFilterMenu, showTransactionFilterMenu])\n\n  // Compute filtered items (matching InventoryList.tsx)\n  const filteredItems = useMemo(() => {\n    return items.filter(item => {\n      // Apply search filter\n      const matchesSearch = !inventorySearchQuery ||\n        item.description?.toLowerCase().includes(inventorySearchQuery.toLowerCase()) ||\n        item.sku?.toLowerCase().includes(inventorySearchQuery.toLowerCase()) ||\n        item.business_inventory_location?.toLowerCase().includes(inventorySearchQuery.toLowerCase())\n\n      // Apply status filter\n      const matchesStatus = !filters.status || item.inventory_status === filters.status\n\n      // Apply bookmark filter\n      const matchesFilter = filterMode === 'all' || (filterMode === 'bookmarked' && item.bookmark)\n\n      return matchesSearch && matchesStatus && matchesFilter\n    })\n  }, [items, inventorySearchQuery, filters.status, filterMode])\n\n  // Compute filtered transactions\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions\n\n    // Apply status filter based on filter mode\n    if (transactionFilterMode !== 'all') {\n      filtered = filtered.filter(t => t.status === transactionFilterMode)\n    }\n\n    // Apply search filter\n    if (transactionSearchQuery) {\n      const query = transactionSearchQuery.toLowerCase()\n      filtered = filtered.filter(t =>\n        t.source?.toLowerCase().includes(query) ||\n        t.transaction_type?.toLowerCase().includes(query) ||\n        t.project_name?.toLowerCase().includes(query) ||\n        t.notes?.toLowerCase().includes(query)\n      )\n    }\n\n    return filtered\n  }, [transactions, transactionFilterMode, transactionSearchQuery])\n\n  const tabs = [\n    { id: 'inventory' as const, name: 'Items', icon: Package },\n    { id: 'transactions' as const, name: 'Transactions', icon: Receipt }\n  ]\n\n  useEffect(() => {\n    loadBusinessInventory()\n    loadBusinessTransactions()\n  }, [])\n\n  // Subscribe to real-time updates for inventory\n  useEffect(() => {\n    const unsubscribe = businessInventoryService.subscribeToBusinessInventory(\n      (updatedItems) => {\n        setItems(updatedItems)\n        setIsLoading(false)\n      },\n      filters\n    )\n\n    return unsubscribe\n  }, [filters])\n\n  // Subscribe to real-time updates for transactions when on transactions tab\n  useEffect(() => {\n    if (activeTab !== 'transactions') return\n\n    const loadTransactionsOnTabChange = async () => {\n      await loadBusinessTransactions()\n    }\n\n    loadTransactionsOnTabChange()\n  }, [activeTab])\n\n  // Reset uploading state on unmount to prevent hanging state\n  useEffect(() => {\n    return () => {\n      setUploadingImages(new Set())\n    }\n  }, [])\n\n  const loadBusinessInventory = async () => {\n    try {\n      const data = await businessInventoryService.getBusinessInventoryItems(filters)\n      setItems(data)\n    } catch (error) {\n      console.error('Error loading business inventory:', error)\n      setItems([])\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n\n  const loadBusinessTransactions = async () => {\n    try {\n      // Get all projects first\n      const projects = await projectService.getProjects()\n\n      // Collect all transactions from all projects that are inventory-related\n      const allTransactions: Transaction[] = []\n\n      for (const project of projects) {\n        try {\n          const projectTransactions = await transactionService.getTransactions(project.id)\n          // Filter for inventory-related transactions (those with reimbursement_type or trigger_event related to inventory)\n          const inventoryTransactions = projectTransactions.filter(t =>\n            t.reimbursement_type ||\n            t.trigger_event === 'Inventory allocation' ||\n            t.trigger_event === 'Inventory return' ||\n            t.trigger_event === 'Purchase from client' ||\n            t.source?.toLowerCase().includes('inventory')\n          )\n          allTransactions.push(...inventoryTransactions)\n        } catch (error) {\n          console.error(`Error loading transactions for project ${project.id}:`, error)\n        }\n      }\n\n      // Sort by creation date, newest first\n      allTransactions.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n      setTransactions(allTransactions)\n    } catch (error) {\n      console.error('Error loading business transactions:', error)\n      setTransactions([])\n    }\n  }\n\n  const handleInventorySearchChange = (searchQuery: string) => {\n    setInventorySearchQuery(searchQuery)\n  }\n\n  // Use centralized bookmark hook\n  const { toggleBookmark } = useBookmark<BusinessInventoryItem>({\n    items,\n    setItems,\n    updateItemService: businessInventoryService.updateBusinessInventoryItem\n  })\n\n  // Image handling functions\n  const handleAddImage = async (itemId: string) => {\n    try {\n      setUploadingImages(prev => new Set(prev).add(itemId))\n\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files.length > 0) {\n        // Process all selected files sequentially\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i]\n          await processImageUpload(itemId, file, files)\n        }\n      }\n    } catch (error: any) {\n      console.error('Error adding image:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      alert('Failed to add image. Please try again.')\n    } finally {\n      setUploadingImages(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(itemId)\n        return newSet\n      })\n    }\n  }\n\n  const processImageUpload = async (itemId: string, file: File, allFiles?: File[]) => {\n    const uploadResult = await ImageUploadService.uploadItemImage(\n      file,\n      'Business Inventory',\n      itemId\n    )\n\n    const newImage: ItemImage = {\n      url: uploadResult.url,\n      alt: file.name,\n      isPrimary: true, // First image is always primary when added from list\n      uploadedAt: new Date(),\n      fileName: file.name,\n      size: file.size,\n      mimeType: file.type\n    }\n\n    // Update the item with the new image\n    await businessInventoryService.updateBusinessInventoryItem(itemId, { images: [newImage] })\n\n    // Show success notification on the last file\n    if (allFiles && allFiles.indexOf(file) === allFiles.length - 1) {\n      const message = allFiles.length > 1 ? `${allFiles.length} images uploaded successfully!` : 'Image uploaded successfully!'\n      alert(message)\n    }\n  }\n\n\n  // Filter handlers (matching InventoryList.tsx)\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedItems(new Set(filteredItems.map(item => item.item_id)))\n    } else {\n      setSelectedItems(new Set())\n    }\n  }\n\n  const handleSelectItem = (itemId: string, checked: boolean) => {\n    const newSelected = new Set(selectedItems)\n    if (checked) {\n      newSelected.add(itemId)\n    } else {\n      newSelected.delete(itemId)\n    }\n    setSelectedItems(newSelected)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-32\">\n        <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n\n      {/* Tabs */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-base flex items-center ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"h-4 w-4 mr-2\" />\n                  {tab.name}\n                </button>\n              )\n            })}\n          </nav>\n        </div>\n\n\n        {/* Tab Content */}\n        <div className=\"px-6 py-6\">\n          {activeTab === 'inventory' && (\n            <>\n              {/* Header - Just Add Item button */}\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4 mb-2\">\n                <Link\n                  to=\"/business-inventory/add\"\n                  className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors duration-200 w-full sm:w-auto\"\n                >\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Item\n                </Link>\n              </div>\n\n              {/* Search and Controls - Sticky Container */}\n              <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 pb-0 mb-2\">\n                <div className=\"space-y-0\">\n                  {/* Search Bar */}\n                  <div className=\"relative pt-2\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Search className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-base\"\n                      placeholder=\"Search items by description, SKU, or location...\"\n                      value={inventorySearchQuery || ''}\n                      onChange={(e) => handleInventorySearchChange(e.target.value)}\n                    />\n                  </div>\n\n          {/* Select All and Bulk Actions */}\n          <div className=\"flex items-center justify-between gap-4 p-3 rounded-lg\">\n            {/* Select All */}\n            <label className=\"flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500 h-4 w-4\"\n                onChange={(e) => handleSelectAll(e.target.checked)}\n                checked={selectedItems.size === filteredItems.length && filteredItems.length > 0}\n              />\n              <span className=\"ml-3 text-sm font-medium text-gray-700\">Select all</span>\n            </label>\n\n            {/* Right section - counter and buttons */}\n            <div className=\"flex items-center gap-3\">\n              {/* Counter (when visible) */}\n              {selectedItems.size > 0 && (\n                <span className=\"text-sm text-gray-500\">\n                  {selectedItems.size} of {filteredItems.length} selected\n                </span>\n              )}\n\n              {/* Bulk action buttons */}\n              <div className=\"flex items-center space-x-2\">\n                {/* Filter Button */}\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowFilterMenu(!showFilterMenu)}\n                    className={`filter-button inline-flex items-center justify-center px-3 py-2 border text-sm font-medium rounded-md transition-colors duration-200 ${\n                      filterMode === 'all'\n                        ? 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n                        : 'border-primary-500 text-primary-600 bg-primary-50 hover:bg-primary-100'\n                    }`}\n                    title=\"Filter items\"\n                  >\n                    <Filter className=\"h-4 w-4\" />\n                  </button>\n\n                  {/* Filter Dropdown Menu */}\n                  {showFilterMenu && (\n                    <div className=\"filter-menu absolute top-full right-0 mt-1 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                      <div className=\"py-1\">\n                        <button\n                          onClick={() => {\n                            setFilterMode('all')\n                            setShowFilterMenu(false)\n                          }}\n                          className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                            filterMode === 'all' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                          }`}\n                        >\n                          All Items\n                        </button>\n                        <button\n                          onClick={() => {\n                            setFilterMode('bookmarked')\n                            setShowFilterMenu(false)\n                          }}\n                          className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                            filterMode === 'bookmarked' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                          }`}\n                        >\n                          Bookmarked Only\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <button\n                  className=\"inline-flex items-center justify-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 transition-colors duration-200\"\n                  disabled={selectedItems.size === 0}\n                  title=\"Generate QR Codes\"\n                >\n                  <QrCode className=\"h-4 w-4\" />\n                </button>\n\n                <button\n                  className=\"inline-flex items-center justify-center px-3 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 disabled:opacity-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-200\"\n                  disabled={selectedItems.size === 0}\n                  title=\"Delete All\"\n                >\n                  <Trash2 className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n              {/* Items List */}\n              {filteredItems.length === 0 ? (\n                <div className=\"text-center py-12 px-4\">\n                  <div className=\"mx-auto h-16 w-16 text-gray-400 -mb-1\">📦</div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                    No items found\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    {inventorySearchQuery || filters.status || filterMode === 'bookmarked'\n                      ? 'Try adjusting your search or filter criteria.'\n                      : 'No items found.'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n                  <ul className=\"divide-y divide-gray-200\">\n                    {filteredItems.map((item) => (\n                      <li key={item.item_id} className=\"relative bg-gray-50 transition-colors duration-200 hover:bg-gray-100\">\n                        {/* Top row: Controls - stays outside Link */}\n                        <div className=\"flex items-center justify-between mb-0 px-4 py-3\">\n                          <div className=\"flex items-center\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500 h-4 w-4 flex-shrink-0\"\n                              checked={selectedItems.has(item.item_id)}\n                              onChange={(e) => handleSelectItem(item.item_id, e.target.checked)}\n                            />\n                          </div>\n\n                          {/* Action buttons */}\n                          <div className=\"flex items-center gap-2\">\n                            <button\n                              className={`inline-flex items-center justify-center p-2 border text-sm font-medium rounded-md transition-colors ${\n                                item.bookmark\n                                  ? 'border-red-300 text-red-700 bg-red-50 hover:bg-red-100'\n                                  : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n                              } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n                              title={item.bookmark ? 'Remove Bookmark' : 'Add Bookmark'}\n                              onClick={(e) => {\n                                e.preventDefault()\n                                e.stopPropagation()\n                                toggleBookmark(item.item_id)\n                              }}\n                            >\n                              <Bookmark className=\"h-4 w-4\" fill={item.bookmark ? 'currentColor' : 'none'} />\n                            </button>\n                            <Link\n                              to={`/business-inventory/${item.item_id}/edit`}\n                              onClick={(e) => e.stopPropagation()}\n                              className=\"inline-flex items-center justify-center p-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors\"\n                              title=\"Edit item\"\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Link>\n                            {/* Status badge moved to top-right corner */}\n                            <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                              item.inventory_status === 'available'\n                                ? 'bg-green-100 text-green-800'\n                                : item.inventory_status === 'pending'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-red-100 text-red-800'\n                            }`}>\n                              {item.inventory_status === 'available' ? 'Available' :\n                               item.inventory_status === 'pending' ? 'Allocated' : 'Sold'}\n                            </span>\n                          </div>\n                        </div>\n\n                        {/* Main tappable content - wrapped in Link */}\n                        <Link to={`/business-inventory/${item.item_id}`}>\n                          <div className=\"block bg-transparent\">\n                            <div className=\"px-4 pb-3 sm:px-6\">\n                              {/* Middle row: Thumbnail and Description - now tappable */}\n                              <div className=\"flex items-center gap-3 py-3\">\n                                <div className=\"flex-shrink-0\">\n                                  {item.images && item.images.length > 0 ? (\n                                    // Show primary image thumbnail or first image if no primary\n                                    (() => {\n                                      const primaryImage = item.images.find(img => img.isPrimary) || item.images[0]\n                                      return (\n                                        <div className=\"w-16 h-16 rounded-lg overflow-hidden border-2 border-gray-200\">\n                                          <img\n                                            src={primaryImage.url}\n                                            alt={primaryImage.alt || 'Item image'}\n                                            className=\"w-full h-full object-cover\"\n                                          />\n                                        </div>\n                                      )\n                                    })()\n                                  ) : (\n                                    // Show camera placeholder when no images\n                                    <button\n                                      onClick={(e) => {\n                                        e.preventDefault()\n                                        e.stopPropagation()\n                                        handleAddImage(item.item_id)\n                                      }}\n                                      disabled={uploadingImages.has(item.item_id)}\n                                      className=\"w-16 h-16 rounded-lg border-2 border-dashed border-gray-300 flex items-center justify-center text-gray-400 hover:text-gray-600 hover:border-gray-400 transition-colors disabled:opacity-50\"\n                                      title=\"Add image (camera or gallery)\"\n                                    >\n                                      <Camera className=\"h-6 w-6\" />\n                                    </button>\n                                  )}\n                                </div>\n\n                                {/* Item description - now tappable */}\n                                <div className=\"flex-1 min-w-0 flex items-center\">\n                                  <div>\n                                    <h3 className=\"text-base font-medium text-gray-900 line-clamp-2 break-words\">\n                                      {item.description}\n                                    </h3>\n                                    {/* Storage Location field */}\n                                    {item.business_inventory_location && (\n                                      <p className=\"text-sm text-gray-600 mt-1\">\n                                        {item.business_inventory_location}\n                                      </p>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n\n                              {/* Bottom row: Content - now tappable */}\n                              <div className=\"space-y-2\">\n                                {/* Price, Source, SKU on same row */}\n                                <div className=\"flex flex-wrap items-center gap-x-4 gap-y-1 text-sm text-gray-500\">\n                                  {item.price && (\n                                    <span className=\"font-medium text-gray-700\">${item.price}</span>\n                                  )}\n                                  {item.source && (\n                                    <>\n                                      {(item.price) && <span className=\"hidden sm:inline\">•</span>}\n                                      <span className=\"font-medium text-gray-700\">{item.source}</span>\n                                    </>\n                                  )}\n                                  {item.sku && (\n                                    <>\n                                      {(item.price || item.source) && <span className=\"hidden sm:inline\">•</span>}\n                                      <span className=\"font-medium text-gray-700\">{item.sku}</span>\n                                    </>\n                                  )}\n                                </div>\n\n                                {/* Project assignment */}\n                                {item.current_project_id && (\n                                  <div className=\"text-sm text-gray-600\">\n                                    <span className=\"font-medium\">Allocated to Project:</span> {item.current_project_id}\n                                  </div>\n                                )}\n\n                                {/* Notes */}\n                                {item.notes && (\n                                  <p className=\"text-sm text-gray-600 line-clamp-2\">\n                                    {item.notes}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </>\n          )}\n\n          {activeTab === 'transactions' && (\n            <>\n              {/* Header - Add Transaction button */}\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2 mb-2\">\n                <Link\n                  to=\"/business-inventory/transactions/add\"\n                  className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors duration-200 w-full sm:w-auto\"\n                >\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Transaction\n                </Link>\n              </div>\n\n              {/* Search and Controls - Sticky Container */}\n              <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 pb-0 mb-2\">\n                <div className=\"space-y-0\">\n                  {/* Search Bar */}\n                  <div className=\"relative pt-2\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Search className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-base\"\n                      placeholder=\"Search transactions by source, type, project, or notes...\"\n                      value={transactionSearchQuery || ''}\n                      onChange={(e) => setTransactionSearchQuery(e.target.value)}\n                    />\n                  </div>\n\n                  {/* Filter Controls */}\n                  <div className=\"flex items-center justify-end gap-4 p-3 rounded-lg\">\n                    {/* Filter Button */}\n                    <div className=\"relative\">\n                      <button\n                        onClick={() => setShowTransactionFilterMenu(!showTransactionFilterMenu)}\n                        className={`transaction-filter-button inline-flex items-center justify-center px-3 py-2 border text-sm font-medium rounded-md transition-colors duration-200 ${\n                          transactionFilterMode === 'all'\n                            ? 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n                            : 'border-primary-500 text-primary-600 bg-primary-50 hover:bg-primary-100'\n                        }`}\n                        title=\"Filter transactions\"\n                      >\n                        <Filter className=\"h-4 w-4\" />\n                      </button>\n\n                      {/* Transaction Filter Dropdown Menu */}\n                      {showTransactionFilterMenu && (\n                        <div className=\"transaction-filter-menu absolute top-full right-0 mt-1 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                          <div className=\"py-1\">\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('all')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'all' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              All Status\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('pending')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'pending' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Pending\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('completed')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'completed' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Completed\n                            </button>\n                            <button\n                              onClick={() => {\n                                setTransactionFilterMode('cancelled')\n                                setShowTransactionFilterMenu(false)\n                              }}\n                              className={`block w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\n                                transactionFilterMode === 'cancelled' ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n                              }`}\n                            >\n                              Cancelled\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Transactions List */}\n              {filteredTransactions.length === 0 ? (\n                <div className=\"text-center py-12 px-4\">\n                  <div className=\"mx-auto h-16 w-16 text-gray-400 -mb-1\">🧾</div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                    No transactions found\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    {transactionSearchQuery || transactionFilterMode !== 'all'\n                      ? 'Try adjusting your search or filter criteria.'\n                      : 'No inventory-related transactions found.'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n                  <ul className=\"divide-y divide-gray-200\">\n                    {filteredTransactions.map((transaction) => (\n                      <li key={transaction.transaction_id} className=\"relative\">\n                        <div className=\"block bg-gray-50 transition-colors duration-200 hover:bg-gray-100\">\n                          <div className=\"px-4 py-4 sm:px-6\">\n                            {/* Top row: Header with source and status */}\n                            <div className=\"flex items-center justify-between mb-3\">\n                              <div className=\"flex items-center\">\n                                <h3 className=\"text-base font-medium text-gray-900\">\n                                  {transaction.source}\n                                </h3>\n                              </div>\n                              <div className=\"flex items-center flex-wrap gap-2\">\n                                <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium no-icon ${\n                                  transaction.status === 'completed'\n                                    ? 'bg-green-100 text-green-800'\n                                    : transaction.status === 'pending'\n                                    ? 'bg-yellow-100 text-yellow-800'\n                                    : 'bg-red-100 text-red-800'\n                                }`}>\n                                  {transaction.status === 'completed' ? 'Completed' :\n                                   transaction.status === 'pending' ? 'Pending' :\n                                   transaction.status === 'cancelled' ? 'Cancelled' :\n                                   transaction.status}\n                                </span>\n                              </div>\n                            </div>\n\n                            {/* Bottom row: Details */}\n                            <div className=\"space-y-2\">\n                              {/* Details row - Price, project, date */}\n                              <div className=\"flex items-center flex-wrap gap-x-4 gap-y-1 text-sm text-gray-500\">\n                                <span className=\"font-medium text-gray-700\">{formatCurrency(transaction.amount)}</span>\n                                {transaction.project_name && (\n                                  <>\n                                    <span className=\"hidden sm:inline\">•</span>\n                                    <span className=\"font-medium text-gray-700\">\n                                      {transaction.project_name}\n                                    </span>\n                                  </>\n                                )}\n                                <span className=\"hidden sm:inline\">•</span>\n                                <span className=\"font-medium text-gray-700\">\n                                  {formatDate(transaction.transaction_date)}\n                                </span>\n                              </div>\n\n                              {/* Notes */}\n                              {transaction.notes && (\n                                <p className=\"text-sm text-gray-600 line-clamp-2\">\n                                  {transaction.notes}\n                                </p>\n                              )}\n\n                            </div>\n\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["BusinessInventory","activeTab","setActiveTab","useState","items","setItems","transactions","setTransactions","isLoading","setIsLoading","filters","inventorySearchQuery","setInventorySearchQuery","transactionSearchQuery","setTransactionSearchQuery","showTransactionFilterMenu","setShowTransactionFilterMenu","transactionFilterMode","setTransactionFilterMode","uploadingImages","setUploadingImages","filterMode","setFilterMode","showFilterMenu","setShowFilterMenu","selectedItems","setSelectedItems","useEffect","handleClickOutside","event","target","filteredItems","useMemo","item","matchesSearch","_a","_b","_c","matchesStatus","matchesFilter","filteredTransactions","filtered","query","t","_d","tabs","Package","Receipt","loadBusinessInventory","loadBusinessTransactions","businessInventoryService","updatedItems","data","error","projects","projectService","allTransactions","project","inventoryTransactions","transactionService","a","b","handleInventorySearchChange","searchQuery","toggleBookmark","useBookmark","handleAddImage","itemId","prev","files","ImageUploadService","file","processImageUpload","newSet","allFiles","newImage","message","handleSelectAll","checked","handleSelectItem","newSelected","jsx","jsxs","tab","Icon","Fragment","Link","Plus","Search","e","Filter","QrCode","Trash2","Bookmark","Edit","primaryImage","img","Camera","transaction","formatCurrency","formatDate"],"mappings":"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"}