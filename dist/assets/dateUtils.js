const s=t=>{if(!t)return null;if(t instanceof Date)return t;if(typeof t=="object"&&t){if("toDate"in t&&typeof t.toDate=="function")try{return t.toDate()}catch(r){return console.warn("Failed to convert Firestore Timestamp to Date:",r),null}if("seconds"in t&&"nanoseconds"in t)try{return new Date(t.seconds*1e3+t.nanoseconds/1e6)}catch(r){return console.warn("Failed to convert Firestore Timestamp to Date:",r),null}}if(typeof t=="string")try{if(/^\d{4}-\d{2}-\d{2}$/.test(t)){const[n,e,o]=t.split("-").map(Number),i=new Date(n,e-1,o);return isNaN(i.getTime())?null:i}const r=new Date(t);return isNaN(r.getTime())?null:r}catch(r){return console.warn("Failed to parse date string:",t,r),null}if(typeof t=="number")try{const r=new Date(t);return isNaN(r.getTime())?null:r}catch(r){return console.warn("Failed to convert number to Date:",t,r),null}return null},c=(t,r="Unknown")=>{const n=s(t);if(!n)return r;try{return n.toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}catch(e){return console.warn("Failed to format date:",t,e),r}},a=(t,r="$0.00")=>{const n=typeof t=="string"?parseFloat(t):t;return isNaN(n)?r:n.toLocaleString("en-US",{style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2})},d=t=>{if(!t)return"";if(typeof t=="string"&&/^\d{4}-\d{2}-\d{2}$/.test(t))return t;const r=s(t);if(!r)return"";const n=r.getFullYear(),e=String(r.getMonth()+1).padStart(2,"0"),o=String(r.getDate()).padStart(2,"0");return`${n}-${e}-${o}`};export{a,c as f,d as t};
//# sourceMappingURL=dateUtils.js.map
