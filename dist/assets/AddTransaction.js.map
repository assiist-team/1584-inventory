{"version":3,"file":"AddTransaction.js","sources":["../../src/components/TransactionItemsList.tsx","../../src/pages/AddTransaction.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { Edit, X, Plus } from 'lucide-react'\nimport { TransactionItemFormData } from '@/types'\nimport TransactionItemForm from './TransactionItemForm'\n\ninterface TransactionItemsListProps {\n  items: TransactionItemFormData[]\n  onItemsChange: (items: TransactionItemFormData[]) => void\n  projectId?: string\n  projectName?: string\n  onImageFilesChange?: (itemId: string, imageFiles: File[]) => void\n}\n\nexport default function TransactionItemsList({ items, onItemsChange, projectId, projectName, onImageFilesChange }: TransactionItemsListProps) {\n  const [isAddingItem, setIsAddingItem] = useState(false)\n  const [editingItemId, setEditingItemId] = useState<string | null>(null)\n\n  const handleSaveItem = (item: TransactionItemFormData) => {\n    if (editingItemId) {\n      // Update existing item\n      const updatedItems = items.map(existingItem =>\n        existingItem.id === editingItemId ? item : existingItem\n      )\n      onItemsChange(updatedItems)\n    } else {\n      // Add new item\n      onItemsChange([...items, item])\n    }\n\n    // Handle image files if they exist\n    if (item.imageFiles && item.imageFiles.length > 0 && onImageFilesChange) {\n      onImageFilesChange(item.id, item.imageFiles)\n    }\n\n    setIsAddingItem(false)\n    setEditingItemId(null)\n  }\n\n  const handleCancelItem = () => {\n    setIsAddingItem(false)\n    setEditingItemId(null)\n  }\n\n  const handleEditItem = (itemId: string) => {\n    setEditingItemId(itemId)\n    setIsAddingItem(false)\n  }\n\n  const handleDeleteItem = (itemId: string) => {\n    const updatedItems = items.filter(item => item.id !== itemId)\n    onItemsChange(updatedItems)\n  }\n\n  const getItemToEdit = () => {\n    if (!editingItemId) return null\n    return items.find(item => item.id === editingItemId) || null\n  }\n\n  const formatCurrency = (amount: string) => {\n    const num = parseFloat(amount)\n    return isNaN(num) ? '$0.00' : `$${num.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\n  }\n\n  if (isAddingItem || editingItemId) {\n    const itemToEdit = getItemToEdit()\n    return (\n      <TransactionItemForm\n        item={itemToEdit || undefined}\n        onSave={handleSaveItem}\n        onCancel={handleCancelItem}\n        isEditing={!!itemToEdit}\n        projectId={projectId}\n        projectName={projectName}\n        onImageFilesChange={onImageFilesChange}\n      />\n    )\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Transaction Items</h3>\n      </div>\n\n      <div className=\"space-y-3\">\n        {items.map((item, index) => (\n          <div key={item.id} className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-4 mb-2\">\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\n                    Item {index + 1}\n                  </span>\n                  <span className=\"text-sm text-gray-500\">\n                    {formatCurrency(item.project_price || item.purchase_price || '')}\n                  </span>\n                </div>\n\n                <h4 className=\"text-sm font-medium text-gray-900 mb-1\">\n                  {item.description || 'No description'}\n                </h4>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n                  {item.sku && (\n                    <div>\n                      <span className=\"font-medium\">SKU:</span> {item.sku}\n                    </div>\n                  )}\n                  {item.market_value && (\n                    <div>\n                      <span className=\"font-medium\">Market Value:</span> ${item.market_value}\n                    </div>\n                  )}\n                </div>\n\n                {item.notes && (\n                  <div className=\"mt-2 text-sm text-gray-600\">\n                    <span className=\"font-medium\">Notes:</span> {item.notes}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex items-center space-x-2 ml-4\">\n                <button\n                  onClick={(e) => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                    handleEditItem(item.id)\n                  }}\n                  className=\"text-primary-600 hover:text-primary-900 p-1\"\n                  title=\"Edit item\"\n                >\n                  <Edit className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                    handleDeleteItem(item.id)\n                  }}\n                  className=\"text-red-600 hover:text-red-900 p-1\"\n                  title=\"Delete item\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {/* Add Item Button - Always visible */}\n        <div className=\"text-center py-8 border-2 border-dashed border-gray-300 rounded-lg\">\n          <button\n            onClick={() => setIsAddingItem(true)}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            title=\"Add new item\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Item\n          </button>\n        </div>\n\n        {items.length > 0 && (\n          <div className=\"flex justify-between items-center pt-4 border-t border-gray-200\">\n            <div className=\"text-sm text-gray-600\">\n              Total Items: {items.length}\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900\">\n              Total: {formatCurrency(\n                items.reduce((sum, item) => sum + (parseFloat(item.project_price || item.purchase_price || '0') || 0), 0).toString()\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { ArrowLeft, Save, X } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { TransactionFormData, TransactionValidationErrors, TransactionItemFormData, ItemImage } from '@/types'\nimport { TRANSACTION_SOURCES } from '@/constants/transactionSources'\nimport { transactionService, projectService } from '@/services/inventoryService'\nimport { unifiedItemsService } from '@/services/inventoryService'\nimport { ImageUploadService, UploadProgress } from '@/services/imageService'\nimport ImageUpload from '@/components/ui/ImageUpload'\nimport TransactionItemsList from '@/components/TransactionItemsList'\nimport { useAuth } from '../contexts/AuthContext'\nimport { UserRole } from '../types'\nimport { Shield } from 'lucide-react'\n\nexport default function AddTransaction() {\n  const { id: projectId } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const { hasRole } = useAuth()\n\n  // Check if user has permission to add transactions (DESIGNER role or higher)\n  if (!hasRole(UserRole.DESIGNER)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-red-100\">\n            <Shield className=\"h-6 w-6 text-red-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Access Denied</h2>\n          <p className=\"text-gray-600\">\n            You don't have permission to add transactions. Please contact an administrator if you need access.\n          </p>\n          <Link\n            to={`/project/${projectId}`}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            Back to Project\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const [projectName, setProjectName] = useState<string>('')\n\n  // Fetch project name\n  useEffect(() => {\n    const fetchProject = async () => {\n      if (projectId) {\n        try {\n          const project = await projectService.getProject(projectId)\n          if (project) {\n            setProjectName(project.name)\n          }\n        } catch (error) {\n          console.error('Failed to fetch project:', error)\n        }\n      }\n    }\n\n    fetchProject()\n  }, [projectId])\n\n  const [formData, setFormData] = useState<TransactionFormData>({\n    transaction_date: (() => {\n      const today = new Date()\n      return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`\n    })(), // YYYY-MM-DD format\n    source: '',\n    transaction_type: 'Purchase',\n    payment_method: '',\n    amount: '',\n    budget_category: 'Furnishings',\n    notes: '',\n    status: 'completed',\n    reimbursement_type: 'Client Owes',\n    trigger_event: 'Manual',\n    transaction_images: [], // Legacy field for backward compatibility\n    receipt_images: [],\n    other_images: [],\n    receipt_emailed: false,\n    items: []\n  })\n\n  const [items, setItems] = useState<TransactionItemFormData[]>([])\n  const [imageFilesMap, setImageFilesMap] = useState<Map<string, File[]>>(new Map())\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n\n  // Initialize custom source state based on initial form data\n  useEffect(() => {\n    if (formData.source && !TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(true)\n    } else if (formData.source && TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  const [errors, setErrors] = useState<TransactionValidationErrors>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isUploadingImages, setIsUploadingImages] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: TransactionValidationErrors = {}\n\n    if (!formData.source.trim()) {\n      newErrors.source = 'Source is required'\n    }\n\n    if (!formData.transaction_type.trim()) {\n      newErrors.transaction_type = 'Transaction type is required'\n    }\n\n    if (!formData.payment_method.trim()) {\n      newErrors.payment_method = 'Payment method is required'\n    }\n\n    if (!formData.budget_category?.trim()) {\n      newErrors.budget_category = 'Budget category is required'\n    }\n\n    if (!formData.amount.trim()) {\n      newErrors.amount = 'Amount is required'\n    } else if (isNaN(Number(formData.amount)) || Number(formData.amount) <= 0) {\n      newErrors.amount = 'Amount must be a positive number'\n    }\n\n    // Items are now optional - no validation required\n\n    if (!formData.transaction_date) {\n      newErrors.transaction_date = 'Transaction date is required'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !projectId) return\n\n    setIsSubmitting(true)\n\n    try {\n      // Create transaction data, excluding image File objects from formData since they contain File objects\n      const { transaction_images, receipt_images, other_images, ...formDataWithoutImages } = formData\n\n      const transactionData = {\n        ...formDataWithoutImages,\n        project_id: projectId,\n        project_name: projectName,\n        created_by: 'system'\n      }\n\n      console.log('Attempting to create transaction with data:', transactionData)\n      console.log('Transaction date value:', transactionData.transaction_date)\n      console.log('Transaction date type:', typeof transactionData.transaction_date)\n      console.log('Transaction items:', items)\n\n      // Create transaction with items first to get the real transaction ID\n      const transactionId = await transactionService.createTransaction(projectId, transactionData, items)\n\n      // Now upload receipt images using the real transaction ID\n      if (formData.receipt_images && formData.receipt_images.length > 0) {\n        setIsUploadingImages(true)\n\n        try {\n          const uploadResults = await ImageUploadService.uploadMultipleReceiptImages(\n            formData.receipt_images,\n            projectName,\n            transactionId,\n            handleImageUploadProgress\n          )\n\n          // Convert to TransactionImage format\n          const receiptImages = ImageUploadService.convertFilesToReceiptImages(uploadResults)\n          console.log('Receipt images uploaded successfully:', receiptImages.length, 'images')\n          console.log('Receipt images to save:', receiptImages)\n\n          // Update the transaction with the uploaded receipt images\n          if (receiptImages && receiptImages.length > 0) {\n            console.log('Updating transaction with receipt images...')\n            try {\n              await transactionService.updateTransaction(projectId, transactionId, {\n                receipt_images: receiptImages\n              })\n              console.log('Transaction updated successfully with receipt images')\n            } catch (updateError) {\n              console.error('Failed to update transaction with receipt images:', updateError)\n              // Don't fail the entire transaction if image update fails\n            }\n          }\n\n          // Small delay to ensure the update is processed before continuing\n          await new Promise(resolve => setTimeout(resolve, 500))\n        } catch (error: any) {\n          console.error('Error uploading receipt images:', error)\n\n          // Provide specific error messages based on error type\n          let errorMessage = 'Failed to upload receipt images. Please try again.'\n          if (error.message?.includes('Storage service is not available')) {\n            errorMessage = 'Storage service is unavailable. Please check your internet connection.'\n          } else if (error.message?.includes('Network error') || error.message?.includes('offline')) {\n            errorMessage = 'Network connection issue. Please check your internet and try again.'\n          } else if (error.message?.includes('quota exceeded')) {\n            errorMessage = 'Storage quota exceeded. Please contact support.'\n          } else if (error.message?.includes('Unauthorized')) {\n            errorMessage = 'Permission denied. Please check your account permissions.'\n          } else if (error.message?.includes('CORS') || error.message?.includes('Access-Control') || error.message?.includes('ERR_FAILED') || error.message?.includes('preflight')) {\n            errorMessage = 'Upload blocked by browser security policy. Please check Firebase Storage configuration or try refreshing the page.'\n          }\n\n          setErrors({ receipt_images: errorMessage })\n          setIsSubmitting(false)\n          setIsUploadingImages(false)\n          return\n        }\n\n        setIsUploadingImages(false)\n      }\n\n      // Now upload other images using the real transaction ID\n      if (formData.other_images && formData.other_images.length > 0) {\n        setIsUploadingImages(true)\n\n        try {\n          const uploadResults = await ImageUploadService.uploadMultipleOtherImages(\n            formData.other_images,\n            projectName,\n            transactionId,\n            handleImageUploadProgress\n          )\n\n          // Convert to TransactionImage format\n          const otherImages = ImageUploadService.convertFilesToOtherImages(uploadResults)\n          console.log('Other images uploaded successfully:', otherImages.length, 'images')\n          console.log('Other images to save:', otherImages)\n\n          // Update the transaction with the uploaded other images\n          if (otherImages && otherImages.length > 0) {\n            console.log('Updating transaction with other images...')\n            try {\n              await transactionService.updateTransaction(projectId, transactionId, {\n                other_images: otherImages\n              })\n              console.log('Transaction updated successfully with other images')\n            } catch (updateError) {\n              console.error('Failed to update transaction with other images:', updateError)\n              // Don't fail the entire transaction if image update fails\n            }\n          }\n\n          // Small delay to ensure the update is processed before continuing\n          await new Promise(resolve => setTimeout(resolve, 500))\n        } catch (error: any) {\n          console.error('Error uploading other images:', error)\n\n          // Provide specific error messages based on error type\n          let errorMessage = 'Failed to upload other images. Please try again.'\n          if (error.message?.includes('Storage service is not available')) {\n            errorMessage = 'Storage service is unavailable. Please check your internet connection.'\n          } else if (error.message?.includes('Network error') || error.message?.includes('offline')) {\n            errorMessage = 'Network connection issue. Please check your internet and try again.'\n          } else if (error.message?.includes('quota exceeded')) {\n            errorMessage = 'Storage quota exceeded. Please contact support.'\n          } else if (error.message?.includes('Unauthorized')) {\n            errorMessage = 'Permission denied. Please check your account permissions.'\n          } else if (error.message?.includes('CORS') || error.message?.includes('Access-Control') || error.message?.includes('ERR_FAILED') || error.message?.includes('preflight')) {\n            errorMessage = 'Upload blocked by browser security policy. Please check Firebase Storage configuration or try refreshing the page.'\n          }\n\n          setErrors({ other_images: errorMessage })\n          setIsSubmitting(false)\n          setIsUploadingImages(false)\n          return\n        }\n\n        setIsUploadingImages(false)\n      }\n\n      // Upload item images with the correct item IDs\n      if (imageFilesMap.size > 0) {\n        try {\n          console.log('Starting image upload process...')\n          // Get the created items and extract their IDs\n          const createdItems = await unifiedItemsService.getItemsForTransaction(projectId, transactionId)\n          const createdItemIds = createdItems.map(item => item.item_id)\n          console.log('Created item IDs:', createdItemIds)\n\n          // Upload images for each item\n          for (let i = 0; i < items.length && i < createdItemIds.length; i++) {\n            const item = items[i]\n            const itemId = createdItemIds[i]\n            const imageFiles = imageFilesMap.get(item.id)\n\n            if (imageFiles && imageFiles.length > 0) {\n              console.log(`Uploading ${imageFiles.length} images for item ${itemId}`)\n\n              // Upload each image file with the final item ID\n              const uploadPromises = imageFiles.map(async (file, fileIndex) => {\n                try {\n                  console.log(`Uploading file ${fileIndex + 1}/${imageFiles.length}: ${file.name}`)\n                  const uploadResult = await ImageUploadService.uploadItemImage(\n                    file,\n                    projectName,\n                    itemId\n                  )\n                  console.log(`Upload successful for ${file.name}:`, uploadResult)\n                  console.log(`Upload result URL: ${uploadResult.url}`)\n\n                  const uploadedImage: ItemImage = {\n                    url: uploadResult.url,\n                    alt: file.name,\n                    isPrimary: item.images?.find(img => img.fileName === file.name)?.isPrimary || false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  }\n                  console.log('Created ItemImage object:', uploadedImage)\n                  return uploadedImage\n                } catch (uploadError) {\n                  console.error(`Failed to upload ${file.name}:`, uploadError)\n                  // Return a placeholder image object so the process continues\n                  return {\n                    url: '',\n                    alt: file.name,\n                    isPrimary: false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  } as ItemImage\n                }\n              })\n\n              const uploadedImages = await Promise.all(uploadPromises)\n              console.log('All uploads completed, updating item with images:', uploadedImages)\n\n              // Filter out any failed uploads (empty URLs)\n              const validImages = uploadedImages.filter(img => img.url && img.url.trim() !== '')\n              console.log(`Valid images to save: ${validImages.length}/${uploadedImages.length}`)\n\n              if (validImages.length > 0) {\n                // Update the item with the uploaded images\n                await unifiedItemsService.updateItem(itemId, { images: validImages })\n                console.log(`Successfully updated item ${itemId} with ${validImages.length} images`)\n              }\n            }\n          }\n        } catch (imageError) {\n          console.error('Error in image upload process:', imageError)\n          // Don't fail the transaction if image upload fails - just log the error\n          // The transaction was successfully created, items just won't have images\n        }\n      }\n\n      navigate(`/project/${projectId}?tab=transactions`)\n    } catch (error) {\n      console.error('Error creating transaction:', error)\n      setErrors({ general: error instanceof Error ? error.message : 'Failed to create transaction. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof TransactionFormData, value: string | boolean | File[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }))\n    }\n  }\n\n  const handleReceiptImagesChange = (files: File[]) => {\n    setFormData(prev => ({ ...prev, receipt_images: files }))\n    // Clear any existing image errors\n    if (errors.receipt_images) {\n      setErrors(prev => ({ ...prev, receipt_images: undefined }))\n    }\n  }\n\n  const handleOtherImagesChange = (files: File[]) => {\n    setFormData(prev => ({ ...prev, other_images: files }))\n    // Clear any existing image errors\n    if (errors.other_images) {\n      setErrors(prev => ({ ...prev, other_images: undefined }))\n    }\n  }\n\n  const handleImageFilesChange = (itemId: string, imageFiles: File[]) => {\n    // Update the imageFilesMap\n    setImageFilesMap(prev => {\n      const newMap = new Map(prev)\n      newMap.set(itemId, imageFiles)\n      return newMap\n    })\n\n    // Also update the item in the items array with the imageFiles\n    setItems(prevItems => prevItems.map(item =>\n      item.id === itemId\n        ? { ...item, imageFiles }\n        : item\n    ))\n  }\n\n  const handleImageUploadProgress = (fileIndex: number, progress: UploadProgress) => {\n    // Progress tracking removed to fix TypeScript errors\n    console.log(`Upload progress for file ${fileIndex}: ${progress.percentage}%`)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=transactions`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Transaction</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* General Error Display */}\n          {errors.general && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <div className=\"flex\">\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    <p>{errors.general}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Transaction Source */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Source *\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n              {TRANSACTION_SOURCES.map((source) => (\n                <div key={source} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"source\"\n                    value={source}\n                    checked={formData.source === source}\n                    onChange={(e) => {\n                      handleInputChange('source', e.target.value)\n                      setIsCustomSource(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {source}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"source_custom\"\n                name=\"source\"\n                value=\"custom\"\n                checked={isCustomSource}\n                onChange={() => {\n                  setIsCustomSource(true)\n                  handleInputChange('source', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomSource && (\n              <input\n                type=\"text\"\n                id=\"source_custom_input\"\n                value={formData.source}\n                onChange={(e) => handleInputChange('source', e.target.value)}\n                placeholder=\"Enter custom source...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.source ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.source && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n            )}\n          </div>\n\n          {/* Budget Category */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Budget Category *\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_design_fee\"\n                  name=\"budget_category\"\n                  value=\"Design Fee\"\n                  checked={formData.budget_category === 'Design Fee'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_design_fee\" className=\"ml-2 block text-sm text-gray-900\">\n                  Design Fee\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_furnishings\"\n                  name=\"budget_category\"\n                  value=\"Furnishings\"\n                  checked={formData.budget_category === 'Furnishings'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_furnishings\" className=\"ml-2 block text-sm text-gray-900\">\n                  Furnishings\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_property_management\"\n                  name=\"budget_category\"\n                  value=\"Property Management\"\n                  checked={formData.budget_category === 'Property Management'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_property_management\" className=\"ml-2 block text-sm text-gray-900\">\n                  Property Management\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_kitchen\"\n                  name=\"budget_category\"\n                  value=\"Kitchen\"\n                  checked={formData.budget_category === 'Kitchen'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_kitchen\" className=\"ml-2 block text-sm text-gray-900\">\n                  Kitchen\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_install\"\n                  name=\"budget_category\"\n                  value=\"Install\"\n                  checked={formData.budget_category === 'Install'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_install\" className=\"ml-2 block text-sm text-gray-900\">\n                  Install\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_storage_receiving\"\n                  name=\"budget_category\"\n                  value=\"Storage & Receiving\"\n                  checked={formData.budget_category === 'Storage & Receiving'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_storage_receiving\" className=\"ml-2 block text-sm text-gray-900\">\n                  Storage & Receiving\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"budget_fuel\"\n                  name=\"budget_category\"\n                  value=\"Fuel\"\n                  checked={formData.budget_category === 'Fuel'}\n                  onChange={(e) => handleInputChange('budget_category', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"budget_fuel\" className=\"ml-2 block text-sm text-gray-900\">\n                  Fuel\n                </label>\n              </div>\n            </div>\n            {errors.budget_category && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.budget_category}</p>\n            )}\n          </div>\n\n          {/* Transaction Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Type *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_purchase\"\n                  name=\"transaction_type\"\n                  value=\"Purchase\"\n                  checked={formData.transaction_type === 'Purchase'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_purchase\" className=\"ml-2 block text-sm text-gray-900\">\n                  Purchase\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_to_inventory\"\n                  name=\"transaction_type\"\n                  value=\"To Inventory\"\n                  checked={formData.transaction_type === 'To Inventory'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_to_inventory\" className=\"ml-2 block text-sm text-gray-900\">\n                  To Inventory\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_return\"\n                  name=\"transaction_type\"\n                  value=\"Return\"\n                  checked={formData.transaction_type === 'Return'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_return\" className=\"ml-2 block text-sm text-gray-900\">\n                  Return\n                </label>\n              </div>\n            </div>\n            {errors.transaction_type && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_type}</p>\n            )}\n          </div>\n\n          {/* Status */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Status\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"status_pending\"\n                  name=\"status\"\n                  value=\"pending\"\n                  checked={formData.status === 'completed'}\n                  onChange={(e) => handleInputChange('status', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"status_pending\" className=\"ml-2 block text-sm text-gray-900\">\n                  Pending\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"status_completed\"\n                  name=\"status\"\n                  value=\"completed\"\n                  checked={formData.status === 'completed'}\n                  onChange={(e) => handleInputChange('status', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"status_completed\" className=\"ml-2 block text-sm text-gray-900\">\n                  Completed\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"status_cancelled\"\n                  name=\"status\"\n                  value=\"cancelled\"\n                  checked={formData.status === 'cancelled'}\n                  onChange={(e) => handleInputChange('status', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"status_cancelled\" className=\"ml-2 block text-sm text-gray-900\">\n                  Cancelled\n                </label>\n              </div>\n            </div>\n            {errors.status && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.status}</p>\n            )}\n          </div>\n\n          {/* Reimbursement Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Reimbursement Type\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"reimbursement_client_owes\"\n                  name=\"reimbursement_type\"\n                  value=\"Client Owes\"\n                  checked={formData.reimbursement_type === 'Client Owes'}\n                  onChange={(e) => handleInputChange('reimbursement_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"reimbursement_client_owes\" className=\"ml-2 block text-sm text-gray-900\">\n                  Client Owes\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"reimbursement_we_owe\"\n                  name=\"reimbursement_type\"\n                  value=\"We Owe\"\n                  checked={formData.reimbursement_type === 'We Owe'}\n                  onChange={(e) => handleInputChange('reimbursement_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"reimbursement_we_owe\" className=\"ml-2 block text-sm text-gray-900\">\n                  We Owe\n                </label>\n              </div>\n            </div>\n            {errors.reimbursement_type && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.reimbursement_type}</p>\n            )}\n          </div>\n\n          {/* Amount */}\n          <div>\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n              Amount *\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"amount\"\n                value={formData.amount}\n                onChange={(e) => handleInputChange('amount', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.amount ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.amount && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.amount}</p>\n            )}\n          </div>\n\n          {/* Transaction Date */}\n          <div>\n            <label htmlFor=\"transaction_date\" className=\"block text-sm font-medium text-gray-700\">\n              Transaction Date *\n            </label>\n            <input\n              type=\"date\"\n              id=\"transaction_date\"\n              value={formData.transaction_date}\n              onChange={(e) => {\n                // Use the date value directly (YYYY-MM-DD format)\n                handleInputChange('transaction_date', e.target.value)\n              }}\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.transaction_date ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.transaction_date && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_date}</p>\n            )}\n          </div>\n\n          {/* Transaction Method */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Method *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_client_card\"\n                  name=\"payment_method\"\n                  value=\"Client Card\"\n                  checked={formData.payment_method === 'Client Card'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_client_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  Client Card\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_1584_card\"\n                  name=\"payment_method\"\n                  value=\"1584 Design\"\n                  checked={formData.payment_method === '1584 Design'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_1584_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  1584 Design\n                </label>\n              </div>\n            </div>\n            {errors.payment_method && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n            )}\n          </div>\n\n          {/* Receipt Email Copy */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Receipt Email Copy\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_yes\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === true}\n                  onChange={() => handleInputChange('receipt_emailed', true)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_yes\" className=\"ml-2 block text-sm text-gray-900\">\n                  Yes\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_no\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === false}\n                  onChange={() => handleInputChange('receipt_emailed', false)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_no\" className=\"ml-2 block text-sm text-gray-900\">\n                  No\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n              Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              rows={3}\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Additional notes about this transaction...\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.notes ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.notes && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.notes}</p>\n            )}\n          </div>\n\n          {/* Transaction Items */}\n          <div>\n            <TransactionItemsList\n              items={items}\n              onItemsChange={(newItems) => {\n                setItems(newItems)\n                // Clear items error if items are added\n                if (errors.items && newItems.length > 0) {\n                  setErrors(prev => ({ ...prev, items: undefined }))\n                }\n              }}\n              projectId={projectId}\n              projectName={projectName}\n              onImageFilesChange={handleImageFilesChange}\n            />\n            {errors.items && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.items}</p>\n            )}\n          </div>\n\n          {/* Receipt Images */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Receipt Images\n            </h3>\n            <ImageUpload\n              onImagesChange={handleReceiptImagesChange}\n              maxImages={5}\n              maxFileSize={10}\n              disabled={isSubmitting || isUploadingImages}\n              className=\"mb-2\"\n            />\n            {errors.receipt_images && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.receipt_images}</p>\n            )}\n          </div>\n\n          {/* Other Images */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Other Images\n            </h3>\n            <ImageUpload\n              onImagesChange={handleOtherImagesChange}\n              maxImages={5}\n              maxFileSize={10}\n              disabled={isSubmitting || isUploadingImages}\n              className=\"mb-2\"\n            />\n            {errors.other_images && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.other_images}</p>\n            )}\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Link\n              to={`/project/${projectId}?tab=transactions`}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              <X className=\"h-4 w-4 mr-2\" />\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting || isUploadingImages}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : isUploadingImages ? 'Uploading Images...' : 'Create Transaction'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":["TransactionItemsList","items","onItemsChange","projectId","projectName","onImageFilesChange","isAddingItem","setIsAddingItem","useState","editingItemId","setEditingItemId","handleSaveItem","item","updatedItems","existingItem","handleCancelItem","handleEditItem","itemId","handleDeleteItem","getItemToEdit","formatCurrency","amount","num","itemToEdit","jsx","TransactionItemForm","jsxs","index","e","Edit","X","Plus","sum","AddTransaction","useParams","navigate","useNavigate","hasRole","useAuth","UserRole","Shield","Link","setProjectName","useEffect","project","projectService","error","formData","setFormData","today","setItems","imageFilesMap","setImageFilesMap","isCustomSource","setIsCustomSource","TRANSACTION_SOURCES","errors","setErrors","isSubmitting","setIsSubmitting","isUploadingImages","setIsUploadingImages","validateForm","newErrors","_a","handleSubmit","transaction_images","receipt_images","other_images","formDataWithoutImages","transactionData","transactionId","transactionService","uploadResults","ImageUploadService","handleImageUploadProgress","receiptImages","updateError","resolve","errorMessage","_b","_c","_d","_e","_f","_g","_h","_i","otherImages","_j","_k","_l","_m","_n","_o","_p","_q","_r","createdItemIds","unifiedItemsService","i","imageFiles","uploadPromises","file","fileIndex","uploadResult","uploadedImage","img","uploadError","uploadedImages","validImages","imageError","handleInputChange","field","value","prev","handleReceiptImagesChange","files","handleOtherImagesChange","handleImageFilesChange","newMap","prevItems","progress","ArrowLeft","source","newItems","ImageUpload","Save"],"mappings":"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"}