{"version":3,"file":"AddTransaction.js","sources":["../../src/pages/AddTransaction.tsx"],"sourcesContent":["import { ArrowLeft, Save, X } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { TransactionFormData, TransactionValidationErrors, TransactionItemFormData, ItemImage } from '@/types'\nimport { TRANSACTION_SOURCES } from '@/constants/transactionSources'\nimport { transactionService, projectService, itemService } from '@/services/inventoryService'\nimport { ImageUploadService, UploadProgress } from '@/services/imageService'\nimport ImageUpload from '@/components/ui/ImageUpload'\nimport TransactionItemsList from '@/components/TransactionItemsList'\nimport { useAuth } from '../contexts/AuthContext'\nimport { UserRole } from '../types'\nimport { Shield } from 'lucide-react'\n\nexport default function AddTransaction() {\n  const { id: projectId } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const { hasRole } = useAuth()\n\n  // Check if user has permission to add transactions (DESIGNER role or higher)\n  if (!hasRole(UserRole.DESIGNER)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-red-100\">\n            <Shield className=\"h-6 w-6 text-red-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Access Denied</h2>\n          <p className=\"text-gray-600\">\n            You don't have permission to add transactions. Please contact an administrator if you need access.\n          </p>\n          <Link\n            to={`/project/${projectId}`}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            Back to Project\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const [projectName, setProjectName] = useState<string>('')\n\n  // Fetch project name\n  useEffect(() => {\n    const fetchProject = async () => {\n      if (projectId) {\n        try {\n          const project = await projectService.getProject(projectId)\n          if (project) {\n            setProjectName(project.name)\n          }\n        } catch (error) {\n          console.error('Failed to fetch project:', error)\n        }\n      }\n    }\n\n    fetchProject()\n  }, [projectId])\n\n  const [formData, setFormData] = useState<TransactionFormData>({\n    transaction_date: (() => {\n      const today = new Date()\n      return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`\n    })(), // YYYY-MM-DD format\n    source: '',\n    transaction_type: 'Purchase',\n    payment_method: '',\n    amount: '',\n    budget_category: 'Furnishings',\n    notes: '',\n    transaction_images: [],\n    receipt_emailed: false,\n    items: []\n  })\n\n  const [items, setItems] = useState<TransactionItemFormData[]>([])\n  const [imageFilesMap, setImageFilesMap] = useState<Map<string, File[]>>(new Map())\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n\n  // Initialize custom source state based on initial form data\n  useEffect(() => {\n    if (formData.source && !TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(true)\n    } else if (formData.source && TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  const [errors, setErrors] = useState<TransactionValidationErrors>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isUploadingImages, setIsUploadingImages] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: TransactionValidationErrors = {}\n\n    if (!formData.source.trim()) {\n      newErrors.source = 'Source is required'\n    }\n\n    if (!formData.transaction_type.trim()) {\n      newErrors.transaction_type = 'Transaction type is required'\n    }\n\n    if (!formData.payment_method.trim()) {\n      newErrors.payment_method = 'Payment method is required'\n    }\n\n    if (!formData.budget_category?.trim()) {\n      newErrors.budget_category = 'Budget category is required'\n    }\n\n    if (!formData.amount.trim()) {\n      newErrors.amount = 'Amount is required'\n    } else if (isNaN(Number(formData.amount)) || Number(formData.amount) <= 0) {\n      newErrors.amount = 'Amount must be a positive number'\n    }\n\n    // Items are now optional - no validation required\n\n    if (!formData.transaction_date) {\n      newErrors.transaction_date = 'Transaction date is required'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !projectId) return\n\n    setIsSubmitting(true)\n\n    try {\n      // Create transaction data, excluding transaction_images from formData since it contains File objects\n      const { transaction_images, ...formDataWithoutImages } = formData\n\n      const transactionData = {\n        ...formDataWithoutImages,\n        project_id: projectId,\n        project_name: projectName,\n        created_by: 'system'\n      }\n\n      console.log('Attempting to create transaction with data:', transactionData)\n      console.log('Transaction date value:', transactionData.transaction_date)\n      console.log('Transaction date type:', typeof transactionData.transaction_date)\n      console.log('Transaction items:', items)\n\n      // Create transaction with items first to get the real transaction ID\n      const transactionId = await transactionService.createTransaction(projectId, transactionData, items)\n\n      // Now upload transaction images using the real transaction ID\n      if (formData.transaction_images && formData.transaction_images.length > 0) {\n        setIsUploadingImages(true)\n\n        try {\n          const uploadResults = await ImageUploadService.uploadMultipleTransactionImages(\n            formData.transaction_images,\n            projectName,\n            transactionId,\n            handleImageUploadProgress\n          )\n\n          // Convert to TransactionImage format\n          const transactionImages = ImageUploadService.convertFilesToTransactionImages(uploadResults)\n          console.log('Transaction images uploaded successfully:', transactionImages.length, 'images')\n          console.log('Transaction images to save:', transactionImages)\n\n          // Update the transaction with the uploaded images\n          if (transactionImages && transactionImages.length > 0) {\n            console.log('Updating transaction with transaction images...')\n            try {\n              await transactionService.updateTransaction(projectId, transactionId, {\n                transaction_images: transactionImages\n              })\n              console.log('Transaction updated successfully with transaction images')\n            } catch (updateError) {\n              console.error('Failed to update transaction with transaction images:', updateError)\n              // Don't fail the entire transaction if image update fails\n            }\n          }\n\n          // Small delay to ensure the update is processed before continuing\n          await new Promise(resolve => setTimeout(resolve, 500))\n        } catch (error: any) {\n          console.error('Error uploading images:', error)\n\n          // Provide specific error messages based on error type\n          let errorMessage = 'Failed to upload transaction images. Please try again.'\n          if (error.message?.includes('Storage service is not available')) {\n            errorMessage = 'Storage service is unavailable. Please check your internet connection.'\n          } else if (error.message?.includes('Network error') || error.message?.includes('offline')) {\n            errorMessage = 'Network connection issue. Please check your internet and try again.'\n          } else if (error.message?.includes('quota exceeded')) {\n            errorMessage = 'Storage quota exceeded. Please contact support.'\n          } else if (error.message?.includes('Unauthorized')) {\n            errorMessage = 'Permission denied. Please check your account permissions.'\n          } else if (error.message?.includes('CORS') || error.message?.includes('Access-Control') || error.message?.includes('ERR_FAILED') || error.message?.includes('preflight')) {\n            errorMessage = 'Upload blocked by browser security policy. Please check Firebase Storage configuration or try refreshing the page.'\n          }\n\n          setErrors({ transaction_images: errorMessage })\n          setIsSubmitting(false)\n          setIsUploadingImages(false)\n          return\n        }\n\n        setIsUploadingImages(false)\n      }\n\n      // Upload item images with the correct item IDs\n      if (imageFilesMap.size > 0) {\n        try {\n          console.log('Starting image upload process...')\n          // Get the created item IDs\n          const createdItemIds = await itemService.getTransactionItems(projectId, transactionId)\n          console.log('Created item IDs:', createdItemIds)\n\n          // Upload images for each item\n          for (let i = 0; i < items.length && i < createdItemIds.length; i++) {\n            const item = items[i]\n            const itemId = createdItemIds[i]\n            const imageFiles = imageFilesMap.get(item.id)\n\n            if (imageFiles && imageFiles.length > 0) {\n              console.log(`Uploading ${imageFiles.length} images for item ${itemId}`)\n\n              // Upload each image file with the final item ID\n              const uploadPromises = imageFiles.map(async (file, fileIndex) => {\n                try {\n                  console.log(`Uploading file ${fileIndex + 1}/${imageFiles.length}: ${file.name}`)\n                  const uploadResult = await ImageUploadService.uploadItemImage(\n                    file,\n                    projectName,\n                    itemId\n                  )\n                  console.log(`Upload successful for ${file.name}:`, uploadResult)\n                  console.log(`Upload result URL: ${uploadResult.url}`)\n\n                  const uploadedImage: ItemImage = {\n                    url: uploadResult.url,\n                    alt: file.name,\n                    isPrimary: item.images?.find(img => img.fileName === file.name)?.isPrimary || false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  }\n                  console.log('Created ItemImage object:', uploadedImage)\n                  return uploadedImage\n                } catch (uploadError) {\n                  console.error(`Failed to upload ${file.name}:`, uploadError)\n                  // Return a placeholder image object so the process continues\n                  return {\n                    url: '',\n                    alt: file.name,\n                    isPrimary: false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  } as ItemImage\n                }\n              })\n\n              const uploadedImages = await Promise.all(uploadPromises)\n              console.log('All uploads completed, updating item with images:', uploadedImages)\n\n              // Filter out any failed uploads (empty URLs)\n              const validImages = uploadedImages.filter(img => img.url && img.url.trim() !== '')\n              console.log(`Valid images to save: ${validImages.length}/${uploadedImages.length}`)\n\n              if (validImages.length > 0) {\n                // Update the item with the uploaded images\n                await itemService.updateItemImages(projectId, itemId, validImages)\n                console.log(`Successfully updated item ${itemId} with ${validImages.length} images`)\n              }\n            }\n          }\n        } catch (imageError) {\n          console.error('Error in image upload process:', imageError)\n          // Don't fail the transaction if image upload fails - just log the error\n          // The transaction was successfully created, items just won't have images\n        }\n      }\n\n      navigate(`/project/${projectId}?tab=transactions`)\n    } catch (error) {\n      console.error('Error creating transaction:', error)\n      setErrors({ general: error instanceof Error ? error.message : 'Failed to create transaction. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof TransactionFormData, value: string | boolean | File[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }))\n    }\n  }\n\n  const handleImagesChange = (files: File[]) => {\n    setFormData(prev => ({ ...prev, transaction_images: files }))\n    // Clear any existing image errors\n    if (errors.transaction_images) {\n      setErrors(prev => ({ ...prev, transaction_images: undefined }))\n    }\n  }\n\n  const handleImageFilesChange = (itemId: string, imageFiles: File[]) => {\n    // Update the imageFilesMap\n    setImageFilesMap(prev => {\n      const newMap = new Map(prev)\n      newMap.set(itemId, imageFiles)\n      return newMap\n    })\n\n    // Also update the item in the items array with the imageFiles\n    setItems(prevItems => prevItems.map(item =>\n      item.id === itemId\n        ? { ...item, imageFiles }\n        : item\n    ))\n  }\n\n  const handleImageUploadProgress = (fileIndex: number, progress: UploadProgress) => {\n    // Progress tracking removed to fix TypeScript errors\n    console.log(`Upload progress for file ${fileIndex}: ${progress.percentage}%`)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=transactions`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Transaction</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* General Error Display */}\n          {errors.general && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <div className=\"flex\">\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    <p>{errors.general}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Amount */}\n          <div>\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n              Amount *\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"amount\"\n                value={formData.amount}\n                onChange={(e) => handleInputChange('amount', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.amount ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.amount && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.amount}</p>\n            )}\n          </div>\n\n          {/* Transaction Source */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Source *\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n              {TRANSACTION_SOURCES.map((source) => (\n                <div key={source} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"source\"\n                    value={source}\n                    checked={formData.source === source}\n                    onChange={(e) => {\n                      handleInputChange('source', e.target.value)\n                      setIsCustomSource(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {source}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"source_custom\"\n                name=\"source\"\n                value=\"custom\"\n                checked={isCustomSource}\n                onChange={() => {\n                  setIsCustomSource(true)\n                  handleInputChange('source', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomSource && (\n              <input\n                type=\"text\"\n                id=\"source_custom_input\"\n                value={formData.source}\n                onChange={(e) => handleInputChange('source', e.target.value)}\n                placeholder=\"Enter custom source...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.source ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.source && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n            )}\n          </div>\n\n          {/* Transaction Method */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Method *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_client_card\"\n                  name=\"payment_method\"\n                  value=\"Client Card\"\n                  checked={formData.payment_method === 'Client Card'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_client_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  Client Card\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_1584_card\"\n                  name=\"payment_method\"\n                  value=\"1584 Card\"\n                  checked={formData.payment_method === '1584 Card'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_1584_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  1584 Card\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_split\"\n                  name=\"payment_method\"\n                  value=\"Split\"\n                  checked={formData.payment_method === 'Split'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_split\" className=\"ml-2 block text-sm text-gray-900\">\n                  Split\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_store_credit\"\n                  name=\"payment_method\"\n                  value=\"Store Credit\"\n                  checked={formData.payment_method === 'Store Credit'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_store_credit\" className=\"ml-2 block text-sm text-gray-900\">\n                  Store Credit\n                </label>\n              </div>\n            </div>\n            {errors.payment_method && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n            )}\n          </div>\n\n          {/* Transaction Date */}\n          <div>\n            <label htmlFor=\"transaction_date\" className=\"block text-sm font-medium text-gray-700\">\n              Transaction Date *\n            </label>\n            <input\n              type=\"date\"\n              id=\"transaction_date\"\n              value={formData.transaction_date}\n              onChange={(e) => {\n                // Use the date value directly (YYYY-MM-DD format)\n                handleInputChange('transaction_date', e.target.value)\n              }}\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.transaction_date ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.transaction_date && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_date}</p>\n            )}\n          </div>\n\n          {/* Transaction Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Type *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_purchase\"\n                  name=\"transaction_type\"\n                  value=\"Purchase\"\n                  checked={formData.transaction_type === 'Purchase'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_purchase\" className=\"ml-2 block text-sm text-gray-900\">\n                  Purchase\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_return\"\n                  name=\"transaction_type\"\n                  value=\"Return\"\n                  checked={formData.transaction_type === 'Return'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_return\" className=\"ml-2 block text-sm text-gray-900\">\n                  Return\n                </label>\n              </div>\n            </div>\n            {errors.transaction_type && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_type}</p>\n            )}\n          </div>\n\n          {/* Budget Category */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Budget Category *\n            </label>\n            <select\n              value={formData.budget_category || 'Furnishings'}\n              onChange={(e) => handleInputChange('budget_category', e.target.value)}\n              className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.budget_category ? 'border-red-300' : 'border-gray-300'\n              }`}\n            >\n              <option value=\"Design Fee\">Design Fee</option>\n              <option value=\"Furnishings\">Furnishings</option>\n              <option value=\"Property Management\">Property Management</option>\n              <option value=\"Kitchen\">Kitchen</option>\n              <option value=\"Install\">Install</option>\n              <option value=\"Storage & Receiving\">Storage & Receiving</option>\n              <option value=\"Fuel\">Fuel</option>\n            </select>\n            {errors.budget_category && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.budget_category}</p>\n            )}\n          </div>\n\n\n          {/* Receipt Email Copy */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Receipt Email Copy\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_yes\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === true}\n                  onChange={() => handleInputChange('receipt_emailed', true)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_yes\" className=\"ml-2 block text-sm text-gray-900\">\n                  Yes\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_no\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === false}\n                  onChange={() => handleInputChange('receipt_emailed', false)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_no\" className=\"ml-2 block text-sm text-gray-900\">\n                  No\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n              Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              rows={3}\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Additional notes about this transaction...\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.notes ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.notes && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.notes}</p>\n            )}\n          </div>\n\n          {/* Transaction Items */}\n          <div>\n            <TransactionItemsList\n              items={items}\n              onItemsChange={(newItems) => {\n                setItems(newItems)\n                // Clear items error if items are added\n                if (errors.items && newItems.length > 0) {\n                  setErrors(prev => ({ ...prev, items: undefined }))\n                }\n              }}\n              projectId={projectId}\n              projectName={projectName}\n              onImageFilesChange={handleImageFilesChange}\n            />\n            {errors.items && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.items}</p>\n            )}\n          </div>\n\n          {/* Transaction Images */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Transaction Images\n            </h3>\n            <ImageUpload\n              onImagesChange={handleImagesChange}\n              maxImages={5}\n              maxFileSize={10}\n              disabled={isSubmitting || isUploadingImages}\n              className=\"mb-2\"\n            />\n            {errors.transaction_images && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_images}</p>\n            )}\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Link\n              to={`/project/${projectId}?tab=transactions`}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              <X className=\"h-4 w-4 mr-2\" />\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting || isUploadingImages}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : isUploadingImages ? 'Uploading Images...' : 'Create Transaction'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":["AddTransaction","projectId","useParams","navigate","useNavigate","hasRole","useAuth","UserRole","jsxs","jsx","Shield","Link","projectName","setProjectName","useState","useEffect","project","projectService","error","formData","setFormData","today","items","setItems","imageFilesMap","setImageFilesMap","isCustomSource","setIsCustomSource","TRANSACTION_SOURCES","errors","setErrors","isSubmitting","setIsSubmitting","isUploadingImages","setIsUploadingImages","validateForm","newErrors","_a","handleSubmit","e","transaction_images","formDataWithoutImages","transactionData","transactionId","transactionService","uploadResults","ImageUploadService","handleImageUploadProgress","transactionImages","updateError","resolve","errorMessage","_b","_c","_d","_e","_f","_g","_h","_i","createdItemIds","itemService","i","item","itemId","imageFiles","uploadPromises","file","fileIndex","uploadResult","uploadedImage","img","uploadError","uploadedImages","validImages","imageError","handleInputChange","field","value","prev","handleImagesChange","files","handleImageFilesChange","newMap","prevItems","progress","ArrowLeft","source","TransactionItemsList","newItems","ImageUpload","X","Save"],"mappings":"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"}