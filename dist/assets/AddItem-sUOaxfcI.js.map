{"version":3,"file":"AddItem-sUOaxfcI.js","sources":["../../src/pages/AddItem.tsx"],"sourcesContent":["import { ArrowLeft, Save, X } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { itemService, transactionService } from '@/services/inventoryService'\nimport { TRANSACTION_SOURCES, TransactionSource } from '@/constants/transactionSources'\nimport { Transaction } from '@/types'\n\nexport default function AddItem() {\n  const { id: projectId } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n\n  const [formData, setFormData] = useState<{\n    description: string\n    source: string\n    sku: string\n    price: string\n    resale_price: string\n    market_value: string\n    payment_method: string\n    disposition: string\n    notes: string\n    selectedTransactionId: string\n  }>({\n    description: '',\n    source: '',\n    sku: '',\n    price: '',\n    resale_price: '',\n    market_value: '',\n    payment_method: '',\n    disposition: '',\n    notes: '',\n    selectedTransactionId: ''\n  })\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n  const [isCustomPaymentMethod, setIsCustomPaymentMethod] = useState(false)\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [loadingTransactions, setLoadingTransactions] = useState(false)\n\n  // Fetch transactions when component mounts\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      if (projectId) {\n        setLoadingTransactions(true)\n        try {\n          const fetchedTransactions = await transactionService.getTransactions(projectId)\n          setTransactions(fetchedTransactions)\n        } catch (error) {\n          console.error('Error fetching transactions:', error)\n        } finally {\n          setLoadingTransactions(false)\n        }\n      }\n    }\n\n    fetchTransactions()\n  }, [projectId])\n\n  // Initialize custom states based on initial form data\n  useEffect(() => {\n    const predefinedSources = TRANSACTION_SOURCES\n    if (formData.source && !predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(true)\n    } else if (formData.source && predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  useEffect(() => {\n    const predefinedPaymentMethods = ['Client Card', '1584 Card', 'Split', 'Store Credit']\n    if (formData.payment_method && !predefinedPaymentMethods.includes(formData.payment_method)) {\n      setIsCustomPaymentMethod(true)\n    } else if (formData.payment_method && predefinedPaymentMethods.includes(formData.payment_method)) {\n      setIsCustomPaymentMethod(false)\n    }\n  }, [formData.payment_method])\n\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n    if (!formData.source.trim()) {\n      newErrors.source = 'Source is required'\n    }\n\n    if (!formData.payment_method.trim()) {\n      newErrors.payment_method = 'Payment method is required'\n    }\n\n    if (!formData.disposition.trim()) {\n      newErrors.disposition = 'Disposition is required'\n    }\n\n    if (!formData.price.trim()) {\n      newErrors.price = 'Price is required'\n    } else if (isNaN(Number(formData.price)) || Number(formData.price) <= 0) {\n      newErrors.price = 'Price must be a positive number'\n    }\n\n    // Validate market value if provided\n    if (formData.market_value.trim() && (isNaN(Number(formData.market_value)) || Number(formData.market_value) <= 0)) {\n      newErrors.market_value = 'Market value must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !projectId) return\n\n    setIsSubmitting(true)\n\n    try {\n      const itemData = {\n        ...formData,\n        project_id: projectId,\n        qr_key: `qr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        bookmark: false,\n        transaction_id: formData.selectedTransactionId || '', // Use selected transaction or empty string\n        date_created: new Date().toISOString(),\n        last_updated: new Date().toISOString()\n      }\n\n      await itemService.createItem(projectId, itemData)\n      navigate(`/project/${projectId}?tab=inventory`)\n    } catch (error) {\n      console.error('Error creating item:', error)\n      setErrors({ submit: 'Failed to create item. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const handleTransactionChange = (transactionId: string) => {\n    setFormData(prev => ({ ...prev, selectedTransactionId: transactionId }))\n\n    // Clear error when user makes selection\n    if (errors.selectedTransactionId) {\n      setErrors(prev => ({ ...prev, selectedTransactionId: '' }))\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=inventory`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Item</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n              Description *\n            </label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              placeholder=\"e.g., Wooden dining table, 6 chairs\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.description ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.description && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n            )}\n          </div>\n\n          {/* Source */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Source *\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n              {TRANSACTION_SOURCES.map((source) => (\n                <div key={source} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"source\"\n                    value={source}\n                    checked={formData.source === source}\n                    onChange={(e) => {\n                      handleInputChange('source', e.target.value)\n                      setIsCustomSource(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {source}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"source_custom\"\n                name=\"source\"\n                value=\"custom\"\n                checked={isCustomSource}\n                onChange={() => {\n                  setIsCustomSource(true)\n                  handleInputChange('source', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomSource && (\n              <input\n                type=\"text\"\n                id=\"source_custom_input\"\n                value={formData.source}\n                onChange={(e) => handleInputChange('source', e.target.value)}\n                placeholder=\"Enter custom source...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.source ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.source && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n            )}\n          </div>\n\n          {/* SKU */}\n          <div>\n            <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n              SKU\n            </label>\n            <input\n              type=\"text\"\n              id=\"sku\"\n              value={formData.sku}\n              onChange={(e) => handleInputChange('sku', e.target.value)}\n              placeholder=\"Product SKU or model number\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Price and Market Value */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n                Purchase Price *\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"price\"\n                  value={formData.price}\n                  onChange={(e) => handleInputChange('price', e.target.value)}\n                  placeholder=\"0.00\"\n                  className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                    errors.price ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                />\n              </div>\n              {errors.price && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n                Market Value\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"market_value\"\n                  value={formData.market_value}\n                  onChange={(e) => handleInputChange('market_value', e.target.value)}\n                  placeholder=\"0.00\"\n                  className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                    errors.market_value ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                />\n              </div>\n              {errors.market_value && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n              )}\n            </div>\n          </div>\n\n          {/* 1584 Resale Price */}\n          <div>\n            <label htmlFor=\"resale_price\" className=\"block text-sm font-medium text-gray-700\">\n              1584 Resale Price\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"resale_price\"\n                value={formData.resale_price}\n                onChange={(e) => handleInputChange('resale_price', e.target.value)}\n                placeholder=\"0.00\"\n                className=\"block w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n\n          {/* Payment Method */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Payment Method *\n            </label>\n            <div className=\"flex items-center space-x-6 mb-3\">\n              {['Client Card', '1584 Card', 'Split', 'Store Credit'].map((method) => (\n                <div key={method} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"payment_method\"\n                    value={method}\n                    checked={formData.payment_method === method}\n                    onChange={(e) => {\n                      handleInputChange('payment_method', e.target.value)\n                      setIsCustomPaymentMethod(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {method}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"payment_custom\"\n                name=\"payment_method\"\n                value=\"custom\"\n                checked={isCustomPaymentMethod}\n                onChange={() => {\n                  setIsCustomPaymentMethod(true)\n                  handleInputChange('payment_method', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"payment_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomPaymentMethod && (\n              <input\n                type=\"text\"\n                id=\"payment_custom_input\"\n                value={formData.payment_method}\n                onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                placeholder=\"Enter custom payment method...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.payment_method ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.payment_method && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n            )}\n          </div>\n\n          {/* Disposition */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Disposition *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              {['keep', 'return', 'inventory'].map((disposition) => (\n                <div key={disposition} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`disposition_${disposition.toLowerCase()}`}\n                    name=\"disposition\"\n                    value={disposition}\n                    checked={formData.disposition === disposition}\n                    onChange={(e) => handleInputChange('disposition', e.target.value)}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`disposition_${disposition.toLowerCase()}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {disposition.charAt(0).toUpperCase() + disposition.slice(1)}\n                  </label>\n                </div>\n              ))}\n            </div>\n            {errors.disposition && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.disposition}</p>\n            )}\n          </div>\n\n          {/* Transaction Selection */}\n          <div>\n            <label htmlFor=\"selectedTransactionId\" className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Associate with Transaction (Optional)\n            </label>\n            <select\n              id=\"selectedTransactionId\"\n              value={formData.selectedTransactionId}\n              onChange={(e) => handleTransactionChange(e.target.value)}\n              className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.selectedTransactionId ? 'border-red-300' : 'border-gray-300'\n              }`}\n              disabled={loadingTransactions}\n            >\n              <option value=\"\">Select a transaction (optional)</option>\n              {loadingTransactions ? (\n                <option disabled>Loading transactions...</option>\n              ) : (\n                transactions.map((transaction) => (\n                  <option key={transaction.transaction_id} value={transaction.transaction_id}>\n                    {new Date(transaction.transaction_date).toLocaleDateString()} - {transaction.source} - ${transaction.amount}\n                  </option>\n                ))\n              )}\n            </select>\n            {errors.selectedTransactionId && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.selectedTransactionId}</p>\n            )}\n            {!loadingTransactions && transactions.length === 0 && (\n              <p className=\"mt-1 text-sm text-gray-500\">No transactions available for this project</p>\n            )}\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n              Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              rows={3}\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Additional notes about this item...\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Error message */}\n          {errors.submit && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\n            </div>\n          )}\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Link\n              to={`/project/${projectId}?tab=inventory`}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              <X className=\"h-4 w-4 mr-2\" />\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : 'Create Item'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":["AddItem","projectId","useParams","navigate","useNavigate","formData","setFormData","useState","isCustomSource","setIsCustomSource","isCustomPaymentMethod","setIsCustomPaymentMethod","transactions","setTransactions","loadingTransactions","setLoadingTransactions","useEffect","fetchedTransactions","transactionService","error","predefinedSources","TRANSACTION_SOURCES","predefinedPaymentMethods","errors","setErrors","isSubmitting","setIsSubmitting","validateForm","newErrors","handleSubmit","e","itemData","itemService","handleInputChange","field","value","prev","handleTransactionChange","transactionId","jsxs","jsx","Link","ArrowLeft","source","method","disposition","transaction","X","Save"],"mappings":"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"}