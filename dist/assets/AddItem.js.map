{"version":3,"file":"AddItem.js","sources":["../../src/pages/AddItem.tsx"],"sourcesContent":["import { ArrowLeft, Save, X } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect, useRef } from 'react'\nimport { transactionService, projectService, unifiedItemsService } from '@/services/inventoryService'\nimport { ImageUploadService } from '@/services/imageService'\nimport { TRANSACTION_SOURCES, TransactionSource } from '@/constants/transactionSources'\nimport { Transaction, ItemImage } from '@/types'\nimport { Select } from '@/components/ui/Select'\nimport ImagePreview from '@/components/ui/ImagePreview'\nimport { useAuth } from '../contexts/AuthContext'\nimport { UserRole } from '../types'\nimport { Shield } from 'lucide-react'\nimport { getUserFriendlyErrorMessage, getErrorAction } from '@/utils/imageUtils'\nimport { useToast } from '@/components/ui/ToastContext'\n\nexport default function AddItem() {\n  const { id: projectId } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const { hasRole } = useAuth()\n  const { showError } = useToast()\n\n  const [projectName, setProjectName] = useState<string>('')\n\n  // Check if user has permission to add items (DESIGNER role or higher)\n  if (!hasRole(UserRole.DESIGNER)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-red-100\">\n            <Shield className=\"h-6 w-6 text-red-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Access Denied</h2>\n          <p className=\"text-gray-600\">\n            You don't have permission to add items. Please contact an administrator if you need access.\n          </p>\n          <Link\n            to={`/project/${projectId}`}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            Back to Project\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const [formData, setFormData] = useState<{\n    description: string\n    source: string\n    sku: string\n    purchase_price: string\n    project_price: string\n    market_value: string\n    payment_method: string\n    space: string\n    notes: string\n    selectedTransactionId: string\n  }>({\n    description: '',\n    source: '',\n    sku: '',\n    purchase_price: '',\n    project_price: '',\n    market_value: '',\n    payment_method: '',\n    space: '',\n    notes: '',\n    selectedTransactionId: ''\n  })\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [loadingTransactions, setLoadingTransactions] = useState(false)\n  const [images, setImages] = useState<ItemImage[]>([])\n  const [isUploadingImage, setIsUploadingImage] = useState(false)\n  const [uploadProgress, setUploadProgress] = useState<number>(0)\n\n  // Track if user has manually edited project_price\n  const projectPriceEditedRef = useRef(false)\n\n  // Track if transaction is selected to hide source/payment method fields\n  const isTransactionSelected = Boolean(formData.selectedTransactionId)\n\n  // Fetch project name and transactions when component mounts\n  useEffect(() => {\n    const fetchProjectAndTransactions = async () => {\n      if (projectId) {\n        setLoadingTransactions(true)\n        try {\n          // Fetch project name for image uploads\n          const project = await projectService.getProject(projectId)\n          if (project) {\n            setProjectName(project.name)\n          }\n\n          // Fetch transactions\n          const fetchedTransactions = await transactionService.getTransactions(projectId)\n          setTransactions(fetchedTransactions)\n        } catch (error) {\n          console.error('Error fetching project and transactions:', error)\n        } finally {\n          setLoadingTransactions(false)\n        }\n      }\n    }\n\n    fetchProjectAndTransactions()\n  }, [projectId])\n\n  // Initialize custom states based on initial form data\n  useEffect(() => {\n    const predefinedSources = TRANSACTION_SOURCES\n    if (formData.source && !predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(true)\n    } else if (formData.source && predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  // Auto-fill project_price when purchase_price is set and project_price is empty and hasn't been manually edited\n  useEffect(() => {\n    if (formData.purchase_price && !formData.project_price && !projectPriceEditedRef.current) {\n      setFormData(prev => ({ ...prev, project_price: formData.purchase_price }))\n    }\n  }, [formData.purchase_price]) // Only depend on purchase_price, not project_price\n\n\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !projectId) return\n\n    setIsSubmitting(true)\n\n    try {\n      const itemData = {\n        ...formData,\n        project_id: projectId,\n        qr_key: `qr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        bookmark: false,\n        transaction_id: formData.selectedTransactionId || '', // Use selected transaction or empty string\n        date_created: new Date().toISOString(),\n        last_updated: new Date().toISOString(),\n        images: images.length > 0 ? images : undefined\n      }\n\n      await unifiedItemsService.createItem(itemData)\n      navigate(`/project/${projectId}?tab=inventory`)\n    } catch (error) {\n      console.error('Error creating item:', error)\n      setErrors({ submit: 'Failed to create item. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Mark project_price as manually edited if user is editing it\n    if (field === 'project_price') {\n      projectPriceEditedRef.current = true\n    }\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const handleTransactionChange = (transactionId: string) => {\n    const selectedTransaction = transactions.find(t => t.transaction_id === transactionId)\n\n    setFormData(prev => ({\n      ...prev,\n      selectedTransactionId: transactionId,\n      // Pre-fill source and payment method from selected transaction\n      source: selectedTransaction?.source || '',\n      payment_method: selectedTransaction?.payment_method || ''\n    }))\n\n    // Update custom state based on pre-filled values\n    if (selectedTransaction?.source) {\n      const isPredefinedSource = TRANSACTION_SOURCES.includes(selectedTransaction.source as TransactionSource)\n      setIsCustomSource(!isPredefinedSource)\n    }\n\n\n    // Clear error when user makes selection\n    if (errors.selectedTransactionId) {\n      setErrors(prev => ({ ...prev, selectedTransactionId: '' }))\n    }\n  }\n\n  const handleMultipleImageUpload = async (files: File[]) => {\n    if (!projectName) return\n\n    try {\n      setIsUploadingImage(true)\n      setUploadProgress(0)\n\n      console.log('Starting multiple image upload for', files.length, 'files')\n\n      const uploadResults = await ImageUploadService.uploadMultipleItemImages(\n        files,\n        projectName,\n        'new-item', // temporary ID for new items\n        (fileIndex, progress) => {\n          // Show progress for current file being uploaded\n          const overallProgress = Math.round(((fileIndex + progress.percentage / 100) / files.length) * 100)\n          setUploadProgress(overallProgress)\n        }\n      )\n\n      console.log('All uploads completed successfully:', uploadResults.length, 'images')\n\n      // Convert upload results to ItemImage objects\n      const newImages: ItemImage[] = uploadResults.map((result, index) => ({\n        url: result.url,\n        alt: result.fileName,\n        isPrimary: images.length === 0 && index === 0, // First image is primary if no images exist\n        uploadedAt: new Date(),\n        fileName: result.fileName,\n        size: result.size,\n        mimeType: result.mimeType\n      }))\n\n      console.log('New image objects created:', newImages.length)\n\n      // Update the images array\n      setImages(prev => [...prev, ...newImages])\n      setUploadProgress(100)\n\n      console.log('Multiple image upload completed successfully')\n    } catch (error) {\n      console.error('Error uploading multiple images:', error)\n      const friendlyMessage = getUserFriendlyErrorMessage(error)\n      const action = getErrorAction(error)\n      showError(`${friendlyMessage} Suggestion: ${action}`)\n    } finally {\n      setIsUploadingImage(false)\n      setUploadProgress(0)\n    }\n  }\n\n  const handleSelectFromGallery = async () => {\n    if (!projectName) return\n\n    try {\n      setIsUploadingImage(true)\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files && files.length > 0) {\n        console.log('Selected', files.length, 'files from gallery')\n        await handleMultipleImageUpload(files)\n      } else {\n        console.log('No files selected from gallery')\n      }\n    } catch (error: any) {\n      console.error('Error selecting from gallery:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      const friendlyMessage = getUserFriendlyErrorMessage(error)\n      const action = getErrorAction(error)\n      showError(`${friendlyMessage} Suggestion: ${action}`)\n    } finally {\n      setIsUploadingImage(false)\n      setUploadProgress(0)\n    }\n  }\n\n  const handleRemoveImage = async (imageUrl: string) => {\n    // Remove from local state\n    setImages(prev => prev.filter(img => img.url !== imageUrl))\n\n    // Note: For new items, we don't need to delete from storage since they haven't been saved yet\n    // The images will be cleaned up when the item is actually created\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=inventory`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Item</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* Item Images */}\n          <div>\n            <div className=\"mb-3 flex items-center justify-between\">\n              <label className=\"block text-sm font-medium text-gray-700\">\n                Item Images\n              </label>\n              {images.length > 0 && (\n                <button\n                  onClick={handleSelectFromGallery}\n                  disabled={isUploadingImage || images.length >= 5}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n                >\n                  {isUploadingImage\n                    ? uploadProgress > 0 && uploadProgress < 100\n                      ? `Uploading... ${Math.round(uploadProgress)}%`\n                      : 'Uploading...'\n                    : images.length >= 5\n                      ? 'Max reached'\n                      : 'Add Images'\n                  }\n                </button>\n              )}\n            </div>\n\n            {images.length > 0 ? (\n              <ImagePreview\n                images={images}\n                onRemoveImage={handleRemoveImage}\n                maxImages={5}\n                size=\"md\"\n                showControls={true}\n              />\n            ) : (\n              <div className=\"text-center py-8 border-2 border-dashed border-gray-300 rounded-lg\">\n                <p className=\"text-sm text-gray-500 mb-3\">No images for this item yet</p>\n                <button\n                  onClick={handleSelectFromGallery}\n                  disabled={isUploadingImage}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n                >\n                  {isUploadingImage\n                    ? uploadProgress > 0 && uploadProgress < 100\n                      ? `Uploading... ${Math.round(uploadProgress)}%`\n                      : 'Uploading...'\n                    : 'Add Images'\n                  }\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n              Description *\n            </label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              placeholder=\"e.g., Wooden dining table, 6 chairs\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.description ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.description && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n            )}\n          </div>\n\n          {/* Transaction Selection */}\n          <Select\n            label=\"Associate with Transaction\"\n            id=\"selectedTransactionId\"\n            value={formData.selectedTransactionId}\n            onChange={(e) => handleTransactionChange(e.target.value)}\n            error={errors.selectedTransactionId}\n            disabled={loadingTransactions}\n          >\n            <option value=\"\">Select a transaction</option>\n            {loadingTransactions ? (\n              <option disabled>Loading transactions...</option>\n            ) : (\n              transactions.map((transaction) => (\n                <option key={transaction.transaction_id} value={transaction.transaction_id}>\n                  {new Date(transaction.transaction_date).toLocaleDateString()} - {transaction.source} - ${transaction.amount}\n                </option>\n              ))\n            )}\n          </Select>\n          {!loadingTransactions && transactions.length === 0 && (\n            <p className=\"mt-1 text-sm text-gray-500\">No transactions available for this project</p>\n          )}\n\n          {/* Show transaction info when selected */}\n          {isTransactionSelected && (\n            <div className=\"mt-2 p-3 bg-blue-50 border border-blue-200 rounded-md\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Source:</strong> {formData.source} |\n                <strong> Payment Method:</strong> {formData.payment_method}\n              </p>\n              <p className=\"text-xs text-blue-600 mt-1\">\n                These values are automatically filled from the selected transaction\n              </p>\n            </div>\n          )}\n\n          {/* Source */}\n          {!isTransactionSelected && (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Source\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n              {TRANSACTION_SOURCES.map((source) => (\n                <div key={source} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"source\"\n                    value={source}\n                    checked={formData.source === source}\n                    onChange={(e) => {\n                      handleInputChange('source', e.target.value)\n                      setIsCustomSource(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {source}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"source_custom\"\n                name=\"source\"\n                value=\"custom\"\n                checked={isCustomSource}\n                onChange={() => {\n                  setIsCustomSource(true)\n                  handleInputChange('source', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomSource && (\n              <input\n                type=\"text\"\n                id=\"source_custom_input\"\n                value={formData.source}\n                onChange={(e) => handleInputChange('source', e.target.value)}\n                placeholder=\"Enter custom source...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.source ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.source && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n            )}\n          </div>\n          )}\n\n          {/* Payment Method */}\n          {!isTransactionSelected && formData.source !== 'Inventory' && (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Payment Method\n            </label>\n            <div className=\"flex items-center space-x-6 mb-3\">\n              {['Client Card', '1584 Design'].map((method) => (\n                <div key={method} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"payment_method\"\n                    value={method}\n                    checked={formData.payment_method === method}\n                    onChange={(e) => {\n                      handleInputChange('payment_method', e.target.value)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`payment_${method.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {method}\n                  </label>\n                </div>\n              ))}\n            </div>\n            {errors.payment_method && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n            )}\n          </div>\n          )}\n\n          {/* SKU */}\n          <div>\n            <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n              SKU\n            </label>\n            <input\n              type=\"text\"\n              id=\"sku\"\n              value={formData.sku}\n              onChange={(e) => handleInputChange('sku', e.target.value)}\n              placeholder=\"Product SKU or model number\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Purchase Price */}\n          <div>\n            <label htmlFor=\"purchase_price\" className=\"block text-sm font-medium text-gray-700\">\n              Purchase Price\n            </label>\n            <p className=\"text-xs text-gray-500 mt-1 mb-2\">What the item was purchased for</p>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"purchase_price\"\n                value={formData.purchase_price}\n                onChange={(e) => handleInputChange('purchase_price', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.purchase_price ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.purchase_price && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.purchase_price}</p>\n            )}\n          </div>\n\n          {/* Project Price */}\n          <div>\n            <label htmlFor=\"project_price\" className=\"block text-sm font-medium text-gray-700\">\n              Project Price\n            </label>\n            <p className=\"text-xs text-gray-500 mt-1 mb-2\">What the client is charged (defaults to purchase price)</p>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"project_price\"\n                value={formData.project_price}\n                onChange={(e) => handleInputChange('project_price', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.project_price ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.project_price && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.project_price}</p>\n            )}\n          </div>\n\n          {/* Market Value */}\n          <div>\n            <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n              Market Value\n            </label>\n            <p className=\"text-xs text-gray-500 mt-1 mb-2\">The fair market value of the item</p>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"market_value\"\n                value={formData.market_value}\n                onChange={(e) => handleInputChange('market_value', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.market_value ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.market_value && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n            )}\n          </div>\n\n\n\n          {/* Space */}\n          <div>\n            <label htmlFor=\"space\" className=\"block text-sm font-medium text-gray-700\">\n              Space\n            </label>\n            <input\n              type=\"text\"\n              id=\"space\"\n              value={formData.space}\n              onChange={(e) => handleInputChange('space', e.target.value)}\n              placeholder=\"e.g., Living Room, Master Bedroom, Kitchen\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n              Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              rows={3}\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Additional notes about this item...\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n\n          {/* Error message */}\n          {errors.submit && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\n            </div>\n          )}\n\n          {/* Form Actions - Normal on desktop, hidden on mobile (replaced by sticky bar) */}\n          <div className=\"hidden sm:flex justify-end sm:space-x-3 pt-4\">\n            <Link\n              to={`/project/${projectId}?tab=inventory`}\n              className=\"inline-flex justify-center items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              <X className=\"h-4 w-4 mr-2\" />\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : 'Create'}\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {/* Sticky mobile action bar */}\n      <div className=\"sm:hidden fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 z-50\">\n        <div className=\"flex space-x-3\">\n          <Link\n            to={`/project/${projectId}?tab=inventory`}\n            className=\"flex-1 inline-flex justify-center items-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            <X className=\"h-4 w-4 mr-2\" />\n            Cancel\n          </Link>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            onClick={(e) => {\n              // Find the form and submit it\n              const form = e.currentTarget.closest('.space-y-6')?.querySelector('form') as HTMLFormElement\n              if (form) {\n                form.requestSubmit()\n              }\n            }}\n            className=\"flex-1 inline-flex justify-center items-center px-4 py-3 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Save className=\"h-4 w-4 mr-2\" />\n            {isSubmitting ? 'Creating...' : 'Create'}\n          </button>\n        </div>\n      </div>\n\n      {/* Add bottom padding to account for sticky bar on mobile */}\n      <div className=\"sm:hidden h-20\"></div>\n    </div>\n  )\n}\n"],"names":["AddItem","projectId","useParams","navigate","useNavigate","hasRole","useAuth","showError","useToast","projectName","setProjectName","useState","UserRole","jsxs","jsx","Shield","Link","formData","setFormData","isCustomSource","setIsCustomSource","transactions","setTransactions","loadingTransactions","setLoadingTransactions","images","setImages","isUploadingImage","setIsUploadingImage","uploadProgress","setUploadProgress","projectPriceEditedRef","useRef","isTransactionSelected","useEffect","project","projectService","fetchedTransactions","transactionService","error","predefinedSources","TRANSACTION_SOURCES","prev","errors","setErrors","isSubmitting","setIsSubmitting","validateForm","newErrors","handleSubmit","e","itemData","unifiedItemsService","handleInputChange","field","value","handleTransactionChange","transactionId","selectedTransaction","isPredefinedSource","handleMultipleImageUpload","files","uploadResults","ImageUploadService","fileIndex","progress","overallProgress","newImages","result","index","friendlyMessage","getUserFriendlyErrorMessage","action","getErrorAction","handleSelectFromGallery","_a","_b","handleRemoveImage","imageUrl","img","ArrowLeft","ImagePreview","Select","transaction","source","method","X","Save","form"],"mappings":"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"}