{"version":3,"file":"AddTransaction-BsM0n7YB.js","sources":["../../src/components/TransactionItemForm.tsx","../../src/components/TransactionItemsList.tsx","../../src/pages/AddTransaction.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { X, Camera } from 'lucide-react'\nimport { TransactionItemFormData, TransactionItemValidationErrors, ItemImage } from '@/types'\nimport { ImageUploadService } from '@/services/imageService'\nimport ImagePreview from './ui/ImagePreview'\nimport { useToast } from '@/components/ui/ToastContext'\n\ninterface TransactionItemFormProps {\n  item?: TransactionItemFormData\n  onSave: (item: TransactionItemFormData) => void\n  onCancel: () => void\n  isEditing?: boolean\n  projectId?: string\n  projectName?: string\n  onImageFilesChange?: (itemId: string, imageFiles: File[]) => void\n}\n\nexport default function TransactionItemForm({ item, onSave, onCancel, isEditing = false, onImageFilesChange }: TransactionItemFormProps) {\n  const [formData, setFormData] = useState<TransactionItemFormData>(\n    item || {\n      id: `temp_${Date.now()}`,\n      description: '',\n      sku: '',\n      price: '',\n      market_value: '',\n      notes: ''\n    }\n  )\n\n  const [itemImages, setItemImages] = useState<ItemImage[]>(item?.images || [])\n  const [imageFiles, setImageFiles] = useState<File[]>(item?.imageFiles || [])\n  const [isUploadingImage, setIsUploadingImage] = useState(false)\n\n  const [errors, setErrors] = useState<TransactionItemValidationErrors>({})\n  const { showError } = useToast()\n\n  // Update state when item prop changes (for editing existing items)\n  useEffect(() => {\n    if (item) {\n      console.log('TransactionItemForm: Editing item with images:', item.images?.length || 0, 'imageFiles:', item.imageFiles?.length || 0)\n      setItemImages(item.images || [])\n      setImageFiles(item.imageFiles || [])\n      setFormData({\n        id: item.id,\n        description: item.description,\n        sku: item.sku || '',\n        price: item.price,\n        market_value: item.market_value || '',\n        notes: item.notes || ''\n      })\n    }\n  }, [item])\n\n\n  const handleSelectFromGallery = async () => {\n    try {\n      setIsUploadingImage(true)\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files && files.length > 0) {\n        console.log('Selected', files.length, 'files from gallery')\n\n        // Store the files for later upload when the transaction is submitted\n        setImageFiles(prev => [...prev, ...files])\n\n        // Create preview image objects (without URLs until uploaded)\n        const previewImages: ItemImage[] = files.map((file, index) => ({\n          url: '', // Will be set when uploaded with final item ID\n          alt: file.name,\n          isPrimary: itemImages.length === 0 && index === 0, // First image is primary if no images exist\n          uploadedAt: new Date(),\n          fileName: file.name,\n          size: file.size,\n          mimeType: file.type\n        }))\n\n        setItemImages(prev => [...prev, ...previewImages])\n        console.log('Added', previewImages.length, 'preview images')\n      } else {\n        console.log('No files selected from gallery')\n      }\n    } catch (error: any) {\n      console.error('Error selecting from gallery:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      showError('Failed to select images from gallery. Please try again.')\n    } finally {\n      setIsUploadingImage(false)\n    }\n  }\n\n  const handleRemoveImage = (imageUrl: string) => {\n    const imageIndex = itemImages.findIndex(img => img.url === imageUrl)\n    if (imageIndex !== -1 && imageIndex < imageFiles.length) {\n      // Remove both the image and the corresponding file\n      setItemImages(prev => prev.filter(img => img.url !== imageUrl))\n      setImageFiles(prev => prev.filter((_, index) => index !== imageIndex))\n    }\n  }\n\n  const handleSetPrimaryImage = (imageUrl: string) => {\n    setItemImages(prev => prev.map(img => ({\n      ...img,\n      isPrimary: img.url === imageUrl\n    })))\n  }\n\n  const validateForm = (): boolean => {\n    const newErrors: TransactionItemValidationErrors = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n    if (!formData.price.trim()) {\n      newErrors.price = 'Price is required'\n    } else if (isNaN(Number(formData.price)) || Number(formData.price) <= 0) {\n      newErrors.price = 'Price must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = () => {\n    if (!validateForm()) return\n\n    // Include images and files in the form data\n    const itemWithImages = {\n      ...formData,\n      images: itemImages,\n      imageFiles: imageFiles // Include the actual files for upload\n    }\n\n    // Notify parent about image files if callback exists\n    if (onImageFilesChange && imageFiles.length > 0) {\n      onImageFilesChange(formData.id, imageFiles)\n    }\n\n    onSave(itemWithImages)\n  }\n\n  const handleInputChange = (field: keyof TransactionItemFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field as keyof TransactionItemValidationErrors]) {\n      setErrors(prev => ({ ...prev, [field]: undefined } as TransactionItemValidationErrors))\n    }\n  }\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">\n          {isEditing ? 'Edit Item' : 'Add Item'}\n        </h3>\n        <button\n          onClick={onCancel}\n          className=\"text-gray-400 hover:text-gray-600\"\n          type=\"button\"\n        >\n          <X className=\"h-5 w-5\" />\n        </button>\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Description */}\n        <div>\n          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n            Description *\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={formData.description}\n            onChange={(e) => handleInputChange('description', e.target.value)}\n            placeholder=\"Item description\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.description ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.description && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n          )}\n        </div>\n\n        {/* SKU */}\n        <div>\n          <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n            SKU\n          </label>\n          <input\n            type=\"text\"\n            id=\"sku\"\n            value={formData.sku}\n            onChange={(e) => handleInputChange('sku', e.target.value)}\n            placeholder=\"Stock keeping unit\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.sku ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.sku && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.sku}</p>\n          )}\n        </div>\n\n        {/* Price */}\n        <div>\n          <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n            Price *\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"price\"\n              value={formData.price}\n              onChange={(e) => handleInputChange('price', e.target.value)}\n              placeholder=\"0.00\"\n              className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.price ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n          </div>\n          {errors.price && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>\n          )}\n        </div>\n\n        {/* Market Value */}\n        <div>\n          <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n            Market Value\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"market_value\"\n              value={formData.market_value}\n              onChange={(e) => handleInputChange('market_value', e.target.value)}\n              placeholder=\"0.00\"\n              className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.market_value ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n          </div>\n          {errors.market_value && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n          )}\n        </div>\n\n        {/* Notes */}\n        <div>\n          <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n            Notes\n          </label>\n          <textarea\n            id=\"notes\"\n            rows={2}\n            value={formData.notes}\n            onChange={(e) => handleInputChange('notes', e.target.value)}\n            placeholder=\"Additional notes about this item\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.notes ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.notes && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.notes}</p>\n          )}\n        </div>\n\n        {/* Item Images */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Item Images\n          </label>\n\n          {/* Image upload button */}\n          <button\n            type=\"button\"\n            onClick={handleSelectFromGallery}\n            disabled={isUploadingImage}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 mb-3\"\n            title=\"Add images from gallery or camera\"\n          >\n            <Camera className=\"h-4 w-4 mr-2\" />\n            {isUploadingImage ? 'Uploading...' : 'Add Images'}\n          </button>\n\n          {/* Image preview */}\n          <ImagePreview\n            images={itemImages}\n            onRemoveImage={handleRemoveImage}\n            onSetPrimary={handleSetPrimaryImage}\n            maxImages={3}\n            size=\"md\"\n          />\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-3 pt-4\">\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              onCancel()\n            }}\n            className=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              handleSubmit()\n            }}\n            className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            {isEditing ? 'Update Item' : 'Add Item'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { Edit, X } from 'lucide-react'\nimport { TransactionItemFormData } from '@/types'\nimport TransactionItemForm from './TransactionItemForm'\n\ninterface TransactionItemsListProps {\n  items: TransactionItemFormData[]\n  onItemsChange: (items: TransactionItemFormData[]) => void\n  projectId?: string\n  projectName?: string\n  onImageFilesChange?: (itemId: string, imageFiles: File[]) => void\n}\n\nexport default function TransactionItemsList({ items, onItemsChange, projectId, projectName, onImageFilesChange }: TransactionItemsListProps) {\n  const [isAddingItem, setIsAddingItem] = useState(false)\n  const [editingItemId, setEditingItemId] = useState<string | null>(null)\n\n  const handleSaveItem = (item: TransactionItemFormData) => {\n    if (editingItemId) {\n      // Update existing item\n      const updatedItems = items.map(existingItem =>\n        existingItem.id === editingItemId ? item : existingItem\n      )\n      onItemsChange(updatedItems)\n    } else {\n      // Add new item\n      onItemsChange([...items, item])\n    }\n\n    // Handle image files if they exist\n    if (item.imageFiles && item.imageFiles.length > 0 && onImageFilesChange) {\n      onImageFilesChange(item.id, item.imageFiles)\n    }\n\n    setIsAddingItem(false)\n    setEditingItemId(null)\n  }\n\n  const handleCancelItem = () => {\n    setIsAddingItem(false)\n    setEditingItemId(null)\n  }\n\n  const handleEditItem = (itemId: string) => {\n    setEditingItemId(itemId)\n    setIsAddingItem(false)\n  }\n\n  const handleDeleteItem = (itemId: string) => {\n    const updatedItems = items.filter(item => item.id !== itemId)\n    onItemsChange(updatedItems)\n  }\n\n  const getItemToEdit = () => {\n    if (!editingItemId) return null\n    return items.find(item => item.id === editingItemId) || null\n  }\n\n  const formatCurrency = (amount: string) => {\n    const num = parseFloat(amount)\n    return isNaN(num) ? '$0.00' : `$${num.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\n  }\n\n  if (isAddingItem || editingItemId) {\n    const itemToEdit = getItemToEdit()\n    return (\n      <TransactionItemForm\n        item={itemToEdit || undefined}\n        onSave={handleSaveItem}\n        onCancel={handleCancelItem}\n        isEditing={!!itemToEdit}\n        projectId={projectId}\n        projectName={projectName}\n        onImageFilesChange={onImageFilesChange}\n      />\n    )\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Transaction Items</h3>\n      </div>\n\n      {items.length === 0 ? (\n        <div className=\"text-center py-12 border-2 border-dashed border-gray-300 rounded-lg\">\n          <p className=\"text-gray-500\">No items added to this transaction yet.</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {items.map((item, index) => (\n            <div key={item.id} className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-4 mb-2\">\n                    <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\n                      Item {index + 1}\n                    </span>\n                    <span className=\"text-sm text-gray-500\">\n                      {formatCurrency(item.price)}\n                    </span>\n                  </div>\n\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-1\">\n                    {item.description || 'No description'}\n                  </h4>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n                    {item.sku && (\n                      <div>\n                        <span className=\"font-medium\">SKU:</span> {item.sku}\n                      </div>\n                    )}\n                    {item.market_value && (\n                      <div>\n                        <span className=\"font-medium\">Market Value:</span> ${item.market_value}\n                      </div>\n                    )}\n                  </div>\n\n                  {item.notes && (\n                    <div className=\"mt-2 text-sm text-gray-600\">\n                      <span className=\"font-medium\">Notes:</span> {item.notes}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault()\n                      e.stopPropagation()\n                      handleEditItem(item.id)\n                    }}\n                    className=\"text-primary-600 hover:text-primary-900 p-1\"\n                    title=\"Edit item\"\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault()\n                      e.stopPropagation()\n                      handleDeleteItem(item.id)\n                    }}\n                    className=\"text-red-600 hover:text-red-900 p-1\"\n                    title=\"Delete item\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          <div className=\"flex justify-between items-center pt-4 border-t border-gray-200\">\n            <div className=\"text-sm text-gray-600\">\n              Total Items: {items.length}\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900\">\n              Total: {formatCurrency(\n                items.reduce((sum, item) => sum + (parseFloat(item.price) || 0), 0).toString()\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { ArrowLeft, Save, X } from 'lucide-react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { TransactionFormData, TransactionValidationErrors, TransactionItemFormData, ItemImage } from '@/types'\nimport { TRANSACTION_SOURCES } from '@/constants/transactionSources'\nimport { transactionService, projectService, itemService } from '@/services/inventoryService'\nimport { ImageUploadService, UploadProgress } from '@/services/imageService'\nimport ImageUpload from '@/components/ui/ImageUpload'\nimport TransactionItemsList from '@/components/TransactionItemsList'\n\nexport default function AddTransaction() {\n  const { id: projectId } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n\n  const [projectName, setProjectName] = useState<string>('')\n\n  // Fetch project name\n  useEffect(() => {\n    const fetchProject = async () => {\n      if (projectId) {\n        try {\n          const project = await projectService.getProject(projectId)\n          if (project) {\n            setProjectName(project.name)\n          }\n        } catch (error) {\n          console.error('Failed to fetch project:', error)\n        }\n      }\n    }\n\n    fetchProject()\n  }, [projectId])\n\n  const [formData, setFormData] = useState<TransactionFormData>({\n    transaction_date: (() => {\n      const today = new Date()\n      return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`\n    })(), // YYYY-MM-DD format\n    source: '',\n    transaction_type: 'Purchase',\n    payment_method: '',\n    amount: '',\n    notes: '',\n    transaction_images: [],\n    receipt_emailed: false,\n    items: []\n  })\n\n  const [items, setItems] = useState<TransactionItemFormData[]>([])\n  const [imageFilesMap, setImageFilesMap] = useState<Map<string, File[]>>(new Map())\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n\n  // Initialize custom source state based on initial form data\n  useEffect(() => {\n    if (formData.source && !TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(true)\n    } else if (formData.source && TRANSACTION_SOURCES.includes(formData.source as any)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  const [errors, setErrors] = useState<TransactionValidationErrors>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isUploadingImages, setIsUploadingImages] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: TransactionValidationErrors = {}\n\n    if (!formData.source.trim()) {\n      newErrors.source = 'Source is required'\n    }\n\n    if (!formData.transaction_type.trim()) {\n      newErrors.transaction_type = 'Transaction type is required'\n    }\n\n    if (!formData.payment_method.trim()) {\n      newErrors.payment_method = 'Payment method is required'\n    }\n\n    if (!formData.amount.trim()) {\n      newErrors.amount = 'Amount is required'\n    } else if (isNaN(Number(formData.amount)) || Number(formData.amount) <= 0) {\n      newErrors.amount = 'Amount must be a positive number'\n    }\n\n    // Items are now optional - no validation required\n\n    if (!formData.transaction_date) {\n      newErrors.transaction_date = 'Transaction date is required'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm() || !projectId) return\n\n    setIsSubmitting(true)\n\n    try {\n      // Create transaction data, excluding transaction_images from formData since it contains File objects\n      const { transaction_images, ...formDataWithoutImages } = formData\n\n      const transactionData = {\n        ...formDataWithoutImages,\n        project_id: projectId,\n        project_name: projectName,\n        created_by: 'system'\n      }\n\n      console.log('Attempting to create transaction with data:', transactionData)\n      console.log('Transaction date value:', transactionData.transaction_date)\n      console.log('Transaction date type:', typeof transactionData.transaction_date)\n      console.log('Transaction items:', items)\n\n      // Create transaction with items first to get the real transaction ID\n      const transactionId = await transactionService.createTransaction(projectId, transactionData, items)\n\n      // Now upload transaction images using the real transaction ID\n      if (formData.transaction_images && formData.transaction_images.length > 0) {\n        setIsUploadingImages(true)\n\n        try {\n          const uploadResults = await ImageUploadService.uploadMultipleTransactionImages(\n            formData.transaction_images,\n            projectName,\n            transactionId,\n            handleImageUploadProgress\n          )\n\n          // Convert to TransactionImage format\n          const transactionImages = ImageUploadService.convertFilesToTransactionImages(uploadResults)\n          console.log('Transaction images uploaded successfully:', transactionImages.length, 'images')\n          console.log('Transaction images to save:', transactionImages)\n\n          // Update the transaction with the uploaded images\n          if (transactionImages && transactionImages.length > 0) {\n            console.log('Updating transaction with transaction images...')\n            try {\n              await transactionService.updateTransaction(projectId, transactionId, {\n                transaction_images: transactionImages\n              })\n              console.log('Transaction updated successfully with transaction images')\n            } catch (updateError) {\n              console.error('Failed to update transaction with transaction images:', updateError)\n              // Don't fail the entire transaction if image update fails\n            }\n          }\n\n          // Small delay to ensure the update is processed before continuing\n          await new Promise(resolve => setTimeout(resolve, 500))\n        } catch (error: any) {\n          console.error('Error uploading images:', error)\n\n          // Provide specific error messages based on error type\n          let errorMessage = 'Failed to upload transaction images. Please try again.'\n          if (error.message?.includes('Storage service is not available')) {\n            errorMessage = 'Storage service is unavailable. Please check your internet connection.'\n          } else if (error.message?.includes('Network error') || error.message?.includes('offline')) {\n            errorMessage = 'Network connection issue. Please check your internet and try again.'\n          } else if (error.message?.includes('quota exceeded')) {\n            errorMessage = 'Storage quota exceeded. Please contact support.'\n          } else if (error.message?.includes('Unauthorized')) {\n            errorMessage = 'Permission denied. Please check your account permissions.'\n          } else if (error.message?.includes('CORS') || error.message?.includes('Access-Control') || error.message?.includes('ERR_FAILED') || error.message?.includes('preflight')) {\n            errorMessage = 'Upload blocked by browser security policy. Please check Firebase Storage configuration or try refreshing the page.'\n          }\n\n          setErrors({ transaction_images: errorMessage })\n          setIsSubmitting(false)\n          setIsUploadingImages(false)\n          return\n        }\n\n        setIsUploadingImages(false)\n      }\n\n      // Upload item images with the correct item IDs\n      if (imageFilesMap.size > 0) {\n        try {\n          console.log('Starting image upload process...')\n          // Get the created item IDs\n          const createdItemIds = await itemService.getTransactionItems(projectId, transactionId)\n          console.log('Created item IDs:', createdItemIds)\n\n          // Upload images for each item\n          for (let i = 0; i < items.length && i < createdItemIds.length; i++) {\n            const item = items[i]\n            const itemId = createdItemIds[i]\n            const imageFiles = imageFilesMap.get(item.id)\n\n            if (imageFiles && imageFiles.length > 0) {\n              console.log(`Uploading ${imageFiles.length} images for item ${itemId}`)\n\n              // Upload each image file with the final item ID\n              const uploadPromises = imageFiles.map(async (file, fileIndex) => {\n                try {\n                  console.log(`Uploading file ${fileIndex + 1}/${imageFiles.length}: ${file.name}`)\n                  const uploadResult = await ImageUploadService.uploadItemImage(\n                    file,\n                    projectName,\n                    itemId\n                  )\n                  console.log(`Upload successful for ${file.name}:`, uploadResult)\n                  console.log(`Upload result URL: ${uploadResult.url}`)\n\n                  const uploadedImage: ItemImage = {\n                    url: uploadResult.url,\n                    alt: file.name,\n                    isPrimary: item.images?.find(img => img.fileName === file.name)?.isPrimary || false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  }\n                  console.log('Created ItemImage object:', uploadedImage)\n                  return uploadedImage\n                } catch (uploadError) {\n                  console.error(`Failed to upload ${file.name}:`, uploadError)\n                  // Return a placeholder image object so the process continues\n                  return {\n                    url: '',\n                    alt: file.name,\n                    isPrimary: false,\n                    uploadedAt: new Date(),\n                    fileName: file.name,\n                    size: file.size,\n                    mimeType: file.type\n                  } as ItemImage\n                }\n              })\n\n              const uploadedImages = await Promise.all(uploadPromises)\n              console.log('All uploads completed, updating item with images:', uploadedImages)\n\n              // Filter out any failed uploads (empty URLs)\n              const validImages = uploadedImages.filter(img => img.url && img.url.trim() !== '')\n              console.log(`Valid images to save: ${validImages.length}/${uploadedImages.length}`)\n\n              if (validImages.length > 0) {\n                // Update the item with the uploaded images\n                await itemService.updateItemImages(projectId, itemId, validImages)\n                console.log(`Successfully updated item ${itemId} with ${validImages.length} images`)\n              }\n            }\n          }\n        } catch (imageError) {\n          console.error('Error in image upload process:', imageError)\n          // Don't fail the transaction if image upload fails - just log the error\n          // The transaction was successfully created, items just won't have images\n        }\n      }\n\n      navigate(`/project/${projectId}?tab=transactions`)\n    } catch (error) {\n      console.error('Error creating transaction:', error)\n      setErrors({ general: error instanceof Error ? error.message : 'Failed to create transaction. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof TransactionFormData, value: string | boolean | File[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }))\n    }\n  }\n\n  const handleImagesChange = (files: File[]) => {\n    setFormData(prev => ({ ...prev, transaction_images: files }))\n    // Clear any existing image errors\n    if (errors.transaction_images) {\n      setErrors(prev => ({ ...prev, transaction_images: undefined }))\n    }\n  }\n\n  const handleImageFilesChange = (itemId: string, imageFiles: File[]) => {\n    // Update the imageFilesMap\n    setImageFilesMap(prev => {\n      const newMap = new Map(prev)\n      newMap.set(itemId, imageFiles)\n      return newMap\n    })\n\n    // Also update the item in the items array with the imageFiles\n    setItems(prevItems => prevItems.map(item =>\n      item.id === itemId\n        ? { ...item, imageFiles }\n        : item\n    ))\n  }\n\n  const handleImageUploadProgress = (fileIndex: number, progress: UploadProgress) => {\n    // Progress tracking removed to fix TypeScript errors\n    console.log(`Upload progress for file ${fileIndex}: ${progress.percentage}%`)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=transactions`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Transaction</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* General Error Display */}\n          {errors.general && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <div className=\"flex\">\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    <p>{errors.general}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Amount */}\n          <div>\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n              Amount *\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"amount\"\n                value={formData.amount}\n                onChange={(e) => handleInputChange('amount', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.amount ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.amount && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.amount}</p>\n            )}\n          </div>\n\n          {/* Transaction Source */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Source *\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n              {TRANSACTION_SOURCES.map((source) => (\n                <div key={source} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                    name=\"source\"\n                    value={source}\n                    checked={formData.source === source}\n                    onChange={(e) => {\n                      handleInputChange('source', e.target.value)\n                      setIsCustomSource(false)\n                    }}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                  />\n                  <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                    {source}\n                  </label>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id=\"source_custom\"\n                name=\"source\"\n                value=\"custom\"\n                checked={isCustomSource}\n                onChange={() => {\n                  setIsCustomSource(true)\n                  handleInputChange('source', '')\n                }}\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n              />\n              <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                Other\n              </label>\n            </div>\n            {isCustomSource && (\n              <input\n                type=\"text\"\n                id=\"source_custom_input\"\n                value={formData.source}\n                onChange={(e) => handleInputChange('source', e.target.value)}\n                placeholder=\"Enter custom source...\"\n                className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.source ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            )}\n            {errors.source && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n            )}\n          </div>\n\n          {/* Transaction Method */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Method *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_client_card\"\n                  name=\"payment_method\"\n                  value=\"Client Card\"\n                  checked={formData.payment_method === 'Client Card'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_client_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  Client Card\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_1584_card\"\n                  name=\"payment_method\"\n                  value=\"1584 Card\"\n                  checked={formData.payment_method === '1584 Card'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_1584_card\" className=\"ml-2 block text-sm text-gray-900\">\n                  1584 Card\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_split\"\n                  name=\"payment_method\"\n                  value=\"Split\"\n                  checked={formData.payment_method === 'Split'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_split\" className=\"ml-2 block text-sm text-gray-900\">\n                  Split\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"method_store_credit\"\n                  name=\"payment_method\"\n                  value=\"Store Credit\"\n                  checked={formData.payment_method === 'Store Credit'}\n                  onChange={(e) => handleInputChange('payment_method', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"method_store_credit\" className=\"ml-2 block text-sm text-gray-900\">\n                  Store Credit\n                </label>\n              </div>\n            </div>\n            {errors.payment_method && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.payment_method}</p>\n            )}\n          </div>\n\n          {/* Transaction Date */}\n          <div>\n            <label htmlFor=\"transaction_date\" className=\"block text-sm font-medium text-gray-700\">\n              Transaction Date *\n            </label>\n            <input\n              type=\"date\"\n              id=\"transaction_date\"\n              value={formData.transaction_date}\n              onChange={(e) => {\n                // Use the date value directly (YYYY-MM-DD format)\n                handleInputChange('transaction_date', e.target.value)\n              }}\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.transaction_date ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.transaction_date && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_date}</p>\n            )}\n          </div>\n\n          {/* Transaction Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Transaction Type *\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_purchase\"\n                  name=\"transaction_type\"\n                  value=\"Purchase\"\n                  checked={formData.transaction_type === 'Purchase'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_purchase\" className=\"ml-2 block text-sm text-gray-900\">\n                  Purchase\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"type_return\"\n                  name=\"transaction_type\"\n                  value=\"Return\"\n                  checked={formData.transaction_type === 'Return'}\n                  onChange={(e) => handleInputChange('transaction_type', e.target.value)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"type_return\" className=\"ml-2 block text-sm text-gray-900\">\n                  Return\n                </label>\n              </div>\n            </div>\n            {errors.transaction_type && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_type}</p>\n            )}\n          </div>\n\n\n          {/* Receipt Email Copy */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Receipt Email Copy\n            </label>\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_yes\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === true}\n                  onChange={() => handleInputChange('receipt_emailed', true)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_yes\" className=\"ml-2 block text-sm text-gray-900\">\n                  Yes\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"receipt_no\"\n                  name=\"receipt_emailed\"\n                  checked={formData.receipt_emailed === false}\n                  onChange={() => handleInputChange('receipt_emailed', false)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"receipt_no\" className=\"ml-2 block text-sm text-gray-900\">\n                  No\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n              Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              rows={3}\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Additional notes about this transaction...\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.notes ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.notes && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.notes}</p>\n            )}\n          </div>\n\n          {/* Transaction Items */}\n          <div>\n            <TransactionItemsList\n              items={items}\n              onItemsChange={(newItems) => {\n                setItems(newItems)\n                // Clear items error if items are added\n                if (errors.items && newItems.length > 0) {\n                  setErrors(prev => ({ ...prev, items: undefined }))\n                }\n              }}\n              projectId={projectId}\n              projectName={projectName}\n              onImageFilesChange={handleImageFilesChange}\n            />\n            {errors.items && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.items}</p>\n            )}\n          </div>\n\n          {/* Transaction Images */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Transaction Images\n            </h3>\n            <ImageUpload\n              onImagesChange={handleImagesChange}\n              maxImages={5}\n              maxFileSize={10}\n              disabled={isSubmitting || isUploadingImages}\n              className=\"mb-2\"\n            />\n            {errors.transaction_images && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.transaction_images}</p>\n            )}\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Link\n              to={`/project/${projectId}?tab=transactions`}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              <X className=\"h-4 w-4 mr-2\" />\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting || isUploadingImages}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : isUploadingImages ? 'Uploading Images...' : 'Create Transaction'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":["TransactionItemForm","item","onSave","onCancel","isEditing","onImageFilesChange","formData","setFormData","useState","itemImages","setItemImages","imageFiles","setImageFiles","isUploadingImage","setIsUploadingImage","errors","setErrors","showError","useToast","useEffect","_a","_b","handleSelectFromGallery","files","ImageUploadService","prev","previewImages","file","index","error","handleRemoveImage","imageUrl","imageIndex","img","_","handleSetPrimaryImage","validateForm","newErrors","handleSubmit","itemWithImages","handleInputChange","field","value","jsxs","jsx","X","e","Camera","ImagePreview","TransactionItemsList","items","onItemsChange","projectId","projectName","isAddingItem","setIsAddingItem","editingItemId","setEditingItemId","handleSaveItem","updatedItems","existingItem","handleCancelItem","handleEditItem","itemId","handleDeleteItem","getItemToEdit","formatCurrency","amount","num","itemToEdit","Edit","sum","AddTransaction","useParams","navigate","useNavigate","setProjectName","project","projectService","today","setItems","imageFilesMap","setImageFilesMap","isCustomSource","setIsCustomSource","TRANSACTION_SOURCES","isSubmitting","setIsSubmitting","isUploadingImages","setIsUploadingImages","transaction_images","formDataWithoutImages","transactionData","transactionId","transactionService","uploadResults","handleImageUploadProgress","transactionImages","updateError","resolve","errorMessage","_c","_d","_e","_f","_g","_h","_i","createdItemIds","itemService","i","uploadPromises","fileIndex","uploadResult","uploadedImage","uploadError","uploadedImages","validImages","imageError","handleImagesChange","handleImageFilesChange","newMap","prevItems","progress","Link","ArrowLeft","source","newItems","ImageUpload","Save"],"mappings":"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"}