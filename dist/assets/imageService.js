import{D as I,H as P,I as M,J as A,K as U}from"./firebase.js";import{s as h,e as z}from"./index.js";class F extends Error{constructor(t,e,i){super(t),this.code=e,this.originalError=i,this.name="ImageUploadError"}}function S(o){if(o instanceof F)return o.message;if(o!=null&&o.code)switch(o.code){case"storage/unauthorized":return"You need to sign in to upload images. Please refresh the page and try again.";case"storage/quota-exceeded":return"Storage limit reached. Please contact support or delete some old images.";case"storage/invalid-format":return"Invalid image format. Please upload JPEG, PNG, GIF, or WebP files only.";case"storage/retry-limit-exceeded":return"Upload failed after multiple attempts. Please check your connection and try again.";default:return`Upload failed: ${o.message||"Unknown error"}. Please try again.`}if(o!=null&&o.message){if(o.message.includes("timeout"))return"Upload timed out. Please try again with a smaller image or check your connection.";if(o.message.includes("network")||o.message.includes("offline"))return"Network error. Please check your internet connection and try again.";if(o.message.includes("CORS"))return"Access error. Please refresh the page and try again.";if(o.message.includes("permission")||o.message.includes("auth"))return"Permission error. Please sign in and try again."}return"Failed to upload image. Please try again."}function _(o){var t,e;return(o==null?void 0:o.code)==="storage/unauthorized"?"Try refreshing the page to sign in again.":(o==null?void 0:o.code)==="storage/quota-exceeded"?"Contact support or delete some old images to free up space.":(o==null?void 0:o.code)==="storage/invalid-format"?"Use JPEG, PNG, GIF, or WebP format images.":(t=o==null?void 0:o.message)!=null&&t.includes("network")||(e=o==null?void 0:o.message)!=null&&e.includes("timeout")?"Check your internet connection and try again.":"Try again in a few moments."}class L{static async checkStorageAvailability(){try{return h?!0:(console.error("Firebase Storage not initialized"),!1)}catch(t){return console.error("Storage availability check failed:",t),!1}}static async ensureAuthentication(){try{await z()}catch(t){throw console.error("Failed to ensure authentication:",t),new Error("Authentication required for storage operations. Please refresh the page and try again.")}}static async uploadItemImage(t,e,i,n,s=0){return this.uploadImageInternal(t,e,i,"item_images",n,s)}static async uploadTransactionImage(t,e,i,n,s=0){return this.uploadImageInternal(t,e,i,"transaction_images",n,s)}static async uploadReceiptImage(t,e,i,n,s=0){return this.uploadImageInternal(t,e,i,"receipt_images",n,s)}static async uploadOtherImage(t,e,i,n,s=0){return this.uploadImageInternal(t,e,i,"other_images",n,s)}static async uploadImageInternal(t,e,i,n,s,a=0){var b,v;if(console.log(`Upload attempt ${a+1}/4`),await this.ensureAuthentication(),!await this.checkStorageAvailability())throw new Error("Storage service is not available. Please check your connection and try again.");let l=t;if(this.shouldCompressForMobile(t)&&(console.log("Compressing file for mobile upload..."),l=await this.compressForMobile(t)),!this.validateImageFile(l))throw new Error("Invalid image file. Please upload a valid image (JPEG, PNG, GIF, WebP) under 10MB.");const g=Date.now(),p=l.name.replace(/[^a-zA-Z0-9.-]/g,"_"),f=e.replace(/[^a-zA-Z0-9-]/g,"_"),T=new Date().toISOString().replace(/[:.]/g,"-").slice(0,-1),E=`${f}/${n}/${T}/${g}_${p}`;console.log("Uploading to path:",E,"Size:",l.size,"Type:",l.type);const R=I(h,E);try{const m=P(R,l);s&&m.on("state_changed",d=>{const w={loaded:d.bytesTransferred,total:d.totalBytes,percentage:d.bytesTransferred/d.totalBytes*100};s(w)},d=>{if(console.error("Upload error:",d),d.code==="storage/retry-limit-exceeded"&&a<3)console.log(`Retrying upload (${a+1}/3)...`),setTimeout(()=>{this.uploadImageInternal(l,e,i,n,s,a+1)},Math.pow(2,a)*1e3);else throw new Error("Failed to upload image. Please try again.")});const y=await Promise.race([m,new Promise((d,w)=>setTimeout(()=>w(new Error("Upload timeout after 60 seconds")),6e4))]),u=await M(y.ref);return console.log("Upload successful:",u),{url:u,fileName:l.name,size:l.size,mimeType:l.type}}catch(m){if(console.error("Error uploading image:",m),m.code==="storage/retry-limit-exceeded"&&a<3)return console.log(`Retrying upload due to retry limit exceeded (${a+1}/3)...`),await new Promise(u=>setTimeout(u,Math.pow(2,a)*2e3)),this.uploadImageInternal(l,e,i,n,s,a+1);if((b=m.message)!=null&&b.includes("timeout")||(v=m.message)!=null&&v.includes("Upload timeout"))if(a<3){console.log("Upload timed out, retrying with smaller file...");const u=await this.compressForMobile(l);return this.uploadImageInternal(u,e,i,n,s,a+1)}else throw new Error("Upload timed out. Please try again with a smaller image or check your connection.");const y=S(m);throw new F(y,m.code,m)}}static async uploadMultipleItemImages(t,e,i,n){const s=[];for(let a=0;a<t.length;a++){const c=t[a];try{const r=await this.uploadItemImage(c,e,i,n?l=>n(a,l):void 0);s.push(r)}catch(r){throw console.error(`Error uploading image ${a+1}:`,r),r}}return s}static async uploadMultipleTransactionImages(t,e,i,n){const s=[];for(let a=0;a<t.length;a++){const c=t[a];try{const r=await this.uploadTransactionImage(c,e,i,n?l=>n(a,l):void 0);s.push(r)}catch(r){throw console.error(`Error uploading image ${a+1}:`,r),r}}return s}static async uploadMultipleReceiptImages(t,e,i,n){const s=[];for(let a=0;a<t.length;a++){const c=t[a];try{const r=await this.uploadReceiptImage(c,e,i,n?l=>n(a,l):void 0);s.push(r)}catch(r){throw console.error(`Error uploading receipt image ${a+1}:`,r),r}}return s}static async uploadMultipleOtherImages(t,e,i,n){const s=[];for(let a=0;a<t.length;a++){const c=t[a];try{const r=await this.uploadOtherImage(c,e,i,n?l=>n(a,l):void 0);s.push(r)}catch(r){throw console.error(`Error uploading other image ${a+1}:`,r),r}}return s}static async deleteImage(t){try{await this.ensureAuthentication();const e=I(h,t);await A(e)}catch(e){throw console.error("Error deleting image:",e),new Error("Failed to delete image")}}static async deleteMultipleImages(t){const e=t.map(i=>this.deleteImage(i));await Promise.all(e)}static convertFilesToTransactionImages(t){return t.map(e=>({url:e.url,fileName:e.fileName,uploadedAt:new Date,size:e.size,mimeType:e.mimeType}))}static convertFilesToReceiptImages(t){return t.map(e=>({url:e.url,fileName:e.fileName,uploadedAt:new Date,size:e.size,mimeType:e.mimeType}))}static convertFilesToOtherImages(t){return t.map(e=>({url:e.url,fileName:e.fileName,uploadedAt:new Date,size:e.size,mimeType:e.mimeType}))}static validateImageFile(t){if(!["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(t.type))return!1;const i=10*1024*1024;return!(t.size>i)}static async getImageMetadata(t){try{await this.ensureAuthentication();const e=I(h,t);return await U(e)}catch(e){return console.error("Error getting image metadata:",e),null}}static compressImage(t,e=800,i=.8){return new Promise((n,s)=>{const a=document.createElement("canvas"),c=a.getContext("2d"),r=new Image;r.onload=()=>{let{width:l,height:g}=r;l>e&&(g=g*e/l,l=e),a.width=l,a.height=g,c==null||c.drawImage(r,0,0,l,g),a.toBlob(p=>{if(p){const f=new File([p],t.name,{type:"image/jpeg",lastModified:Date.now()});n(f)}else s(new Error("Failed to compress image"))},"image/jpeg",i)},r.onerror=()=>s(new Error("Failed to load image")),r.src=URL.createObjectURL(t)})}static takePhoto(){return new Promise(t=>{const e=document.createElement("input");e.type="file",e.accept="image/*",e.capture="environment",e.onchange=i=>{var a;const s=((a=i.target.files)==null?void 0:a[0])||null;t(s)},e.click()})}static selectFromGallery(){return new Promise((t,e)=>{const i=document.createElement("input");i.type="file",i.accept="image/*",i.multiple=!0;const n=setTimeout(()=>{document.body.contains(i)&&document.body.removeChild(i),e(new Error("File selection timeout - user may have canceled"))},1e4),s=c=>{clearTimeout(n),document.body.contains(i)&&document.body.removeChild(i);const r=c.target,l=r.files?Array.from(r.files):[];t(l)},a=()=>{clearTimeout(n),document.body.contains(i)&&document.body.removeChild(i),e(new Error("File selection canceled"))};i.onchange=s,i.addEventListener("cancel",a),document.body.appendChild(i),i.click()})}static createPreviewUrl(t){return URL.createObjectURL(t)}static revokePreviewUrl(t){URL.revokeObjectURL(t)}static shouldCompressForMobile(t){const e=navigator.userAgent.toLowerCase(),i=/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e),n=/ipad|android(?!.*mobile)/i.test(e),s=t.size>2*1024*1024,a=t.size>1024*1024;return i&&a||n&&s}static async compressForMobile(t){try{console.log(`Compressing file: ${t.name}, Size: ${t.size} bytes`);const e=await this.compressImage(t,1200,.7);return console.log(`Compressed to: ${e.size} bytes (${Math.round(e.size/t.size*100)}% of original)`),e}catch(e){return console.warn("Failed to compress file, using original:",e),t}}}export{L as I,_ as a,S as g};
//# sourceMappingURL=imageService.js.map
