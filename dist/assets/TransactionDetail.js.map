{"version":3,"file":"TransactionDetail.js","sources":["../../src/pages/TransactionDetail.tsx"],"sourcesContent":["import { ArrowLeft, Edit, Trash2, Calendar, CreditCard, FileText, Image as ImageIcon, Package } from 'lucide-react'\nimport { useState } from 'react'\nimport ImageGallery from '@/components/ui/ImageGallery'\nimport { TransactionImagePreview } from '@/components/ui/ImagePreview'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { Transaction, Project, Item, TransactionItemFormData } from '@/types'\nimport { transactionService, projectService, itemService } from '@/services/inventoryService'\nimport { ImageUploadService } from '@/services/imageService'\nimport { formatDate, formatCurrency } from '@/utils/dateUtils'\nimport { useToast } from '@/components/ui/ToastContext'\nimport TransactionItemForm from '@/components/TransactionItemForm'\n\n// Remove any unwanted icons from transaction type badges\nconst removeUnwantedIcons = () => {\n  const badges = document.querySelectorAll('.no-icon')\n  badges.forEach(badge => {\n    // Remove any child elements that aren't text nodes\n    const children = Array.from(badge.childNodes)\n    children.forEach(child => {\n      if (child.nodeType !== Node.TEXT_NODE) {\n        if (child.parentNode) {\n          child.parentNode.removeChild(child)\n        }\n      }\n    })\n  })\n}\n\n\nexport default function TransactionDetail() {\n  const { id: projectId, transactionId } = useParams<{ id: string; transactionId: string }>()\n  const navigate = useNavigate()\n  const [transaction, setTransaction] = useState<Transaction | null>(null)\n  const [project, setProject] = useState<Project | null>(null)\n  const [transactionItems, setTransactionItems] = useState<Item[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [isLoadingItems, setIsLoadingItems] = useState(true)\n  const [showGallery, setShowGallery] = useState(false)\n  const [galleryInitialIndex, setGalleryInitialIndex] = useState(0)\n  const [isUploadingReceiptImages, setIsUploadingReceiptImages] = useState(false)\n  const [isUploadingOtherImages, setIsUploadingOtherImages] = useState(false)\n  const [isAddingItem, setIsAddingItem] = useState(false)\n  const [imageFilesMap, setImageFilesMap] = useState<Map<string, File[]>>(new Map())\n  const { showError, showSuccess } = useToast()\n\n\n  useEffect(() => {\n    const loadTransaction = async () => {\n      if (!projectId || !transactionId) return\n\n      try {\n        // Fetch transaction, project data, and transaction items\n        const [transactionData, projectData, itemIds] = await Promise.all([\n          transactionService.getTransaction(projectId, transactionId),\n          projectService.getProject(projectId),\n          itemService.getTransactionItems(projectId, transactionId)\n        ])\n\n        const convertedTransaction: Transaction = {\n          ...transactionData,\n          transaction_images: Array.isArray(transactionData?.transaction_images) ? transactionData.transaction_images : []\n        } as Transaction\n\n        console.log('TransactionDetail - loaded transactionData:', transactionData)\n        console.log('TransactionDetail - convertedTransaction:', convertedTransaction)\n        console.log('TransactionDetail - item IDs:', itemIds)\n        setTransaction(convertedTransaction)\n        setProject(projectData)\n\n        // Fetch the actual item details\n        if (itemIds.length > 0) {\n          const itemsPromises = itemIds.map(itemId => itemService.getItem(projectId, itemId))\n          const items = await Promise.all(itemsPromises)\n          const validItems = items.filter(item => item !== null) as Item[]\n          console.log('TransactionDetail - fetched items:', validItems.length)\n          setTransactionItems(validItems)\n        } else {\n          setTransactionItems([])\n        }\n\n      } catch (error) {\n        console.error('Error loading transaction:', error)\n        setTransactionItems([])\n      } finally {\n        setIsLoading(false)\n        setIsLoadingItems(false)\n      }\n    }\n\n    loadTransaction()\n  }, [projectId, transactionId])\n\n  // Set up real-time subscription for transaction updates\n  useEffect(() => {\n    if (!projectId || !transactionId) return\n\n    // Temporarily disable real-time subscription to debug\n    // const unsubscribe = transactionService.subscribeToTransaction(\n    //   projectId,\n    //   transactionId,\n    //   (updatedTransaction) => {\n    //     if (updatedTransaction) {\n    //       console.log('TransactionDetail - real-time updatedTransaction:', updatedTransaction)\n    //       console.log('TransactionDetail - real-time updatedTransaction.transaction_images:', updatedTransaction.transaction_images)\n    //       console.log('TransactionDetail - real-time updatedTransaction.transaction_images length:', updatedTransaction.transaction_images?.length)\n\n    //       const convertedTransaction: Transaction = {\n    //         ...updatedTransaction,\n    //         transaction_images: Array.isArray(updatedTransaction.transaction_images) ? updatedTransaction.transaction_images : []\n    //       } as Transaction\n\n    //       console.log('TransactionDetail - real-time convertedTransaction:', convertedTransaction)\n    //       setTransaction(convertedTransaction)\n    //     } else {\n    //       setTransaction(null)\n    //     }\n    //   }\n    // )\n\n    // return () => {\n    //   unsubscribe()\n    // }\n  }, [projectId, transactionId])\n\n\n  // Clean up any unwanted icons from transaction type badges\n  useEffect(() => {\n    if (transaction) {\n      removeUnwantedIcons()\n      // Also run after a short delay to catch any dynamically added icons\n      const timer = setTimeout(removeUnwantedIcons, 100)\n      const timer2 = setTimeout(removeUnwantedIcons, 500)\n      return () => {\n        clearTimeout(timer)\n        clearTimeout(timer2)\n      }\n    }\n  }, [transaction])\n\n  const handleDelete = async () => {\n    if (!projectId || !transactionId || !transaction) return\n\n    if (window.confirm('Are you sure you want to delete this transaction? This action cannot be undone.')) {\n      try {\n        await transactionService.deleteTransaction(projectId, transactionId)\n        navigate(`/project/${projectId}?tab=transactions`)\n      } catch (error) {\n        console.error('Error deleting transaction:', error)\n        showError('Failed to delete transaction. Please try again.')\n      }\n    }\n  }\n\n  const handleImageClick = (index: number) => {\n    setGalleryInitialIndex(index)\n    setShowGallery(true)\n  }\n\n  const handleGalleryClose = () => {\n    setShowGallery(false)\n  }\n\n  const handleReceiptImagesUpload = async (files: File[]) => {\n    if (!projectId || !transactionId || !project || files.length === 0) return\n\n    setIsUploadingReceiptImages(true)\n\n    try {\n      // Upload receipt images\n      const uploadResults = await ImageUploadService.uploadMultipleReceiptImages(\n        files,\n        project.name,\n        transactionId\n      )\n\n      // Convert to TransactionImage format\n      const newReceiptImages = ImageUploadService.convertFilesToReceiptImages(uploadResults)\n\n      // Update transaction with new receipt images\n      const currentReceiptImages = transaction?.receipt_images || []\n      const updatedReceiptImages = [...currentReceiptImages, ...newReceiptImages]\n\n      await transactionService.updateTransaction(projectId, transactionId, {\n        receipt_images: updatedReceiptImages,\n        transaction_images: updatedReceiptImages // Also update legacy field for compatibility\n      })\n\n      // Refresh transaction data\n      const updatedTransaction = await transactionService.getTransaction(projectId, transactionId)\n      setTransaction(updatedTransaction)\n\n      showSuccess('Receipt images uploaded successfully')\n    } catch (error) {\n      console.error('Error uploading receipt images:', error)\n      showError('Failed to upload receipt images. Please try again.')\n    } finally {\n      setIsUploadingReceiptImages(false)\n    }\n  }\n\n  const handleOtherImagesUpload = async (files: File[]) => {\n    if (!projectId || !transactionId || !project || files.length === 0) return\n\n    setIsUploadingOtherImages(true)\n\n    try {\n      // Upload other images\n      const uploadResults = await ImageUploadService.uploadMultipleOtherImages(\n        files,\n        project.name,\n        transactionId\n      )\n\n      // Convert to TransactionImage format\n      const newOtherImages = ImageUploadService.convertFilesToOtherImages(uploadResults)\n\n      // Update transaction with new other images\n      const currentOtherImages = transaction?.other_images || []\n      const updatedOtherImages = [...currentOtherImages, ...newOtherImages]\n\n      await transactionService.updateTransaction(projectId, transactionId, {\n        other_images: updatedOtherImages\n      })\n\n      // Refresh transaction data\n      const updatedTransaction = await transactionService.getTransaction(projectId, transactionId)\n      setTransaction(updatedTransaction)\n\n      showSuccess('Other images uploaded successfully')\n    } catch (error) {\n      console.error('Error uploading other images:', error)\n      showError('Failed to upload other images. Please try again.')\n    } finally {\n      setIsUploadingOtherImages(false)\n    }\n  }\n\n  const handleDeleteReceiptImage = async (imageUrl: string) => {\n    if (!projectId || !transactionId || !transaction) return\n\n    try {\n      // Filter out the image to be deleted\n      const currentReceiptImages = transaction.receipt_images || []\n      const updatedReceiptImages = currentReceiptImages.filter(img => img.url !== imageUrl)\n\n      await transactionService.updateTransaction(projectId, transactionId, {\n        receipt_images: updatedReceiptImages,\n        transaction_images: updatedReceiptImages // Also update legacy field for compatibility\n      })\n\n      // Refresh transaction data\n      const updatedTransaction = await transactionService.getTransaction(projectId, transactionId)\n      setTransaction(updatedTransaction)\n\n      showSuccess('Receipt image deleted successfully')\n    } catch (error) {\n      console.error('Error deleting receipt image:', error)\n      showError('Failed to delete receipt image. Please try again.')\n    }\n  }\n\n  const handleDeleteOtherImage = async (imageUrl: string) => {\n    if (!projectId || !transactionId || !transaction) return\n\n    try {\n      // Filter out the image to be deleted\n      const currentOtherImages = transaction.other_images || []\n      const updatedOtherImages = currentOtherImages.filter(img => img.url !== imageUrl)\n\n      await transactionService.updateTransaction(projectId, transactionId, {\n        other_images: updatedOtherImages\n      })\n\n      // Refresh transaction data\n      const updatedTransaction = await transactionService.getTransaction(projectId, transactionId)\n      setTransaction(updatedTransaction)\n\n      showSuccess('Other image deleted successfully')\n    } catch (error) {\n      console.error('Error deleting other image:', error)\n      showError('Failed to delete other image. Please try again.')\n    }\n  }\n\n  const handleImageFilesChange = (itemId: string, imageFiles: File[]) => {\n    setImageFilesMap(prev => {\n      const newMap = new Map(prev)\n      newMap.set(itemId, imageFiles)\n      return newMap\n    })\n  }\n\n  const handleSaveItem = async (item: TransactionItemFormData) => {\n    if (!projectId || !transactionId || !transaction) return\n\n    try {\n      // Create the item linked to the existing transaction\n      const itemId = await itemService.addItemToTransaction(\n        projectId,\n        transactionId,\n        transaction.transaction_date || new Date().toISOString(),\n        transaction.source,\n        item\n      )\n\n      // Upload item images if any\n      // Try to get files from the map first, then fall back to item.imageFiles\n      let imageFiles = imageFilesMap.get(item.id)\n      if (!imageFiles && item.imageFiles) {\n        imageFiles = item.imageFiles\n      }\n\n      if (imageFiles && imageFiles.length > 0) {\n        try {\n          const uploadedImages = await Promise.all(\n            imageFiles.map(async (file, index) => {\n              try {\n                const uploadResult = await ImageUploadService.uploadItemImage(\n                  file,\n                  project ? project.name : 'Unknown Project',\n                  itemId\n                )\n\n                return {\n                  url: uploadResult.url,\n                  alt: file.name,\n                  isPrimary: index === 0, // First image is primary\n                  uploadedAt: new Date(),\n                  fileName: file.name,\n                  size: file.size,\n                  mimeType: file.type\n                }\n              } catch (uploadError) {\n                console.error(`Failed to upload ${file.name}:`, uploadError)\n                // Return a placeholder for failed uploads so the process continues\n                return {\n                  url: '',\n                  alt: file.name,\n                  isPrimary: false,\n                  uploadedAt: new Date(),\n                  fileName: file.name,\n                  size: file.size,\n                  mimeType: file.type\n                }\n              }\n            })\n          )\n\n          // Filter out failed uploads (empty URLs)\n          const validImages = uploadedImages.filter(img => img.url && img.url.trim() !== '')\n\n          // Update the item with uploaded images\n          if (validImages.length > 0) {\n            await itemService.updateItemImages(projectId, itemId, validImages)\n          }\n        } catch (error) {\n          console.error('Error in image upload process:', error)\n        }\n      }\n\n      // Refresh the transaction items list\n      const itemIds = await itemService.getTransactionItems(projectId, transactionId)\n      const itemsPromises = itemIds.map(id => itemService.getItem(projectId, id))\n      const items = await Promise.all(itemsPromises)\n      const validItems = items.filter(item => item !== null) as Item[]\n      setTransactionItems(validItems)\n\n      // Reset state\n      setIsAddingItem(false)\n      setImageFilesMap(new Map())\n\n      showSuccess('Item added successfully')\n    } catch (error) {\n      console.error('Error adding item:', error)\n      showError('Failed to add item. Please try again.')\n    }\n  }\n\n  const handleCancelAddItem = () => {\n    setIsAddingItem(false)\n    setImageFilesMap(new Map())\n  }\n\n  // Convert all transaction images (receipt and other) to ItemImage format for the gallery\n  const allTransactionImages = [\n    ...(transaction?.receipt_images || []),\n    ...(transaction?.other_images || [])\n  ]\n\n  const itemImages = allTransactionImages.map((img, index) => ({\n    url: img.url,\n    alt: img.fileName,\n    fileName: img.fileName,\n    uploadedAt: img.uploadedAt,\n    size: img.size,\n    mimeType: img.mimeType,\n    isPrimary: index === 0 // First image is primary\n  })) || []\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-2 text-sm text-gray-600\">Loading transaction...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!transaction) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"mx-auto h-12 w-12 text-gray-400\">📄</div>\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Transaction not found</h3>\n        <p className=\"mt-1 text-sm text-gray-500\">The transaction you're looking for doesn't exist.</p>\n        <div className=\"mt-6\">\n          <Link\n            to={`/project/${projectId}?tab=transactions`}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to={`/project/${projectId}?tab=transactions`}\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n          <div className=\"flex space-x-3\">\n            <Link\n              to={`/project/${projectId}/transaction/${transactionId}/edit`}\n              className=\"inline-flex items-center justify-center p-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n              title=\"Edit Transaction\"\n            >\n              <Edit className=\"h-4 w-4\" />\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Transaction Details */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        <div className=\"px-6 py-6 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900 leading-tight\">\n            {transaction.source} - {transaction.transaction_type}\n          </h1>\n        </div>\n\n\n        <div className=\"px-6 py-4 border-t border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n            <CreditCard className=\"h-5 w-5 mr-2\" />\n            Transaction Details\n          </h3>\n          <dl className=\"grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2\">\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500\">Source</dt>\n              <dd className=\"mt-1 text-sm text-gray-900\">{transaction.source}</dd>\n            </div>\n\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500\">Budget Category</dt>\n              <dd className=\"mt-1\">\n                <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                  transaction.budget_category === 'Design Fee'\n                    ? 'bg-amber-100 text-amber-800'\n                    : transaction.budget_category === 'Furnishings'\n                    ? 'bg-yellow-100 text-yellow-800'\n                    : transaction.budget_category === 'Property Management'\n                    ? 'bg-orange-100 text-orange-800'\n                    : transaction.budget_category === 'Kitchen'\n                    ? 'bg-amber-200 text-amber-900'\n                    : transaction.budget_category === 'Install'\n                    ? 'bg-yellow-200 text-yellow-900'\n                    : transaction.budget_category === 'Storage & Receiving'\n                    ? 'bg-orange-200 text-orange-900'\n                    : transaction.budget_category === 'Fuel'\n                    ? 'bg-amber-300 text-amber-900'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {transaction.budget_category || 'Not specified'}\n                </span>\n              </dd>\n            </div>\n\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500\">Transaction Type</dt>\n              <dd className=\"mt-1\">\n                <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium no-icon ${\n                  transaction.transaction_type === 'Purchase'\n                    ? 'bg-green-100 text-green-800'\n                    : transaction.transaction_type === 'Return'\n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {transaction.transaction_type}\n                </span>\n              </dd>\n            </div>\n\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500 flex items-center\">\n                <CreditCard className=\"h-4 w-4 mr-1\" />\n                Amount\n              </dt>\n              <dd className=\"mt-1 text-sm text-gray-900\">{formatCurrency(transaction.amount)}</dd>\n            </div>\n\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500 flex items-center\">\n                <Calendar className=\"h-4 w-4 mr-1\" />\n                Transaction Date\n              </dt>\n              <dd className=\"mt-1 text-sm text-gray-900\">\n                {transaction.transaction_date ? formatDate(transaction.transaction_date) : 'No date'}\n              </dd>\n            </div>\n\n            <div>\n              <dt className=\"text-sm font-medium text-gray-500 flex items-center\">\n                <CreditCard className=\"h-4 w-4 mr-1\" />\n                Payment Method\n              </dt>\n              <dd className=\"mt-1 text-sm text-gray-900\">{transaction.payment_method}</dd>\n            </div>\n\n            {transaction.receipt_emailed && (\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">\n                  Receipt Emailed\n                </dt>\n                <dd className=\"mt-1\">\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                    Yes\n                  </span>\n                </dd>\n              </div>\n            )}\n\n            {transaction.notes && (\n              <div className=\"sm:col-span-2\">\n                <dt className=\"text-sm font-medium text-gray-500 flex items-center\">\n                  <FileText className=\"h-4 w-4 mr-1\" />\n                  Notes\n                </dt>\n                <dd className=\"mt-1 text-sm text-gray-900 whitespace-pre-wrap\">{transaction.notes}</dd>\n              </div>\n            )}\n          </dl>\n        </div>\n\n        {/* Receipt Images */}\n        <div className=\"px-6 py-6 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n              <ImageIcon className=\"h-5 w-5 mr-2\" />\n              Receipt Images\n            </h3>\n            {transaction.receipt_images && transaction.receipt_images.length > 0 && (\n              <button\n                onClick={() => {\n                  // Trigger file input click programmatically\n                  const input = document.createElement('input')\n                  input.type = 'file'\n                  input.multiple = true\n                  input.accept = 'image/*'\n                  input.onchange = (e) => {\n                    const files = (e.target as HTMLInputElement).files\n                    if (files) {\n                      handleReceiptImagesUpload(Array.from(files))\n                    }\n                  }\n                  input.click()\n                }}\n                disabled={isUploadingReceiptImages}\n                className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n              >\n                <ImageIcon className=\"h-3 w-3 mr-1\" />\n                {isUploadingReceiptImages ? 'Uploading...' : 'Add Images'}\n              </button>\n            )}\n          </div>\n          {transaction.receipt_images && transaction.receipt_images.length > 0 ? (\n            <TransactionImagePreview\n              images={transaction.receipt_images}\n              onRemoveImage={handleDeleteReceiptImage}\n              onImageClick={handleImageClick}\n              maxImages={5}\n              showControls={true}\n              size=\"md\"\n              className=\"mb-4\"\n            />\n          ) : (\n            <div className=\"text-center py-8\">\n              <ImageIcon className=\"mx-auto h-8 w-8 text-gray-400\" />\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No receipt images uploaded</h3>\n              <button\n                onClick={() => {\n                  // Trigger file input click programmatically\n                  const input = document.createElement('input')\n                  input.type = 'file'\n                  input.multiple = true\n                  input.accept = 'image/*'\n                  input.onchange = (e) => {\n                    const files = (e.target as HTMLInputElement).files\n                    if (files) {\n                      handleReceiptImagesUpload(Array.from(files))\n                    }\n                  }\n                  input.click()\n                }}\n                disabled={isUploadingReceiptImages}\n                className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 mt-3 disabled:opacity-50\"\n              >\n                <ImageIcon className=\"h-3 w-3 mr-1\" />\n                {isUploadingReceiptImages ? 'Uploading...' : 'Add Receipt Images'}\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Other Images - Only show if there are other images */}\n        {transaction.other_images && transaction.other_images.length > 0 && (\n          <div className=\"px-6 py-6 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n                <ImageIcon className=\"h-5 w-5 mr-2\" />\n                Other Images\n              </h3>\n              <button\n                onClick={() => {\n                  // Trigger file input click programmatically\n                  const input = document.createElement('input')\n                  input.type = 'file'\n                  input.multiple = true\n                  input.accept = 'image/*'\n                  input.onchange = (e) => {\n                    const files = (e.target as HTMLInputElement).files\n                    if (files) {\n                      handleOtherImagesUpload(Array.from(files))\n                    }\n                  }\n                  input.click()\n                }}\n                disabled={isUploadingOtherImages}\n                className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n              >\n                <ImageIcon className=\"h-3 w-3 mr-1\" />\n                {isUploadingOtherImages ? 'Uploading...' : 'Add Images'}\n              </button>\n            </div>\n            <TransactionImagePreview\n              images={transaction.other_images}\n              onRemoveImage={handleDeleteOtherImage}\n              onImageClick={(index) => {\n                // Find the correct index in the combined array for gallery navigation\n                const receiptCount = transaction.receipt_images?.length || 0\n                const legacyCount = transaction.transaction_images?.length || 0\n                const galleryIndex = receiptCount + legacyCount + index\n                handleImageClick(galleryIndex)\n              }}\n              maxImages={5}\n              showControls={true}\n              size=\"md\"\n              className=\"mb-4\"\n            />\n\n          </div>\n        )}\n\n        {/* Transaction Items */}\n        <div className=\"px-6 py-6 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n              <Package className=\"h-5 w-5 mr-2\" />\n              Transaction Items\n            </h3>\n            {/* Add Item Button - Only show when items exist (like Receipt Images section) */}\n            {(!isLoadingItems && !isAddingItem && transactionItems.length > 0) && (\n              <button\n                onClick={() => setIsAddingItem(true)}\n                className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                title=\"Add new item\"\n              >\n                <Package className=\"h-3 w-3 mr-1\" />\n                Add Item\n              </button>\n            )}\n          </div>\n\n          {isLoadingItems ? (\n            <div className=\"flex justify-center items-center h-16\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\n              <span className=\"ml-2 text-sm text-gray-600\">Loading items...</span>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {/* Existing Items Display */}\n              {transactionItems.length > 0 && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {transactionItems.map((item) => (\n                    <Link\n                      key={item.item_id}\n                      to={`/project/${projectId}/item/${item.item_id}?from=transaction`}\n                      className=\"block p-4 border border-gray-200 rounded-lg bg-white hover:border-primary-300 hover:shadow-sm transition-all duration-200 group relative\"\n                    >\n                      {/* Disposition badge in upper right corner */}\n                      {item.disposition && (\n                        <div className=\"absolute top-2 right-2 z-10\">\n                          <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                            item.disposition === 'keep'\n                              ? 'bg-green-100 text-green-800'\n                              : item.disposition === 'to return'\n                              ? 'bg-red-100 text-red-700'\n                              : item.disposition === 'return' // Backward compatibility\n                              ? 'bg-red-100 text-red-700'\n                              : item.disposition === 'returned'\n                              ? 'bg-red-800 text-red-100'\n                              : item.disposition === 'inventory'\n                              ? 'bg-blue-100 text-blue-800'\n                              : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {item.disposition === 'to return' ? 'To Return' : item.disposition ? item.disposition.charAt(0).toUpperCase() + item.disposition.slice(1) : 'Not Set'}\n                          </span>\n                        </div>\n                      )}\n\n                      {/* Image and Description row - side by side like inventory list */}\n                      <div className=\"flex items-center gap-3 py-3\">\n                        <div className=\"flex-shrink-0\">\n                          {item.images && item.images.length > 0 ? (\n                            // Show primary image thumbnail or first image if no primary\n                            (() => {\n                              const primaryImage = item.images.find(img => img.isPrimary) || item.images[0]\n                              return (\n                                <div className=\"w-16 h-16 rounded-lg overflow-hidden border-2 border-gray-200\">\n                                  <img\n                                    src={primaryImage.url}\n                                    alt={primaryImage.alt || 'Item image'}\n                                    className=\"w-full h-full object-cover\"\n                                  />\n                                </div>\n                              )\n                            })()\n                          ) : (\n                            // Show placeholder when no images\n                            <div className=\"w-16 h-16 rounded-lg border-2 border-gray-200 flex items-center justify-center text-gray-400 bg-gray-100\">\n                              <Package className=\"h-6 w-6\" />\n                            </div>\n                          )}\n                        </div>\n\n                        {/* Item description - matching inventory list styling */}\n                        <div className=\"flex-1 min-w-0 flex items-center\">\n                          <div>\n                            <h3 className=\"text-base font-medium text-gray-900 line-clamp-2 break-words\">\n                              {item.description}\n                            </h3>\n                            {/* Space field - if available */}\n                            {item.space && (\n                              <p className=\"text-sm text-gray-600 mt-1\">\n                                {item.space}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Bottom row: Price, Source, SKU - exactly like inventory list */}\n                      <div className=\"flex flex-wrap items-center gap-x-4 gap-y-1 text-sm text-gray-500\">\n                        {item.price && (\n                          <span className=\"font-medium text-gray-700\">{formatCurrency(item.price)}</span>\n                        )}\n                        {item.source && (\n                          <>\n                            {(item.price) && <span className=\"hidden sm:inline\">•</span>}\n                            <span className=\"font-medium text-gray-700\">{item.source}</span>\n                          </>\n                        )}\n                        {item.sku && (\n                          <>\n                            {(item.price || item.source) && <span className=\"hidden sm:inline\">•</span>}\n                            <span className=\"font-medium text-gray-700\">{item.sku}</span>\n                          </>\n                        )}\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              )}\n\n              {/* In-line Item Addition */}\n              {isAddingItem && (\n                <TransactionItemForm\n                  onSave={handleSaveItem}\n                  onCancel={handleCancelAddItem}\n                  projectId={projectId}\n                  projectName={project ? project.name : ''}\n                  onImageFilesChange={handleImageFilesChange}\n                />\n              )}\n\n              {/* Empty State - Only show when no items exist and not adding */}\n              {transactionItems.length === 0 && !isAddingItem && (\n                <div className=\"text-center py-8\">\n                  <Package className=\"mx-auto h-8 w-8 text-gray-400\" />\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No items added</h3>\n                  <button\n                    onClick={() => setIsAddingItem(true)}\n                    className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 mt-3\"\n                    title=\"Add new item\"\n                  >\n                    <Package className=\"h-3 w-3 mr-1\" />\n                    Add Item\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Metadata */}\n        <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\n          <div className=\"relative\">\n            <dl className=\"grid grid-cols-1 gap-x-4 gap-y-4 sm:grid-cols-3\">\n              <div>\n                <dt className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Project</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{project?.name || transaction.project_name}</dd>\n              </div>\n              <div>\n                <dt className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Created</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">\n                  {formatDate(transaction.created_at)}\n                </dd>\n              </div>\n            </dl>\n\n            {/* Delete button in lower right corner */}\n            <div className=\"absolute bottom-0 right-0\">\n              <button\n                onClick={handleDelete}\n                className=\"inline-flex items-center justify-center p-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                title=\"Delete Transaction\"\n              >\n                <Trash2 className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Image gallery modal */}\n      {showGallery && (\n        <ImageGallery\n          images={itemImages}\n          initialIndex={galleryInitialIndex}\n          onClose={handleGalleryClose}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":["removeUnwantedIcons","badge","child","TransactionDetail","projectId","transactionId","useParams","navigate","useNavigate","transaction","setTransaction","useState","project","setProject","transactionItems","setTransactionItems","isLoading","setIsLoading","isLoadingItems","setIsLoadingItems","showGallery","setShowGallery","galleryInitialIndex","setGalleryInitialIndex","isUploadingReceiptImages","setIsUploadingReceiptImages","isUploadingOtherImages","setIsUploadingOtherImages","isAddingItem","setIsAddingItem","imageFilesMap","setImageFilesMap","showError","showSuccess","useToast","useEffect","transactionData","projectData","itemIds","transactionService","projectService","itemService","convertedTransaction","itemsPromises","itemId","validItems","item","error","timer","timer2","handleDelete","handleImageClick","index","handleGalleryClose","handleReceiptImagesUpload","files","uploadResults","ImageUploadService","newReceiptImages","updatedReceiptImages","updatedTransaction","handleOtherImagesUpload","newOtherImages","updatedOtherImages","handleDeleteReceiptImage","imageUrl","img","handleDeleteOtherImage","handleImageFilesChange","imageFiles","prev","newMap","handleSaveItem","validImages","file","uploadError","id","handleCancelAddItem","itemImages","jsxs","jsx","Link","ArrowLeft","Edit","CreditCard","formatCurrency","Calendar","formatDate","FileText","ImageIcon","input","e","TransactionImagePreview","receiptCount","_a","legacyCount","_b","galleryIndex","Package","primaryImage","Fragment","TransactionItemForm","Trash2","ImageGallery"],"mappings":"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"}