{"version":3,"file":"AddBusinessInventoryItem.js","sources":["../../src/pages/AddBusinessInventoryItem.tsx"],"sourcesContent":["import { ArrowLeft, Save, X, Shield } from 'lucide-react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useState, FormEvent, useEffect } from 'react'\nimport { businessInventoryService, transactionService, projectService } from '@/services/inventoryService'\nimport { ImageUploadService } from '@/services/imageService'\nimport { TRANSACTION_SOURCES, TransactionSource } from '@/constants/transactionSources'\nimport { Transaction, ItemImage } from '@/types'\nimport { Select } from '@/components/ui/Select'\nimport ImagePreview from '@/components/ui/ImagePreview'\nimport { useAuth } from '../contexts/AuthContext'\nimport { UserRole } from '../types'\nimport { getUserFriendlyErrorMessage, getErrorAction } from '@/utils/imageUtils'\nimport { useToast } from '@/components/ui/ToastContext'\n\nexport default function AddBusinessInventoryItem() {\n  const navigate = useNavigate()\n  const { hasRole } = useAuth()\n  const { showError } = useToast()\n\n  // Check if user has permission to add items (DESIGNER role or higher)\n  if (!hasRole(UserRole.DESIGNER)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-red-100\">\n            <Shield className=\"h-6 w-6 text-red-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Access Denied</h2>\n          <p className=\"text-gray-600\">\n            You don't have permission to add items. Please contact an administrator if you need access.\n          </p>\n          <Link\n            to=\"/business-inventory\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            Back to Business Inventory\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const [formData, setFormData] = useState<{\n    description: string\n    source: string\n    sku: string\n    price: string\n    market_value: string\n    notes: string\n    business_inventory_location: string\n    selectedTransactionId: string\n  }>({\n    description: '',\n    source: '',\n    sku: '',\n    price: '',\n    market_value: '',\n    notes: '',\n    business_inventory_location: '',\n    selectedTransactionId: ''\n  })\n\n  const [isCustomSource, setIsCustomSource] = useState(false)\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [loadingTransactions, setLoadingTransactions] = useState(false)\n  const [images, setImages] = useState<ItemImage[]>([])\n  const [isUploadingImage, setIsUploadingImage] = useState(false)\n  const [uploadProgress, setUploadProgress] = useState<number>(0)\n\n  // Track if transaction is selected to hide source/payment method fields\n  const isTransactionSelected = Boolean(formData.selectedTransactionId)\n\n  // Fetch transactions when component mounts\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      setLoadingTransactions(true)\n      try {\n        // Get all projects first\n        const projects = await projectService.getProjects()\n\n        // Collect all transactions from all projects that are inventory-related\n        const allTransactions: Transaction[] = []\n\n        for (const project of projects) {\n          try {\n            const projectTransactions = await transactionService.getTransactions(project.id)\n            // Filter for inventory-related transactions (those with reimbursement_type or trigger_event related to inventory)\n            const inventoryTransactions = projectTransactions.filter(t =>\n              t.reimbursement_type ||\n              t.trigger_event === 'Inventory allocation' ||\n              t.trigger_event === 'Inventory return' ||\n              t.trigger_event === 'Purchase from client' ||\n              t.source?.toLowerCase().includes('inventory')\n            )\n            allTransactions.push(...inventoryTransactions)\n          } catch (error) {\n            console.error(`Error loading transactions for project ${project.id}:`, error)\n          }\n        }\n\n        // Sort by creation date, newest first\n        allTransactions.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n        setTransactions(allTransactions)\n      } catch (error) {\n        console.error('Error fetching transactions:', error)\n      } finally {\n        setLoadingTransactions(false)\n      }\n    }\n\n    fetchTransactions()\n  }, [])\n\n  // Initialize custom states based on initial form data\n  useEffect(() => {\n    const predefinedSources = TRANSACTION_SOURCES\n    if (formData.source && !predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(true)\n    } else if (formData.source && predefinedSources.includes(formData.source as TransactionSource)) {\n      setIsCustomSource(false)\n    }\n  }, [formData.source])\n\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  // Validation function\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n\n    // Validate market value if provided\n    if (formData.market_value.trim() && (isNaN(Number(formData.market_value)) || Number(formData.market_value) <= 0)) {\n      newErrors.market_value = 'Market value must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm()) return\n\n    setIsSubmitting(true)\n\n    try {\n      const itemData = {\n        ...formData,\n        qr_key: `qr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        bookmark: false,\n        transaction_id: formData.selectedTransactionId || '', // Use selected transaction or empty string\n        inventory_status: 'available' as const,\n        payment_method: 'Cash', // Default payment method for business inventory\n        date_created: new Date().toISOString(),\n        last_updated: new Date().toISOString(),\n        images: images.length > 0 ? images : undefined\n      }\n\n      const itemId = await businessInventoryService.createBusinessInventoryItem(itemData)\n      navigate(`/business-inventory/${itemId}`)\n    } catch (error) {\n      console.error('Error creating item:', error)\n      setErrors({ submit: 'Failed to create item. Please try again.' })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const handleTransactionChange = (transactionId: string) => {\n    const selectedTransaction = transactions.find(t => t.transaction_id === transactionId)\n\n    setFormData(prev => ({\n      ...prev,\n      selectedTransactionId: transactionId,\n      // Pre-fill source from selected transaction\n      source: selectedTransaction?.source || ''\n    }))\n\n    // Update custom state based on pre-filled values\n    if (selectedTransaction?.source) {\n      const isPredefinedSource = TRANSACTION_SOURCES.includes(selectedTransaction.source as TransactionSource)\n      setIsCustomSource(!isPredefinedSource)\n    }\n\n    // Clear error when user makes selection\n    if (errors.selectedTransactionId) {\n      setErrors(prev => ({ ...prev, selectedTransactionId: '' }))\n    }\n  }\n\n  const handleMultipleImageUpload = async (files: File[]) => {\n    try {\n      setIsUploadingImage(true)\n      setUploadProgress(0)\n\n      console.log('Starting multiple image upload for', files.length, 'files')\n\n      const uploadResults = await ImageUploadService.uploadMultipleItemImages(\n        files,\n        'Business Inventory',\n        'new-item', // temporary ID for new items\n        (fileIndex, progress) => {\n          // Show progress for current file being uploaded\n          const overallProgress = Math.round(((fileIndex + progress.percentage / 100) / files.length) * 100)\n          setUploadProgress(overallProgress)\n        }\n      )\n\n      console.log('All uploads completed successfully:', uploadResults.length, 'images')\n\n      // Convert upload results to ItemImage objects\n      const newImages: ItemImage[] = uploadResults.map((result, index) => ({\n        url: result.url,\n        alt: result.fileName,\n        isPrimary: images.length === 0 && index === 0, // First image is primary if no images exist\n        uploadedAt: new Date(),\n        fileName: result.fileName,\n        size: result.size,\n        mimeType: result.mimeType\n      }))\n\n      console.log('New image objects created:', newImages.length)\n\n      // Update the images array\n      setImages(prev => [...prev, ...newImages])\n      setUploadProgress(100)\n\n      console.log('Multiple image upload completed successfully')\n    } catch (error) {\n      console.error('Error uploading multiple images:', error)\n      const friendlyMessage = getUserFriendlyErrorMessage(error)\n      const action = getErrorAction(error)\n      showError(`${friendlyMessage} Suggestion: ${action}`)\n    } finally {\n      setIsUploadingImage(false)\n      setUploadProgress(0)\n    }\n  }\n\n  const handleSelectFromGallery = async () => {\n    try {\n      setIsUploadingImage(true)\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files && files.length > 0) {\n        console.log('Selected', files.length, 'files from gallery')\n        await handleMultipleImageUpload(files)\n      } else {\n        console.log('No files selected from gallery')\n      }\n    } catch (error: any) {\n      console.error('Error selecting from gallery:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      const friendlyMessage = getUserFriendlyErrorMessage(error)\n      const action = getErrorAction(error)\n      showError(`${friendlyMessage} Suggestion: ${action}`)\n    } finally {\n      setIsUploadingImage(false)\n      setUploadProgress(0)\n    }\n  }\n\n  const handleRemoveImage = async (imageUrl: string) => {\n    // Remove from local state\n    setImages(prev => prev.filter(img => img.url !== imageUrl))\n\n    // Note: For new items, we don't need to delete from storage since they haven't been saved yet\n    // The images will be cleaned up when the item is actually created\n  }\n\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        {/* Back button row */}\n        <div className=\"flex items-center justify-between\">\n          <Link\n            to=\"/business-inventory\"\n            className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Link>\n        </div>\n      </div>\n\n      {/* Form */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Add Item</h1>\n        </div>\n        <form onSubmit={handleSubmit} className=\"space-y-8 p-8\">\n          {/* Item Images */}\n          <div>\n            <div className=\"mb-3 flex items-center justify-between\">\n              <label className=\"block text-sm font-medium text-gray-700\">\n                Item Images\n              </label>\n              {images.length > 0 && (\n                <button\n                  onClick={handleSelectFromGallery}\n                  disabled={isUploadingImage || images.length >= 5}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n                >\n                  {isUploadingImage\n                    ? uploadProgress > 0 && uploadProgress < 100\n                      ? `Uploading... ${Math.round(uploadProgress)}%`\n                      : 'Uploading...'\n                    : images.length >= 5\n                      ? 'Max reached'\n                      : 'Add Images'\n                  }\n                </button>\n              )}\n            </div>\n\n            {images.length > 0 ? (\n              <ImagePreview\n                images={images}\n                onRemoveImage={handleRemoveImage}\n                maxImages={5}\n                size=\"md\"\n                showControls={true}\n              />\n            ) : (\n              <div className=\"text-center py-8 border-2 border-dashed border-gray-300 rounded-lg\">\n                <p className=\"text-sm text-gray-500 mb-3\">No images for this item yet</p>\n                <button\n                  onClick={handleSelectFromGallery}\n                  disabled={isUploadingImage}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n                >\n                  {isUploadingImage\n                    ? uploadProgress > 0 && uploadProgress < 100\n                      ? `Uploading... ${Math.round(uploadProgress)}%`\n                      : 'Uploading...'\n                    : 'Add Images'\n                  }\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Description */}\n            <div>\n                  <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                    Description *\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    value={formData.description}\n                    onChange={(e) => handleInputChange('description', e.target.value)}\n              placeholder=\"e.g., Wooden dining table, 6 chairs\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.description ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                  />\n            {errors.description && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n                  )}\n                </div>\n\n          {/* Transaction Selection */}\n          <Select\n            label=\"Associate with Transaction\"\n            id=\"selectedTransactionId\"\n            value={formData.selectedTransactionId}\n            onChange={(e) => handleTransactionChange(e.target.value)}\n            error={errors.selectedTransactionId}\n            disabled={loadingTransactions}\n          >\n            <option value=\"\">Select a transaction</option>\n            {loadingTransactions ? (\n              <option disabled>Loading transactions...</option>\n            ) : (\n              transactions.map((transaction) => (\n                <option key={transaction.transaction_id} value={transaction.transaction_id}>\n                  {new Date(transaction.transaction_date).toLocaleDateString()} - {transaction.source} - ${transaction.amount}\n                </option>\n              ))\n            )}\n          </Select>\n          {!loadingTransactions && transactions.length === 0 && (\n            <p className=\"mt-1 text-sm text-gray-500\">No transactions available</p>\n          )}\n\n          {/* Show transaction info when selected */}\n          {isTransactionSelected && (\n            <div className=\"mt-2 p-3 bg-blue-50 border border-blue-200 rounded-md\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Source:</strong> {formData.source}\n              </p>\n              <p className=\"text-xs text-blue-600 mt-1\">\n                These values are automatically filled from the selected transaction\n              </p>\n            </div>\n          )}\n\n          {/* Source */}\n          {!isTransactionSelected && (\n                <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Source\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-3\">\n                {TRANSACTION_SOURCES.map((source) => (\n                  <div key={source} className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      id={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`}\n                      name=\"source\"\n                      value={source}\n                      checked={formData.source === source}\n                      onChange={(e) => {\n                        handleInputChange('source', e.target.value)\n                        setIsCustomSource(false)\n                      }}\n                      className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                    />\n                    <label htmlFor={`source_${source.toLowerCase().replace(/\\s+/g, '_')}`} className=\"ml-2 block text-sm text-gray-900\">\n                      {source}\n                    </label>\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  id=\"source_custom\"\n                  name=\"source\"\n                  value=\"custom\"\n                  checked={isCustomSource}\n                  onChange={() => {\n                    setIsCustomSource(true)\n                    handleInputChange('source', '')\n                  }}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                />\n                <label htmlFor=\"source_custom\" className=\"ml-2 block text-sm text-gray-900\">\n                  Other\n                  </label>\n              </div>\n              {isCustomSource && (\n                  <input\n                    type=\"text\"\n                  id=\"source_custom_input\"\n                    value={formData.source}\n                    onChange={(e) => handleInputChange('source', e.target.value)}\n                  placeholder=\"Enter custom source...\"\n                  className={`mt-3 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                    errors.source ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                />\n              )}\n              {errors.source && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.source}</p>\n              )}\n            </div>\n          )}\n\n\n          {/* SKU */}\n                <div>\n                  <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n                    SKU\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"sku\"\n                    value={formData.sku}\n                    onChange={(e) => handleInputChange('sku', e.target.value)}\n              placeholder=\"Product SKU or model number\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n\n          {/* Price */}\n          <div>\n            <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n              Purchase Price\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"price\"\n                value={formData.price}\n                onChange={(e) => handleInputChange('price', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.price ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.price && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>\n            )}\n          </div>\n\n          {/* Market Value */}\n          <div>\n            <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n              Market Value\n            </label>\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <span className=\"text-gray-500 sm:text-sm\">$</span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"market_value\"\n                value={formData.market_value}\n                onChange={(e) => handleInputChange('market_value', e.target.value)}\n                placeholder=\"0.00\"\n                className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                  errors.market_value ? 'border-red-300' : 'border-gray-300'\n                }`}\n              />\n            </div>\n            {errors.market_value && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n            )}\n          </div>\n\n          {/* Storage Location */}\n                <div>\n                  <label htmlFor=\"business_inventory_location\" className=\"block text-sm font-medium text-gray-700\">\n                    Storage Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"business_inventory_location\"\n                    value={formData.business_inventory_location}\n                    onChange={(e) => handleInputChange('business_inventory_location', e.target.value)}\n                    placeholder=\"e.g., Warehouse A - Section 3 - Shelf 5\"\n              className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.business_inventory_location ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n            {errors.business_inventory_location && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.business_inventory_location}</p>\n                  )}\n                </div>\n\n\n          {/* Notes */}\n            <div>\n                  <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n                    Notes\n                  </label>\n                  <textarea\n                    id=\"notes\"\n                    rows={3}\n                    value={formData.notes}\n                    onChange={(e) => handleInputChange('notes', e.target.value)}\n                    placeholder=\"Additional notes about this item...\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n\n          {/* Error message */}\n          {errors.submit && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\n              </div>\n            )}\n\n            {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Link\n              to=\"/business-inventory\"\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n              >\n                <X className=\"h-4 w-4 mr-2\" />\n                Cancel\n            </Link>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <Save className=\"h-4 w-4 mr-2\" />\n              {isSubmitting ? 'Creating...' : 'Create Item'}\n              </button>\n            </div>\n          </form>\n      </div>\n    </div>\n  )\n}\n"],"names":["AddBusinessInventoryItem","navigate","useNavigate","hasRole","useAuth","showError","useToast","UserRole","jsxs","jsx","Shield","Link","formData","setFormData","useState","isCustomSource","setIsCustomSource","transactions","setTransactions","loadingTransactions","setLoadingTransactions","images","setImages","isUploadingImage","setIsUploadingImage","uploadProgress","setUploadProgress","isTransactionSelected","useEffect","projects","projectService","allTransactions","project","inventoryTransactions","transactionService","t","_a","error","a","b","predefinedSources","TRANSACTION_SOURCES","errors","setErrors","isSubmitting","setIsSubmitting","validateForm","newErrors","handleSubmit","e","itemData","itemId","businessInventoryService","handleInputChange","field","value","prev","handleTransactionChange","transactionId","selectedTransaction","isPredefinedSource","handleMultipleImageUpload","files","uploadResults","ImageUploadService","fileIndex","progress","overallProgress","newImages","result","index","friendlyMessage","getUserFriendlyErrorMessage","action","getErrorAction","handleSelectFromGallery","_b","handleRemoveImage","imageUrl","img","ArrowLeft","ImagePreview","Select","transaction","source","X","Save"],"mappings":"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"}