{"version":3,"file":"TransactionItemForm.js","sources":["../../src/components/TransactionItemForm.tsx"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react'\nimport { X, Camera } from 'lucide-react'\nimport { TransactionItemFormData, TransactionItemValidationErrors, ItemImage } from '@/types'\nimport { ImageUploadService } from '@/services/imageService'\nimport ImagePreview from './ui/ImagePreview'\nimport { useToast } from '@/components/ui/ToastContext'\n\ninterface TransactionItemFormProps {\n  item?: TransactionItemFormData\n  onSave: (item: TransactionItemFormData) => void\n  onCancel: () => void\n  isEditing?: boolean\n  projectId?: string\n  projectName?: string\n  onImageFilesChange?: (itemId: string, imageFiles: File[]) => void\n}\n\nexport default function TransactionItemForm({ item, onSave, onCancel, isEditing = false, onImageFilesChange }: TransactionItemFormProps) {\n  // Generate a stable temporary ID that doesn't change during component lifetime\n  const stableTempId = useMemo(() =>\n    item?.id || `temp_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`,\n    [item?.id]\n  )\n\n  const [formData, setFormData] = useState<TransactionItemFormData>(\n    item || {\n      id: stableTempId,\n      description: '',\n      sku: '',\n      purchase_price: '',\n      resale_price: '',\n      market_value: '',\n      space: '',\n      notes: ''\n    }\n  )\n\n  const [itemImages, setItemImages] = useState<ItemImage[]>(item?.images || [])\n  const [imageFiles, setImageFiles] = useState<File[]>(item?.imageFiles || [])\n  const [isUploadingImage, setIsUploadingImage] = useState(false)\n\n  const [errors, setErrors] = useState<TransactionItemValidationErrors>({})\n  const { showError } = useToast()\n\n  // Update state when item prop changes (for editing existing items)\n  useEffect(() => {\n    if (item) {\n      console.log('TransactionItemForm: Editing item with images:', item.images?.length || 0, 'imageFiles:', item.imageFiles?.length || 0)\n      setItemImages(item.images || [])\n      setImageFiles(item.imageFiles || [])\n      setFormData({\n        id: item.id,\n        description: item.description,\n        sku: item.sku || '',\n        purchase_price: item.purchase_price || '',\n        resale_price: item.resale_price || '',\n        market_value: item.market_value || '',\n        space: item.space || '',\n        notes: item.notes || ''\n      })\n    }\n  }, [item])\n\n\n  const handleSelectFromGallery = async () => {\n    try {\n      setIsUploadingImage(true)\n      const files = await ImageUploadService.selectFromGallery()\n\n      if (files && files.length > 0) {\n        console.log('Selected', files.length, 'files from gallery')\n\n        // Filter out files that are already selected (by name and size)\n        const existingFileNames = new Set(imageFiles.map(f => `${f.name}_${f.size}`))\n        const newFiles = files.filter(file => !existingFileNames.has(`${file.name}_${file.size}`))\n\n        if (newFiles.length > 0) {\n          // Store the files for later upload when the transaction is submitted\n          setImageFiles(prev => [...prev, ...newFiles])\n\n          // Create preview image objects (without URLs until uploaded)\n          const previewImages: ItemImage[] = newFiles.map((file, index) => ({\n            url: `preview_${file.name}_${file.size}_${Date.now()}_${index}`, // Unique key for preview images\n            alt: file.name,\n            isPrimary: itemImages.length === 0 && index === 0, // First image is primary if no images exist\n            uploadedAt: new Date(),\n            fileName: file.name,\n            size: file.size,\n            mimeType: file.type\n          }))\n\n          setItemImages(prev => [...prev, ...previewImages])\n          console.log('Added', previewImages.length, 'new preview images')\n        } else {\n          console.log('All selected files are already present')\n        }\n      } else {\n        console.log('No files selected from gallery')\n      }\n    } catch (error: any) {\n      console.error('Error selecting from gallery:', error)\n\n      // Handle cancel/timeout gracefully - don't show error for user cancellation\n      if (error.message?.includes('timeout') || error.message?.includes('canceled')) {\n        console.log('User canceled image selection or selection timed out')\n        return\n      }\n\n      // Show error for actual failures\n      showError('Failed to select images from gallery. Please try again.')\n    } finally {\n      setIsUploadingImage(false)\n    }\n  }\n\n  const handleRemoveImage = (imageUrl: string) => {\n    const imageIndex = itemImages.findIndex(img => img.url === imageUrl)\n    if (imageIndex !== -1 && imageIndex < imageFiles.length) {\n      // Remove both the image and the corresponding file\n      setItemImages(prev => prev.filter(img => img.url !== imageUrl))\n      setImageFiles(prev => prev.filter((_, index) => index !== imageIndex))\n    }\n  }\n\n  const handleSetPrimaryImage = (imageUrl: string) => {\n    setItemImages(prev => prev.map(img => ({\n      ...img,\n      isPrimary: img.url === imageUrl\n    })))\n  }\n\n  const validateForm = (): boolean => {\n    const newErrors: TransactionItemValidationErrors = {}\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required'\n    }\n\n    if (formData.purchase_price && (isNaN(Number(formData.purchase_price)) || Number(formData.purchase_price) <= 0)) {\n      newErrors.purchase_price = 'Purchase price must be a positive number'\n    }\n    if (formData.resale_price && (isNaN(Number(formData.resale_price)) || Number(formData.resale_price) <= 0)) {\n      newErrors.resale_price = 'Resale price must be a positive number'\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = () => {\n    if (!validateForm()) return\n\n    // Include images and files in the form data\n    const itemWithImages = {\n      ...formData,\n      images: itemImages,\n      imageFiles: imageFiles // Include the actual files for upload\n    }\n\n    // Notify parent about image files if callback exists\n    if (onImageFilesChange && imageFiles.length > 0) {\n      onImageFilesChange(stableTempId, imageFiles)\n    }\n\n    onSave(itemWithImages)\n  }\n\n  const handleInputChange = (field: keyof TransactionItemFormData, value: string) => {\n    // For price-related fields, ensure they are valid numbers or empty\n    if (field === 'purchase_price' || field === 'resale_price') {\n      if (value !== '' && (isNaN(Number(value)) || Number(value) < 0)) {\n        return // Don't update if invalid\n      }\n    }\n    setFormData(prev => ({ ...prev, [field]: value }))\n\n    // Clear error when user starts typing\n    if (errors[field as keyof TransactionItemValidationErrors]) {\n      setErrors(prev => ({ ...prev, [field]: undefined } as TransactionItemValidationErrors))\n    }\n  }\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">\n          {isEditing ? 'Edit Item' : 'Add Item'}\n        </h3>\n        <button\n          onClick={onCancel}\n          className=\"text-gray-400 hover:text-gray-600\"\n          type=\"button\"\n        >\n          <X className=\"h-5 w-5\" />\n        </button>\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Item Images */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Item Images\n          </label>\n\n          {/* Image upload button */}\n          <button\n            type=\"button\"\n            onClick={handleSelectFromGallery}\n            disabled={isUploadingImage}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 mb-3\"\n            title=\"Add images from gallery or camera\"\n          >\n            <Camera className=\"h-4 w-4 mr-2\" />\n            {isUploadingImage ? 'Uploading...' : 'Add Images'}\n          </button>\n\n          {/* Image preview */}\n          <ImagePreview\n            images={itemImages}\n            onRemoveImage={handleRemoveImage}\n            onSetPrimary={handleSetPrimaryImage}\n            maxImages={3}\n            size=\"md\"\n          />\n        </div>\n\n        {/* Description */}\n        <div>\n          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n            Description *\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={formData.description}\n            onChange={(e) => handleInputChange('description', e.target.value)}\n            placeholder=\"Item description\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.description ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.description && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n          )}\n        </div>\n\n        {/* SKU */}\n        <div>\n          <label htmlFor=\"sku\" className=\"block text-sm font-medium text-gray-700\">\n            SKU\n          </label>\n          <input\n            type=\"text\"\n            id=\"sku\"\n            value={formData.sku}\n            onChange={(e) => handleInputChange('sku', e.target.value)}\n            placeholder=\"Stock keeping unit\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.sku ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.sku && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.sku}</p>\n          )}\n        </div>\n\n        {/* Purchase Price */}\n        <div>\n          <label htmlFor=\"purchase_price\" className=\"block text-sm font-medium text-gray-700\">\n            Purchase Price\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              id=\"purchase_price\"\n              value={formData.purchase_price || ''}\n              onChange={(e) => handleInputChange('purchase_price', e.target.value)}\n              placeholder=\"0.00\"\n              className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.purchase_price ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n          </div>\n          {errors.purchase_price && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.purchase_price}</p>\n          )}\n        </div>\n\n        {/* Resale Price */}\n        <div>\n          <label htmlFor=\"resale_price\" className=\"block text-sm font-medium text-gray-700\">\n            Resale Price (1584 Design Price)\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              id=\"resale_price\"\n              value={formData.resale_price || ''}\n              onChange={(e) => handleInputChange('resale_price', e.target.value)}\n              placeholder=\"0.00\"\n              className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.resale_price ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n          </div>\n          {errors.resale_price && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.resale_price}</p>\n          )}\n        </div>\n\n        {/* Market Value */}\n        <div>\n          <label htmlFor=\"market_value\" className=\"block text-sm font-medium text-gray-700\">\n            Market Value\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"market_value\"\n              value={formData.market_value}\n              onChange={(e) => handleInputChange('market_value', e.target.value)}\n              placeholder=\"0.00\"\n              className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n                errors.market_value ? 'border-red-300' : 'border-gray-300'\n              }`}\n            />\n          </div>\n          {errors.market_value && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.market_value}</p>\n          )}\n        </div>\n\n        {/* Space */}\n        <div>\n          <label htmlFor=\"space\" className=\"block text-sm font-medium text-gray-700\">\n            Space\n          </label>\n          <input\n            type=\"text\"\n            id=\"space\"\n            value={formData.space}\n            onChange={(e) => handleInputChange('space', e.target.value)}\n            placeholder=\"e.g., Living Room, Master Bedroom, Kitchen\"\n            className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\n          />\n        </div>\n\n        {/* Notes */}\n        <div>\n          <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\n            Notes\n          </label>\n          <textarea\n            id=\"notes\"\n            rows={2}\n            value={formData.notes}\n            onChange={(e) => handleInputChange('notes', e.target.value)}\n            placeholder=\"Additional notes about this item\"\n            className={`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 ${\n              errors.notes ? 'border-red-300' : 'border-gray-300'\n            }`}\n          />\n          {errors.notes && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.notes}</p>\n          )}\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-3 pt-4\">\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              onCancel()\n            }}\n            className=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              handleSubmit()\n            }}\n            className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            {isEditing ? 'Update Item' : 'Add Item'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["TransactionItemForm","item","onSave","onCancel","isEditing","onImageFilesChange","stableTempId","useMemo","formData","setFormData","useState","itemImages","setItemImages","imageFiles","setImageFiles","isUploadingImage","setIsUploadingImage","errors","setErrors","showError","useToast","useEffect","_a","_b","handleSelectFromGallery","files","ImageUploadService","existingFileNames","f","newFiles","file","prev","previewImages","index","error","handleRemoveImage","imageUrl","imageIndex","img","_","handleSetPrimaryImage","validateForm","newErrors","handleSubmit","itemWithImages","handleInputChange","field","value","jsxs","jsx","X","Camera","ImagePreview","e"],"mappings":"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"}