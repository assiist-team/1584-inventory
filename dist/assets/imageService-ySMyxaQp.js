import{m as I,u as T,n as U,p as M,q as A}from"./firebase-DTZupgGV.js";import{s as h,e as S}from"./index-CX_-pvtV.js";class v extends Error{constructor(t,e,a){super(t),this.code=e,this.originalError=a,this.name="ImageUploadError"}}function z(o){if(o instanceof v)return o.message;if(o!=null&&o.code)switch(o.code){case"storage/unauthorized":return"You need to sign in to upload images. Please refresh the page and try again.";case"storage/quota-exceeded":return"Storage limit reached. Please contact support or delete some old images.";case"storage/invalid-format":return"Invalid image format. Please upload JPEG, PNG, GIF, or WebP files only.";case"storage/retry-limit-exceeded":return"Upload failed after multiple attempts. Please check your connection and try again.";default:return`Upload failed: ${o.message||"Unknown error"}. Please try again.`}if(o!=null&&o.message){if(o.message.includes("timeout"))return"Upload timed out. Please try again with a smaller image or check your connection.";if(o.message.includes("network")||o.message.includes("offline"))return"Network error. Please check your internet connection and try again.";if(o.message.includes("CORS"))return"Access error. Please refresh the page and try again.";if(o.message.includes("permission")||o.message.includes("auth"))return"Permission error. Please sign in and try again."}return"Failed to upload image. Please try again."}function _(o){var t,e;return(o==null?void 0:o.code)==="storage/unauthorized"?"Try refreshing the page to sign in again.":(o==null?void 0:o.code)==="storage/quota-exceeded"?"Contact support or delete some old images to free up space.":(o==null?void 0:o.code)==="storage/invalid-format"?"Use JPEG, PNG, GIF, or WebP format images.":(t=o==null?void 0:o.message)!=null&&t.includes("network")||(e=o==null?void 0:o.message)!=null&&e.includes("timeout")?"Check your internet connection and try again.":"Try again in a few moments."}class L{static async checkStorageAvailability(){try{return h?!0:(console.error("Firebase Storage not initialized"),!1)}catch(t){return console.error("Storage availability check failed:",t),!1}}static async ensureAuthentication(){try{await S()}catch(t){throw console.error("Failed to ensure authentication:",t),new Error("Authentication required for storage operations. Please refresh the page and try again.")}}static async uploadItemImage(t,e,a,r,s=0){return this.uploadImageInternal(t,e,a,"item_images",r,s)}static async uploadTransactionImage(t,e,a,r,s=0){return this.uploadImageInternal(t,e,a,"transaction_images",r,s)}static async uploadImageInternal(t,e,a,r,s,i=0){var b,F;if(console.log(`Upload attempt ${i+1}/4`),await this.ensureAuthentication(),!await this.checkStorageAvailability())throw new Error("Storage service is not available. Please check your connection and try again.");let n=t;if(this.shouldCompressForMobile(t)&&(console.log("Compressing file for mobile upload..."),n=await this.compressForMobile(t)),!this.validateImageFile(n))throw new Error("Invalid image file. Please upload a valid image (JPEG, PNG, GIF, WebP) under 10MB.");const g=Date.now(),p=n.name.replace(/[^a-zA-Z0-9.-]/g,"_"),f=e.replace(/[^a-zA-Z0-9-]/g,"_"),P=new Date().toISOString().replace(/[:.]/g,"-").slice(0,-1),E=`${f}/${r}/${P}/${g}_${p}`;console.log("Uploading to path:",E,"Size:",n.size,"Type:",n.type);const R=I(h,E);try{const d=T(R,n);s&&d.on("state_changed",m=>{const y={loaded:m.bytesTransferred,total:m.totalBytes,percentage:m.bytesTransferred/m.totalBytes*100};s(y)},m=>{if(console.error("Upload error:",m),m.code==="storage/retry-limit-exceeded"&&i<3)console.log(`Retrying upload (${i+1}/3)...`),setTimeout(()=>{this.uploadImageInternal(n,e,a,r,s,i+1)},Math.pow(2,i)*1e3);else throw new Error("Failed to upload image. Please try again.")});const w=await Promise.race([d,new Promise((m,y)=>setTimeout(()=>y(new Error("Upload timeout after 60 seconds")),6e4))]),u=await U(w.ref);return console.log("Upload successful:",u),{url:u,fileName:n.name,size:n.size,mimeType:n.type}}catch(d){if(console.error("Error uploading image:",d),d.code==="storage/retry-limit-exceeded"&&i<3)return console.log(`Retrying upload due to retry limit exceeded (${i+1}/3)...`),await new Promise(u=>setTimeout(u,Math.pow(2,i)*2e3)),this.uploadImageInternal(n,e,a,r,s,i+1);if((b=d.message)!=null&&b.includes("timeout")||(F=d.message)!=null&&F.includes("Upload timeout"))if(i<3){console.log("Upload timed out, retrying with smaller file...");const u=await this.compressForMobile(n);return this.uploadImageInternal(u,e,a,r,s,i+1)}else throw new Error("Upload timed out. Please try again with a smaller image or check your connection.");const w=z(d);throw new v(w,d.code,d)}}static async uploadMultipleItemImages(t,e,a,r){const s=[];for(let i=0;i<t.length;i++){const c=t[i];try{const l=await this.uploadItemImage(c,e,a,r?n=>r(i,n):void 0);s.push(l)}catch(l){throw console.error(`Error uploading image ${i+1}:`,l),l}}return s}static async uploadMultipleTransactionImages(t,e,a,r){const s=[];for(let i=0;i<t.length;i++){const c=t[i];try{const l=await this.uploadTransactionImage(c,e,a,r?n=>r(i,n):void 0);s.push(l)}catch(l){throw console.error(`Error uploading image ${i+1}:`,l),l}}return s}static async deleteImage(t){try{await this.ensureAuthentication();const e=I(h,t);await M(e)}catch(e){throw console.error("Error deleting image:",e),new Error("Failed to delete image")}}static async deleteMultipleImages(t){const e=t.map(a=>this.deleteImage(a));await Promise.all(e)}static convertFilesToTransactionImages(t){return t.map(e=>({url:e.url,fileName:e.fileName,uploadedAt:new Date,size:e.size,mimeType:e.mimeType}))}static validateImageFile(t){if(!["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(t.type))return!1;const a=10*1024*1024;return!(t.size>a)}static async getImageMetadata(t){try{await this.ensureAuthentication();const e=I(h,t);return await A(e)}catch(e){return console.error("Error getting image metadata:",e),null}}static compressImage(t,e=800,a=.8){return new Promise((r,s)=>{const i=document.createElement("canvas"),c=i.getContext("2d"),l=new Image;l.onload=()=>{let{width:n,height:g}=l;n>e&&(g=g*e/n,n=e),i.width=n,i.height=g,c==null||c.drawImage(l,0,0,n,g),i.toBlob(p=>{if(p){const f=new File([p],t.name,{type:"image/jpeg",lastModified:Date.now()});r(f)}else s(new Error("Failed to compress image"))},"image/jpeg",a)},l.onerror=()=>s(new Error("Failed to load image")),l.src=URL.createObjectURL(t)})}static takePhoto(){return new Promise(t=>{const e=document.createElement("input");e.type="file",e.accept="image/*",e.capture="environment",e.onchange=a=>{var i;const s=((i=a.target.files)==null?void 0:i[0])||null;t(s)},e.click()})}static selectFromGallery(){return new Promise((t,e)=>{const a=document.createElement("input");a.type="file",a.accept="image/*",a.multiple=!0;const r=setTimeout(()=>{document.body.contains(a)&&document.body.removeChild(a),e(new Error("File selection timeout - user may have canceled"))},1e4),s=c=>{clearTimeout(r),document.body.contains(a)&&document.body.removeChild(a);const l=c.target,n=l.files?Array.from(l.files):[];t(n)},i=()=>{clearTimeout(r),document.body.contains(a)&&document.body.removeChild(a),e(new Error("File selection canceled"))};a.onchange=s,a.addEventListener("cancel",i),document.body.appendChild(a),a.click()})}static createPreviewUrl(t){return URL.createObjectURL(t)}static revokePreviewUrl(t){URL.revokeObjectURL(t)}static shouldCompressForMobile(t){const e=navigator.userAgent.toLowerCase(),a=/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e),r=/ipad|android(?!.*mobile)/i.test(e),s=t.size>2*1024*1024,i=t.size>1024*1024;return a&&i||r&&s}static async compressForMobile(t){try{console.log(`Compressing file: ${t.name}, Size: ${t.size} bytes`);const e=await this.compressImage(t,1200,.7);return console.log(`Compressed to: ${e.size} bytes (${Math.round(e.size/t.size*100)}% of original)`),e}catch(e){return console.warn("Failed to compress file, using original:",e),t}}}export{L as I,_ as a,z as g};
//# sourceMappingURL=imageService-ySMyxaQp.js.map
