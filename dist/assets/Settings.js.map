{"version":3,"file":"Settings.js","sources":["../../src/components/auth/UserManagement.tsx","../../src/pages/Settings.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { Button } from '../ui/Button'\nimport { collection, query, getDocs, doc, updateDoc } from 'firebase/firestore'\nimport { db, createUserInvitation } from '../../services/firebase'\nimport { User, UserRole } from '../../types'\nimport { Mail, Shield, Users, Crown, Edit } from 'lucide-react'\n\ninterface UserManagementProps {\n  className?: string\n}\n\nexport default function UserManagement({ className }: UserManagementProps) {\n  const { user: currentUser, hasRole } = useAuth()\n  const [users, setUsers] = useState<User[]>([])\n  const [loading, setLoading] = useState(true)\n  const [inviteEmail, setInviteEmail] = useState('')\n  const [inviteRole, setInviteRole] = useState<UserRole>(UserRole.VIEWER)\n  const [inviting, setInviting] = useState(false)\n  const [error, setError] = useState('')\n\n  // Check if current user can manage users (admin or owner)\n  const canManageUsers = hasRole(UserRole.ADMIN)\n\n  useEffect(() => {\n    if (canManageUsers) {\n      loadUsers()\n    }\n  }, [canManageUsers])\n\n  const loadUsers = async () => {\n    try {\n      setLoading(true)\n      const usersQuery = query(collection(db, 'users'))\n      const querySnapshot = await getDocs(usersQuery)\n      const usersData = querySnapshot.docs.map(doc => doc.data() as User)\n      setUsers(usersData)\n    } catch (err) {\n      console.error('Error loading users:', err)\n      setError('Failed to load users')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const updateUserRole = async (userId: string, newRole: UserRole) => {\n    try {\n      const userDocRef = doc(db, 'users', userId)\n      await updateDoc(userDocRef, { role: newRole })\n      await loadUsers() // Refresh the list\n    } catch (err) {\n      console.error('Error updating user role:', err)\n      setError('Failed to update user role')\n    }\n  }\n\n  const inviteUser = async () => {\n    if (!inviteEmail.trim()) return\n\n    try {\n      setInviting(true)\n      setError('')\n\n      // Create invitation in Firestore\n      await createUserInvitation(inviteEmail.trim(), inviteRole, currentUser?.id || '')\n\n      // Show success message\n      alert(`Invitation sent to ${inviteEmail} with ${inviteRole} role. They can now sign up with Google and will be automatically assigned the ${inviteRole} role.`)\n\n      setInviteEmail('')\n      setInviteRole(UserRole.VIEWER)\n    } catch (err) {\n      console.error('Error inviting user:', err)\n      setError('Failed to send invitation')\n    } finally {\n      setInviting(false)\n    }\n  }\n\n  const getRoleIcon = (role: UserRole) => {\n    switch (role) {\n      case UserRole.OWNER:\n        return <Crown className=\"h-4 w-4 text-yellow-500\" />\n      case UserRole.ADMIN:\n        return <Shield className=\"h-4 w-4 text-blue-500\" />\n      case UserRole.DESIGNER:\n        return <Edit className=\"h-4 w-4 text-green-500\" />\n      default:\n        return <Users className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getRoleBadgeColor = (role: UserRole) => {\n    switch (role) {\n      case UserRole.OWNER:\n        return 'bg-yellow-100 text-yellow-800'\n      case UserRole.ADMIN:\n        return 'bg-blue-100 text-blue-800'\n      case UserRole.DESIGNER:\n        return 'bg-green-100 text-green-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (!canManageUsers) {\n    return (\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"text-center\">\n          <Shield className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Access Denied</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            You don't have permission to manage users.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center mb-4\">\n        <div className=\"flex-shrink-0\">\n          <Users className=\"h-8 w-8 text-gray-400\" />\n        </div>\n        <div className=\"ml-4 flex-1\">\n          <h3 className=\"text-lg font-medium text-gray-900\">\n            User Management\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Invite team members and manage user roles\n          </p>\n        </div>\n      </div>\n\n        {error && (\n          <div className=\"mb-4 bg-red-50 border border-red-200 rounded-md p-4\">\n            <div className=\"text-sm text-red-600\">{error}</div>\n          </div>\n        )}\n\n        {/* Invite User Section */}\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Invite Team Member</h3>\n          <div className=\"space-y-3\">\n            <div>\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">Email Address</label>\n              <input\n                type=\"email\"\n                value={inviteEmail}\n                onChange={(e) => setInviteEmail(e.target.value)}\n                placeholder=\"user@example.com\"\n                className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">Assign Role</label>\n              <select\n                value={inviteRole}\n                onChange={(e) => setInviteRole(e.target.value as UserRole)}\n                className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n              >\n                <option value={UserRole.VIEWER}>Viewer</option>\n                <option value={UserRole.DESIGNER}>Designer</option>\n                <option value={UserRole.ADMIN}>Admin</option>\n                <option value={UserRole.OWNER}>Owner</option>\n              </select>\n            </div>\n            <Button\n              onClick={inviteUser}\n              disabled={inviting || !inviteEmail.trim()}\n              className=\"w-full flex items-center justify-center space-x-2\"\n            >\n              <Mail className=\"h-4 w-4\" />\n              <span>{inviting ? 'Sending...' : 'Send Invitation'}</span>\n            </Button>\n          </div>\n          <p className=\"mt-2 text-xs text-gray-500\">\n            Invited users can sign up with Google and will be automatically assigned the selected role.\n          </p>\n        </div>\n\n        {/* Users List */}\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Team Members</h3>\n          {loading ? (\n            <div className=\"text-center py-4\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600 mx-auto\"></div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {users.map((user) => (\n                <div key={user.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    {getRoleIcon(user.role)}\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">{user.displayName}</div>\n                      <div className=\"text-sm text-gray-500\">{user.email}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getRoleBadgeColor(user.role)}`}>\n                      {user.role}\n                    </span>\n                    {user.id !== currentUser?.id && (\n                      <select\n                        value={user.role}\n                        onChange={(e) => updateUserRole(user.id, e.target.value as UserRole)}\n                        className=\"text-xs rounded border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      >\n                        <option value={UserRole.VIEWER}>Viewer</option>\n                        <option value={UserRole.DESIGNER}>Designer</option>\n                        <option value={UserRole.ADMIN}>Admin</option>\n                        <option value={UserRole.OWNER}>Owner</option>\n                      </select>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n    </div>\n  )\n}\n","import { User } from 'lucide-react'\nimport { useAuth } from '../contexts/AuthContext'\nimport UserManagement from '../components/auth/UserManagement'\nimport { UserRole } from '../types'\n\nexport default function Settings() {\n  const { user, hasRole } = useAuth()\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Settings</h1>\n        <p className=\"mt-2 text-sm text-gray-600\">\n          Manage your account settings and preferences.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Profile Section */}\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-6\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"flex-shrink-0\">\n                <User className=\"h-8 w-8 text-gray-400\" />\n              </div>\n              <div className=\"ml-4 flex-1\">\n                <h3 className=\"text-lg font-medium text-gray-900\">\n                  Profile\n                </h3>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Manage your account settings and preferences\n                </p>\n              </div>\n            </div>\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"text-lg font-medium text-gray-900\">Profile Information</h4>\n                <div className=\"mt-4 space-y-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Display Name</label>\n                    <div className=\"mt-1 p-2 bg-gray-50 rounded-md text-sm text-gray-900\">{user?.displayName}</div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                    <div className=\"mt-1 p-2 bg-gray-50 rounded-md text-sm text-gray-900\">{user?.email}</div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Role</label>\n                    <div className=\"mt-1 p-2 bg-gray-50 rounded-md text-sm text-gray-900 capitalize\">\n                      {user?.role}\n                    </div>\n                    <p className=\"mt-1 text-xs text-gray-500\">\n                      Contact an administrator to change your role.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* User Management Section - Only for admins */}\n        {hasRole(UserRole.ADMIN) && (\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <UserManagement />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":["UserManagement","className","currentUser","hasRole","useAuth","users","setUsers","useState","loading","setLoading","inviteEmail","setInviteEmail","inviteRole","setInviteRole","UserRole","inviting","setInviting","error","setError","canManageUsers","useEffect","loadUsers","usersQuery","query","collection","db","usersData","getDocs","doc","err","updateUserRole","userId","newRole","userDocRef","updateDoc","inviteUser","createUserInvitation","getRoleIcon","role","jsx","Crown","Shield","Edit","Users","getRoleBadgeColor","jsxs","e","Button","Mail","user","Settings","User"],"mappings":"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"}