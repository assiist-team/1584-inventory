import{t as u,z as d,M as g,N as f,m as _,O as R,B as y,P as I,q as h,u as v,A as p,s as P,Q as C,R as S,S as T}from"./firebase.js";import{e as q,f as w,d as m}from"./index.js";const j={async getProjects(){await q();const o=u(m,"projects"),t=d(o,g("updatedAt","desc"));return(await v(t)).docs.map(s=>{const a=w(s.data());return{id:s.id,...a}})},async getProject(o){await q();const t=_(m,"projects",o),e=await h(t);if(e.exists()){const s=w(e.data());return{id:e.id,...s}}return null},async createProject(o){const t=u(m,"projects"),e=new Date,s={...o,createdAt:e,updatedAt:e};return(await I(t,s)).id},async updateProject(o,t){const e=_(m,"projects",o);await y(e,{...t,updatedAt:new Date})},async deleteProject(o){const t=_(m,"projects",o);await R(t)},subscribeToProjects(o){const t=u(m,"projects"),e=d(t,g("updatedAt","desc"));return f(e,s=>{const a=s.docs.map(i=>{const n=w(i.data());return{id:i.id,...n}});o(a)})}},b={async getItems(o,t,e){const s=u(m,"projects",o,"items");let a=d(s);if(t!=null&&t.status&&(a=d(a,p("status","==",t.status))),t!=null&&t.category&&(a=d(a,p("category","==",t.category))),t!=null&&t.tags&&t.tags.length>0&&(a=d(a,p("tags","array-contains-any",t.tags))),t!=null&&t.priceRange&&(a=d(a,p("price",">=",t.priceRange.min),p("price","<=",t.priceRange.max))),t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();a=d(a,p("description",">=",r),p("description","<=",r+""))}a=d(a,g("last_updated","desc")),e&&(a=d(a,S(e.limit)),e.page>0&&(a=d(a,S(e.page*e.limit))));let n=(await v(a)).docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery&&n.length>0){const r=t.searchQuery.toLowerCase();n=n.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}return n},async getItem(o,t){var a,i;console.log("getItem called with:",{projectId:o,itemId:t}),await q();const e=_(m,"projects",o,"items",t);console.log("Document path:",e.path);const s=await h(e);if(s.exists()){const n=s.data();console.log("Raw Firebase data:",n),console.log("Images in Firebase:",((a=n.images)==null?void 0:a.length)||0,"images");const r={item_id:s.id,description:n.description,source:n.source,sku:n.sku,price:n.price,market_value:n.market_value,payment_method:n.payment_method,disposition:n.disposition,notes:n.notes,space:n.space,qr_key:n.qr_key,bookmark:n.bookmark,transaction_id:n.transaction_id,project_id:n.project_id,date_created:n.date_created,last_updated:n.last_updated,images:n.images||[]};return console.log("Mapped item data:",r),console.log("Mapped images:",((i=r.images)==null?void 0:i.length)||0,"images"),r}return console.log("Document does not exist at path:",e.path),console.log("itemSnap.exists():",s.exists()),console.log("Item not found"),null},async createItem(o,t){const e=u(m,"projects",o,"items"),s=new Date,a={description:t.description,source:t.source,sku:t.sku,price:t.price,market_value:t.market_value,payment_method:t.payment_method,disposition:t.disposition||"keep",notes:t.notes,space:t.space,qr_key:t.qr_key||`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:t.bookmark,transaction_id:t.transaction_id,project_id:t.project_id,date_created:s.toISOString(),last_updated:s.toISOString()},i=await I(e,a);return await j.updateProject(o,{metadata:{totalItems:await b.getItemCount(o)+1,lastActivity:s}}),i.id},async updateItem(o,t,e){var i;const s=_(m,"projects",o,"items",t),a={last_updated:new Date().toISOString()};e.market_value!==void 0&&(a.market_value=e.market_value),e.description!==void 0&&(a.description=e.description),e.source!==void 0&&(a.source=e.source),e.sku!==void 0&&(a.sku=e.sku),e.price!==void 0&&(a.price=e.price),e.payment_method!==void 0&&(a.payment_method=e.payment_method),e.disposition!==void 0&&(a.disposition=e.disposition),e.notes!==void 0&&(a.notes=e.notes),e.space!==void 0&&(a.space=e.space),e.bookmark!==void 0&&(a.bookmark=e.bookmark),e.images!==void 0&&(console.log("Updating item images:",(i=e.images)==null?void 0:i.length,"images"),a.images=e.images),console.log("Updating item in database:",t,"with updates:",Object.keys(a)),await y(s,a),console.log("Item updated successfully in database")},async addItemImage(o,t,e){const s=_(m,"projects",o,"items",t),a=await h(s);if(!a.exists())throw new Error("Item not found");const r=[...a.data().images||[],e];await y(s,{images:r,last_updated:new Date().toISOString()})},async updateItemImages(o,t,e){const s=_(m,"projects",o,"items",t);await y(s,{images:e,last_updated:new Date().toISOString()})},async removeItemImage(o,t,e){const s=_(m,"projects",o,"items",t),a=await h(s);if(!a.exists())throw new Error("Item not found");const r=(a.data().images||[]).filter(c=>c.url!==e);await y(s,{images:r,last_updated:new Date().toISOString()})},async setPrimaryImage(o,t,e){const s=_(m,"projects",o,"items",t),a=await h(s);if(!a.exists())throw new Error("Item not found");const r=(a.data().images||[]).map(c=>({...c,isPrimary:c.url===e}));await y(s,{images:r,last_updated:new Date().toISOString()})},async deleteItem(o,t){const e=_(m,"projects",o,"items",t);await R(e);const s=new Date;await j.updateProject(o,{metadata:{totalItems:Math.max(0,await b.getItemCount(o)-1),lastActivity:s}})},async getItemCount(o){const t=u(m,"projects",o,"items");return(await T(t)).data().count},subscribeToItems(o,t,e){const s=u(m,"projects",o,"items");let a=d(s,g("last_updated","desc"));return e!=null&&e.status&&(a=d(a,p("disposition","==",e.status))),e!=null&&e.category&&(a=d(a,p("source","==",e.category))),f(a,i=>{console.log("Real-time items snapshot received:",i.docs.length,"documents");let n=i.docs.map(r=>{const c=r.data();return{item_id:r.id,description:c.description,source:c.source,sku:c.sku,price:c.price,market_value:c.market_value,payment_method:c.payment_method,disposition:c.disposition,notes:c.notes,space:c.space,qr_key:c.qr_key,bookmark:c.bookmark,transaction_id:c.transaction_id,project_id:c.project_id,date_created:c.date_created,last_updated:c.last_updated,images:c.images||[]}});if(e!=null&&e.searchQuery){const r=e.searchQuery.toLowerCase();n=n.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}console.log("Real-time items callback with",n.length,"items"),t(n)})},async searchItems(o,t){if(t.length<2)return[];const e=u(m,"projects",o,"items"),s=d(e,p("description",">=",t.toLowerCase()),p("description","<=",t.toLowerCase()+""),g("description"),S(20));return(await v(s)).docs.map(i=>{const n=i.data();return{item_id:i.id,description:n.description,source:n.source,sku:n.sku,price:n.price,market_value:n.market_value,payment_method:n.payment_method,disposition:n.disposition,notes:n.notes,space:n.space,qr_key:n.qr_key,bookmark:n.bookmark,transaction_id:n.transaction_id,project_id:n.project_id,date_created:n.date_created,last_updated:n.last_updated}})},async batchUpdateItems(o,t){const e=C(m);t.forEach(({id:s,updates:a})=>{const i=_(m,"projects",o,"items",s),n={last_updated:new Date().toISOString()};a.market_value!==void 0&&(n.market_value=a.market_value),a.description!==void 0&&(n.description=a.description),a.source!==void 0&&(n.source=a.source),a.sku!==void 0&&(n.sku=a.sku),a.price!==void 0&&(n.price=a.price),a.payment_method!==void 0&&(n.payment_method=a.payment_method),a.disposition!==void 0&&(n.disposition=a.disposition),a.notes!==void 0&&(n.notes=a.notes),a.space!==void 0&&(n.space=a.space),a.bookmark!==void 0&&(n.bookmark=a.bookmark),e.update(i,n)}),await e.commit()},async createTransactionItems(o,t,e,s,a){const i=C(m),n=[],r=new Date;a.forEach(l=>{const k=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`;n.push(k);const A=_(m,"projects",o,"items",k),D=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,L={item_id:k,description:l.description,source:s,sku:l.sku||"",price:l.price,market_value:l.market_value||"",payment_method:"Client Card",disposition:"keep",notes:l.notes||"",qr_key:D,bookmark:!1,transaction_id:t,project_id:o,date_created:e,last_updated:r.toISOString(),images:[]};i.set(A,L)}),await i.commit();const c=await b.getItemCount(o);return await j.updateProject(o,{metadata:{totalItems:c,lastActivity:r}}),n},async getTransactionItems(o,t){const e=u(m,"projects",o,"items"),s=d(e,p("transaction_id","==",t),g("date_created","asc"));return(await v(s)).docs.map(i=>i.id)},async addItemToTransaction(o,t,e,s,a){const i=new Date,n=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,r=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,c={item_id:n,description:a.description,source:s,sku:a.sku||"",price:a.price,market_value:a.market_value||"",payment_method:"Client Card",disposition:"keep",notes:a.notes||"",space:"",qr_key:r,bookmark:!1,transaction_id:t,project_id:o,date_created:e,last_updated:i.toISOString(),images:[]},l=_(m,"projects",o,"items",n);return await P(l,c),await j.updateProject(o,{metadata:{totalItems:await b.getItemCount(o)+1,lastActivity:i}}),n}},x={async getTransactions(o){const t=u(m,"projects",o,"transactions"),e=d(t,g("created_at","desc"));return(await v(e)).docs.map(a=>{const i=w(a.data()),n={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:a.id,...n}})},async getTransaction(o,t){const e=_(m,"projects",o,"transactions",t),s=await h(e);if(s.exists()){const a=w(s.data());console.log("inventoryService - raw data:",a),console.log("inventoryService - transaction_images:",a.transaction_images),console.log("inventoryService - transaction_images type:",typeof a.transaction_images);const i={...a,transaction_images:Array.isArray(a.transaction_images)?a.transaction_images:[],receipt_images:Array.isArray(a.receipt_images)?a.receipt_images:[],other_images:Array.isArray(a.other_images)?a.other_images:[]};return console.log("inventoryService - processed transactionData:",i),{transaction_id:s.id,...i}}return null},async createTransaction(o,t,e){try{const s=u(m,"projects",o,"transactions"),i={...t,created_at:new Date().toISOString(),status:t.status||"completed",reimbursement_type:t.reimbursement_type||null,trigger_event:t.trigger_event||null};console.log("Creating transaction:",i),console.log("Transaction items:",e);const r=(await I(s,i)).id;if(console.log("Transaction created successfully:",r),e&&e.length>0){console.log("Creating items for transaction:",r);const c=await b.createTransactionItems(o,r,t.transaction_date,t.source,e);console.log("Created items:",c)}return r}catch(s){throw console.error("Error creating transaction:",s),s}},async updateTransaction(o,t,e){const s=_(m,"projects",o,"transactions",t);await y(s,e)},async deleteTransaction(o,t){const e=_(m,"projects",o,"transactions",t);await R(e)},subscribeToTransactions(o,t){const e=u(m,"projects",o,"transactions"),s=d(e,g("created_at","desc"));return f(s,a=>{const i=a.docs.map(n=>{const r=w(n.data()),c={...r,transaction_images:Array.isArray(r.transaction_images)?r.transaction_images:[],receipt_images:Array.isArray(r.receipt_images)?r.receipt_images:[],other_images:Array.isArray(r.other_images)?r.other_images:[]};return{transaction_id:n.id,...c}});t(i)})},subscribeToTransaction(o,t,e){const s=_(m,"projects",o,"transactions",t);return f(s,a=>{if(a.exists()){const i=w(a.data());console.log("inventoryService - real-time raw data:",i),console.log("inventoryService - real-time transaction_images:",i.transaction_images);const n={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};console.log("inventoryService - real-time processed transactionData:",n);const r={transaction_id:a.id,...n};e(r)}else e(null)})},async getPendingTransactions(o){const t=u(m,"projects",o,"transactions"),e=d(t,p("status","==","pending"),g("created_at","desc"));return(await v(e)).docs.map(a=>{const i=w(a.data()),n={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:a.id,...n}})},async updateTransactionStatus(o,t,e,s){const a=_(m,"projects",o,"transactions",t),i={status:e,...s};e==="completed"&&!(s!=null&&s.transaction_date)&&(i.transaction_date=new Date().toISOString()),await y(a,i)}},Q={async getBusinessInventoryItems(o,t){const e=u(m,"business_inventory");let s=d(e);o!=null&&o.status&&(s=d(s,p("inventory_status","==",o.status))),s=d(s,g("last_updated","desc")),t&&(s=d(s,S(t.limit)),t.page>0&&(s=d(s,S(t.page*t.limit))));let i=(await v(s)).docs.map(n=>({item_id:n.id,...n.data()}));if(o!=null&&o.searchQuery){const n=o.searchQuery.toLowerCase();i=i.filter(r=>{var c;return r.description.toLowerCase().includes(n)||r.source.toLowerCase().includes(n)||r.sku.toLowerCase().includes(n)||((c=r.business_inventory_location)==null?void 0:c.toLowerCase().includes(n))})}return i},async getBusinessInventoryItem(o){const t=_(m,"business_inventory",o),e=await h(t);return e.exists()?{item_id:e.id,...e.data()}:null},async createBusinessInventoryItem(o){const t=u(m,"business_inventory"),e=new Date,s={...o,inventory_status:o.inventory_status||"available",date_created:e.toISOString(),last_updated:e.toISOString()};return(await I(t,s)).id},async updateBusinessInventoryItem(o,t){const e=_(m,"business_inventory",o),s={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(s.inventory_status=t.inventory_status),t.current_project_id!==void 0&&(s.current_project_id=t.current_project_id),t.business_inventory_location!==void 0&&(s.business_inventory_location=t.business_inventory_location),t.pending_transaction_id!==void 0&&(s.pending_transaction_id=t.pending_transaction_id),t.description!==void 0&&(s.description=t.description),t.source!==void 0&&(s.source=t.source),t.sku!==void 0&&(s.sku=t.sku),t.price!==void 0&&(s.price=t.price),t.market_value!==void 0&&(s.market_value=t.market_value),t.payment_method!==void 0&&(s.payment_method=t.payment_method),t.disposition!==void 0&&(s.disposition=t.disposition),t.notes!==void 0&&(s.notes=t.notes),t.space!==void 0&&(s.space=t.space),t.bookmark!==void 0&&(s.bookmark=t.bookmark),t.images!==void 0&&(s.images=t.images),await y(e,s)},async deleteBusinessInventoryItem(o){const t=_(m,"business_inventory",o);await R(t)},async getBusinessInventoryStats(){const o=u(m,"business_inventory"),t=await T(o),e=d(o),s=await v(e);let a=0,i=0,n=0;return s.docs.forEach(r=>{switch(r.data().inventory_status){case"available":a++;break;case"pending":i++;break;case"sold":n++;break}}),{totalItems:t.data().count,availableItems:a,pendingItems:i,soldItems:n}},subscribeToBusinessInventory(o,t){const e=u(m,"business_inventory");let s=d(e,g("last_updated","desc"));return t!=null&&t.status&&(s=d(s,p("inventory_status","==",t.status))),f(s,a=>{let i=a.docs.map(n=>({item_id:n.id,...n.data()}));if(t!=null&&t.searchQuery){const n=t.searchQuery.toLowerCase();i=i.filter(r=>{var c;return r.description.toLowerCase().includes(n)||r.source.toLowerCase().includes(n)||r.sku.toLowerCase().includes(n)||((c=r.business_inventory_location)==null?void 0:c.toLowerCase().includes(n))})}o(i)})},async allocateItemToProject(o,t,e,s){const a={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:e,budget_category:"Furnishings",notes:s||"Item allocated from business inventory",created_by:"system",status:"pending",reimbursement_type:"Client owes us",trigger_event:"Inventory allocation"},i=u(m,"projects",t,"transactions"),n=await I(i,a);return await this.updateBusinessInventoryItem(o,{inventory_status:"pending",current_project_id:t,pending_transaction_id:n.id}),n.id},async returnItemFromProject(o,t,e){const s=_(m,"projects",e,"transactions",t);await y(s,{status:"cancelled"}),await this.updateBusinessInventoryItem(o,{inventory_status:"available",current_project_id:void 0,pending_transaction_id:void 0})},async markItemAsSold(o,t,e,s){const a=_(m,"projects",e,"transactions",t);await y(a,{status:"completed",transaction_date:new Date().toISOString(),payment_method:s}),await this.updateBusinessInventoryItem(o,{inventory_status:"sold",current_project_id:void 0,pending_transaction_id:void 0})},async moveItemToBusinessInventory(o,t,e,s){const a=u(m,"projects",t,"items"),i=d(a,p("item_id","==",o)),n=await v(i);if(n.empty)throw new Error("Item not found in project");const r=n.docs[0].data(),c={project_id:t,transaction_date:new Date().toISOString(),source:"Client Purchase",transaction_type:"Reimbursement",payment_method:"Pending",amount:e,budget_category:"Furnishings",notes:s||"Client-purchased item moved to business inventory",created_by:"system",status:"pending",reimbursement_type:"We owe client",trigger_event:"Purchase from client"},l=u(m,"projects",t,"transactions"),k=await I(l,c),A={description:r.description,source:r.source,sku:r.sku,price:r.price,market_value:r.market_value,payment_method:r.payment_method,disposition:r.disposition||"keep",notes:r.notes,space:r.space,qr_key:r.qr_key,bookmark:r.bookmark||!1,inventory_status:"available",business_inventory_location:"Warehouse - Client Purchase",transaction_id:k.id,images:r.images||[]};return await this.createBusinessInventoryItem(A),await R(n.docs[0].ref),k.id}};export{Q as b,b as i,j as p,x as t};
//# sourceMappingURL=inventoryService.js.map
