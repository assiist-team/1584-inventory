import{t as g,z as m,N as b,O as q,m as y,P as B,B as C,Q as O,q as D,u as I,A as p,D as Q,s as A,R as P,S as $,U as x}from"./firebase.js";import{e as f,f as j,d}from"./index.js";import"./vendor.js";import"./router.js";import"./ui.js";const E={async getProjects(){await f();const s=g(d,"projects"),t=m(s,b("updatedAt","desc"));return(await I(t)).docs.map(e=>{const a=j(e.data());return{id:e.id,...a}})},async getProject(s){await f();const t=y(d,"projects",s),n=await D(t);if(n.exists()){const e=j(n.data());return{id:n.id,...e}}return null},async createProject(s){const t=g(d,"projects"),n=new Date,e={...s,createdAt:n,updatedAt:n};return(await O(t,e)).id},async updateProject(s,t){const n=y(d,"projects",s);await C(n,{...t,updatedAt:new Date})},async deleteProject(s){const t=y(d,"projects",s);await B(t)},subscribeToProjects(s){const t=g(d,"projects"),n=m(t,b("updatedAt","desc"));return q(n,e=>{const a=e.docs.map(o=>{const r=j(o.data());return{id:o.id,...r}});s(a)})}},K={async getTransactions(s){const t=g(d,"transactions"),n=m(t,p("project_id","==",s),b("created_at","desc"));return(await I(n)).docs.map(a=>{const o=j(a.data()),r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};return{transaction_id:a.id,...r}})},async getTransaction(s,t){const n=y(d,"transactions",t),e=await D(n);if(e.exists()){const a=j(e.data());console.log("inventoryService - raw data:",a),console.log("inventoryService - transaction_images:",a.transaction_images),console.log("inventoryService - transaction_images type:",typeof a.transaction_images);const o={...a,transaction_images:Array.isArray(a.transaction_images)?a.transaction_images:[],receipt_images:Array.isArray(a.receipt_images)?a.receipt_images:[],other_images:Array.isArray(a.other_images)?a.other_images:[]};return console.log("inventoryService - processed transactionData:",o),{transaction_id:e.id,...o}}return null},async getTransactionById(s){const t=y(d,"transactions",s),n=await D(t);if(n.exists()){const e=j(n.data()),a={...e,transaction_images:Array.isArray(e.transaction_images)?e.transaction_images:[],receipt_images:Array.isArray(e.receipt_images)?e.receipt_images:[],other_images:Array.isArray(e.other_images)?e.other_images:[]};return{transaction:{transaction_id:n.id,...a},projectId:e.project_id||null}}return{transaction:null,projectId:null}},async createTransaction(s,t,n){try{const e=g(d,"transactions"),o={...t,project_id:s,created_at:new Date().toISOString(),status:t.status||"completed",reimbursement_type:t.reimbursement_type||null,trigger_event:t.trigger_event||null};console.log("Creating transaction:",o),console.log("Transaction items:",n);const i=(await O(e,o)).id;if(console.log("Transaction created successfully:",i),n&&n.length>0){console.log("Creating items for transaction:",i);const c=await T.createTransactionItems(s||"",i,t.transaction_date,t.source,n);console.log("Created items:",c)}return i}catch(e){throw console.error("Error creating transaction:",e),e}},async updateTransaction(s,t,n){const e=y(d,"transactions",t),a={...n};a.status==="completed"&&a.reimbursement_type!==void 0&&(a.reimbursement_type=x()),a.reimbursement_type===""&&(a.reimbursement_type=x()),a.reimbursement_type&&a.status==="completed"&&(a.status="pending"),await C(e,a)},async deleteTransaction(s,t){const n=y(d,"transactions",t);await B(n)},subscribeToTransactions(s,t){const n=g(d,"transactions"),e=m(n,p("project_id","==",s),b("created_at","desc"));return q(e,a=>{const o=a.docs.map(r=>{const i=j(r.data()),c={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:r.id,...c}});t(o)})},subscribeToTransaction(s,t,n){const e=y(d,"transactions",t);return q(e,a=>{if(a.exists()){const o=j(a.data());console.log("inventoryService - real-time raw data:",o),console.log("inventoryService - real-time transaction_images:",o.transaction_images);const r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};console.log("inventoryService - real-time processed transactionData:",r);const i={transaction_id:a.id,...r};n(i)}else n(null)})},async getPendingTransactions(s){const t=g(d,"projects",s,"transactions"),n=m(t,p("status","==","pending"),b("created_at","desc"));return(await I(n)).docs.map(a=>{const o=j(a.data()),r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};return{transaction_id:a.id,...r}})},async updateTransactionStatus(s,t,n,e){const a=y(d,"projects",s,"transactions",t),o={status:n,...e};n==="completed"&&!(e!=null&&e.transaction_date)&&(o.transaction_date=new Date().toISOString()),await C(a,o)},async getInventoryRelatedTransactions(){const s=g(d,"transactions"),t=m(s,p("reimbursement_type","in",["Client Owes","We Owe"]),b("created_at","desc"));return(await I(t)).docs.map(e=>{const a=j(e.data()),o={...a,transaction_images:Array.isArray(a.transaction_images)?a.transaction_images:[],receipt_images:Array.isArray(a.receipt_images)?a.receipt_images:[],other_images:Array.isArray(a.other_images)?a.other_images:[]};return{transaction_id:e.id,...o}})},async getBusinessInventoryTransactions(){const s=g(d,"transactions"),t=m(s,p("project_id","==",null),b("created_at","desc"));return(await I(t)).docs.map(e=>{const a=j(e.data()),o={...a,transaction_images:Array.isArray(a.transaction_images)?a.transaction_images:[],receipt_images:Array.isArray(a.receipt_images)?a.receipt_images:[],other_images:Array.isArray(a.other_images)?a.other_images:[]};return{transaction_id:e.id,...o}})}},T={async getItemsByProject(s,t,n){await f();const e=g(d,"items");let a=m(e,p("project_id","==",s));if(t!=null&&t.status&&(a=m(a,p("disposition","==",t.status))),t!=null&&t.category&&(a=m(a,p("source","==",t.category))),t!=null&&t.tags&&t.tags.length>0&&(a=m(a,p("tags","array-contains-any",t.tags))),t!=null&&t.priceRange&&(a=m(a,p("project_price",">=",t.priceRange.min),p("project_price","<=",t.priceRange.max))),t!=null&&t.searchQuery){const i=t.searchQuery.toLowerCase();a=m(a,p("description",">=",i),p("description","<=",i+""))}a=m(a,b("last_updated","desc")),n&&(a=m(a,P(n.limit)),n.page>0&&(a=m(a,P(n.page*n.limit))));let r=(await I(a)).docs.map(i=>({item_id:i.id,...i.data()}));if(t!=null&&t.searchQuery&&r.length>0){const i=t.searchQuery.toLowerCase();r=r.filter(c=>c.description.toLowerCase().includes(i)||c.source.toLowerCase().includes(i)||c.sku.toLowerCase().includes(i)||c.payment_method.toLowerCase().includes(i))}return r},subscribeToItemsByProject(s,t,n){const e=g(d,"items");let a=m(e,p("project_id","==",s),b("last_updated","desc"));if(n!=null&&n.status&&(a=m(a,p("disposition","==",n.status))),n!=null&&n.category&&(a=m(a,p("source","==",n.category))),n!=null&&n.searchQuery){const o=n.searchQuery.toLowerCase();a=m(a,p("description",">=",o),p("description","<=",o+""))}return q(a,o=>{let r=o.docs.map(i=>({item_id:i.id,...i.data()}));if(n!=null&&n.searchQuery){const i=n.searchQuery.toLowerCase();r=r.filter(c=>c.description.toLowerCase().includes(i)||c.source.toLowerCase().includes(i)||c.sku.toLowerCase().includes(i)||c.payment_method.toLowerCase().includes(i))}t(r)})},async getBusinessInventoryItems(s,t){await f();const n=g(d,"items");let e=m(n,p("project_id","==",null));s!=null&&s.status&&(e=m(e,p("inventory_status","==",s.status))),e=m(e,b("last_updated","desc")),t&&(e=m(e,P(t.limit)),t.page>0&&(e=m(e,P(t.page*t.limit))));let o=(await I(e)).docs.map(r=>({item_id:r.id,...r.data()}));if(s!=null&&s.searchQuery){const r=s.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}return o},subscribeToBusinessInventory(s,t){const n=g(d,"items");let e=m(n,p("project_id","==",null),b("last_updated","desc"));return t!=null&&t.status&&(e=m(e,p("inventory_status","==",t.status))),q(e,a=>{let o=a.docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}s(o)})},async createItem(s){await f();const t=g(d,"items"),n=new Date,e={...s,inventory_status:s.inventory_status||"available",date_created:n.toISOString(),last_updated:n.toISOString()};return(await O(t,e)).id},async updateItem(s,t){await f();const n=y(d,"items",s),e={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(e.inventory_status=t.inventory_status),t.project_id!==void 0&&(e.project_id=t.project_id),t.business_inventory_location!==void 0&&(e.business_inventory_location=t.business_inventory_location),t.transaction_id!==void 0&&(e.transaction_id=t.transaction_id),t.purchase_price!==void 0&&(e.purchase_price=t.purchase_price),t.project_price!==void 0&&(e.project_price=t.project_price),t.description!==void 0&&(e.description=t.description),t.source!==void 0&&(e.source=t.source),t.sku!==void 0&&(e.sku=t.sku),t.market_value!==void 0&&(e.market_value=t.market_value),t.payment_method!==void 0&&(e.payment_method=t.payment_method),t.disposition!==void 0&&(e.disposition=t.disposition),t.notes!==void 0&&(e.notes=t.notes),t.space!==void 0&&(e.space=t.space),t.bookmark!==void 0&&(e.bookmark=t.bookmark),t.images!==void 0&&(e.images=t.images),await C(n,e)},async deleteItem(s){await f();const t=y(d,"items",s);await B(t)},async getItemsForTransaction(s,t){await f();const n=g(d,"items"),e=m(n,p("transaction_id","==",t),b("date_created","asc"));return(await I(e)).docs.map(o=>({item_id:o.id,...o.data()}))},async allocateItemToProject(s,t,n,e){await f();const a=await this.getItemById(s);if(!a)throw new Error("Business inventory item not found");const o=n||a.project_price||a.market_value||"0.00",r=`INV_PURCHASE_${t}`,i=y(d,"transactions",r),c=await D(i);let u;if(c.exists()){console.log("📋 Existing INV_PURCHASE transaction found, updating with new item");const _=c.data(),w=_.item_ids||[];u=[...new Set([...w,s])];const v=g(d,"items"),k=m(v,p("__name__","in",u)),h=(await I(k)).docs.map(S=>S.data().project_price||S.data().market_value||"0.00").reduce((S,L)=>S+parseFloat(L||"0"),0).toFixed(2),l={..._,item_ids:u,amount:h,notes:e||_.notes||"Items purchased from business inventory",last_updated:new Date().toISOString()};await A(i,l,{merge:!0}),console.log("🔄 Updated INV_PURCHASE transaction with",u.length,"items, amount:",h)}else{u=[s];const _={project_id:t,project_name:null,transaction_date:new Date().toISOString(),source:"Inventory",transaction_type:"Purchase",payment_method:"Pending",amount:o,budget_category:"Furnishings",notes:e||"",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation",item_ids:u,created_by:"system",created_at:new Date().toISOString(),last_updated:new Date().toISOString()};await A(i,_,{merge:!0}),console.log("🆕 Creating new INV_PURCHASE transaction with amount:",o)}return await this.updateItem(s,{project_id:t,inventory_status:"pending",transaction_id:r,disposition:"keep"}),r},async batchAllocateItemsToProject(s,t,n={}){await f();const e=g(d,"items"),a=m(e,p("__name__","in",s),p("project_id","==",null)),o=await I(a);if(o.empty)throw new Error("No business inventory items found");const r=`INV_PURCHASE_${t}`,i=y(d,"transactions",r),c=await D(i);let u;if(c.exists()){console.log("📋 Existing INV_PURCHASE transaction found, updating with new items");const w=c.data(),v=w.item_ids||[];u=[...new Set([...v,...s])];const k=m(e,p("__name__","in",u)),R=await I(k),h=n.amount||R.docs.map(S=>S.data().project_price||S.data().market_value||"0.00").reduce((S,L)=>S+parseFloat(L||"0"),0).toFixed(2),l={...w,item_ids:u,amount:h,notes:n.notes||w.notes||"",last_updated:new Date().toISOString()};await A(i,l,{merge:!0}),console.log("🔄 Updated INV_PURCHASE transaction with",u.length,"items, amount:",h)}else{u=s;const w=n.amount||o.docs.map(k=>k.data().project_price||k.data().market_value||"0.00").reduce((k,R)=>k+parseFloat(R||"0"),0).toFixed(2),v={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory",transaction_type:"Purchase",payment_method:"Pending",amount:w,budget_category:"Furnishings",notes:n.notes||"",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation",item_ids:u,created_by:"system",last_updated:new Date().toISOString()};console.log("🆕 Creating new INV_PURCHASE transaction with amount:",w),await A(i,v,{merge:!0})}const _=Q(d);return o.docs.forEach(w=>{const v=w.id;_.update(y(d,"items",v),{project_id:t,inventory_status:"pending",transaction_id:r,disposition:"keep",last_updated:new Date().toISOString()})}),await _.commit(),r},async returnItemFromProject(s,t,n,e){await f();const a=await this.getItemById(s);if(!a)throw new Error("Item not found");let o="Other";try{const _=await E.getProject(t);o=(_==null?void 0:_.name)||"Other"}catch(_){console.warn("Could not fetch project name for transaction source:",_)}const r=`INV_SALE_${t}`,i=n||a.project_price||a.market_value||"0.00",c=y(d,"transactions",r),u={project_id:t,project_name:null,transaction_date:new Date().toISOString(),source:o,transaction_type:"To Inventory",payment_method:"Pending",amount:i,budget_category:"Furnishings",notes:e||"Transaction for items purchased from project and moved to business inventory",status:"pending",reimbursement_type:"We Owe",trigger_event:"Inventory return",item_ids:[s],created_by:"system",created_at:new Date().toISOString(),last_updated:new Date().toISOString()};return await A(c,u,{merge:!0}),await this.updateItem(s,{project_id:null,inventory_status:"available",transaction_id:r}),r},async completePendingTransaction(s,t,n){await f();const e=s==="sale"?`INV_SALE_${t}`:`INV_PURCHASE_${t}`,a=y(d,"transactions",e),o=await D(a);if(!o.exists())throw new Error("Transaction not found");const i=o.data().item_ids||[];await C(a,{status:"completed",payment_method:n,transaction_date:new Date().toISOString(),last_updated:new Date().toISOString()});const c=Q(d);for(const u of i){const _=y(d,"items",u);s==="sale"?c.update(_,{transaction_id:null,inventory_status:"sold",last_updated:new Date().toISOString()}):c.update(_,{project_id:null,transaction_id:null,inventory_status:"available",last_updated:new Date().toISOString()})}await c.commit()},async getItemById(s){await f();const t=y(d,"items",s),n=await D(t);return n.exists()?{item_id:n.id,...n.data()}:null},async duplicateItem(s,t){const n=await this.getItemById(t);if(!n)throw new Error("Original item not found");const e=new Date,a=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,o=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,r={item_id:a,description:n.description,source:n.source,sku:n.sku||"",purchase_price:n.purchase_price||"",project_price:n.project_price||"",market_value:n.market_value||"",payment_method:n.payment_method,disposition:"keep",notes:n.notes||"",space:n.space||"",qr_key:o,bookmark:!1,transaction_id:n.transaction_id,project_id:s,date_created:e.toISOString(),last_updated:e.toISOString(),images:n.images||[]};Object.keys(r).forEach(c=>{r[c]===void 0&&delete r[c]});const i=y(d,"items",a);return await A(i,r),a},async createTransactionItems(s,t,n,e,a){const o=Q(d),r=[],i=new Date;return a.forEach(c=>{const u=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`;r.push(u);const _=y(d,"items",u),w=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,v={item_id:u,description:c.description,source:e,sku:c.sku||"",purchase_price:c.purchase_price,project_price:c.project_price,market_value:c.market_value||"",payment_method:"Client Card",disposition:"keep",notes:c.notes||"",qr_key:w,bookmark:!1,transaction_id:t,project_id:s,date_created:n,last_updated:i.toISOString(),images:[]};o.set(_,v)}),await o.commit(),r}},z={async getBusinessInventoryItems(s,t){const n=g(d,"business_inventory");let e=m(n);s!=null&&s.status&&(e=m(e,p("inventory_status","==",s.status))),e=m(e,b("last_updated","desc")),t&&(e=m(e,P(t.limit)),t.page>0&&(e=m(e,P(t.page*t.limit))));let o=(await I(e)).docs.map(r=>({item_id:r.id,...r.data()}));if(s!=null&&s.searchQuery){const r=s.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}return o},async getBusinessInventoryItem(s){const t=y(d,"business_inventory",s),n=await D(t);return n.exists()?{item_id:n.id,...n.data()}:null},async duplicateBusinessInventoryItem(s){const t=await this.getBusinessInventoryItem(s);if(!t)throw new Error("Original business inventory item not found");const n=new Date,e=`BI-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,a=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,o={item_id:e,description:t.description,source:t.source,sku:t.sku||"",purchase_price:t.purchase_price||"",project_price:t.project_price||"",market_value:t.market_value||"",payment_method:t.payment_method,disposition:"keep",notes:t.notes||"",space:t.space||"",qr_key:a,bookmark:!1,inventory_status:"available",business_inventory_location:t.business_inventory_location||"",transaction_id:t.transaction_id,date_created:n.toISOString(),last_updated:n.toISOString(),images:t.images||[]};Object.keys(o).forEach(i=>{o[i]===void 0&&delete o[i]});const r=y(d,"business_inventory",e);return await A(r,o),e},async createBusinessInventoryItem(s){const t=g(d,"business_inventory"),n=new Date,e={...s,inventory_status:s.inventory_status||"available",date_created:n.toISOString(),last_updated:n.toISOString()};return(await O(t,e)).id},async updateBusinessInventoryItem(s,t){const n=y(d,"business_inventory",s),e={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(e.inventory_status=t.inventory_status),t.business_inventory_location!==void 0&&(e.business_inventory_location=t.business_inventory_location),t.purchase_price!==void 0&&(e.purchase_price=t.purchase_price),t.project_price!==void 0&&(e.project_price=t.project_price),t.description!==void 0&&(e.description=t.description),t.source!==void 0&&(e.source=t.source),t.sku!==void 0&&(e.sku=t.sku),t.market_value!==void 0&&(e.market_value=t.market_value),t.payment_method!==void 0&&(e.payment_method=t.payment_method),t.disposition!==void 0&&(e.disposition=t.disposition),t.notes!==void 0&&(e.notes=t.notes),t.space!==void 0&&(e.space=t.space),t.bookmark!==void 0&&(e.bookmark=t.bookmark),t.images!==void 0&&(e.images=t.images),await C(n,e)},async deleteBusinessInventoryItem(s){const t=y(d,"business_inventory",s);await B(t)},async getBusinessInventoryStats(){const s=g(d,"business_inventory"),t=await $(s),n=m(s),e=await I(n);let a=0,o=0,r=0;return e.docs.forEach(i=>{switch(i.data().inventory_status){case"available":a++;break;case"pending":o++;break;case"sold":r++;break}}),{totalItems:t.data().count,availableItems:a,pendingItems:o,soldItems:r}},subscribeToBusinessInventory(s,t){const n=g(d,"business_inventory");let e=m(n,b("last_updated","desc"));return t!=null&&t.status&&(e=m(e,p("inventory_status","==",t.status))),q(e,a=>{let o=a.docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}s(o)})},async allocateItemToProject(s,t,n,e){const a=await this.getBusinessInventoryItem(s);if(!a)throw new Error("Business inventory item not found");const o=n||a.project_price||a.market_value||"0.00";let r="Project";try{const _=await E.getProject(t);r=(_==null?void 0:_.name)||"Project"}catch(_){console.warn("Could not fetch project name for transaction notes:",_)}const i={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory",transaction_type:"Purchase",payment_method:"Pending",amount:o,budget_category:"Furnishings",notes:e||`${r} inventory purchase`,created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},c=g(d,"projects",t,"transactions"),u=await O(c,i);return await this.updateBusinessInventoryItem(s,{inventory_status:"pending",transaction_id:u.id}),u.id},async batchAllocateItemsToProject(s,t,n={}){const e=Q(d),a=[],o=new Date,r=g(d,"business_inventory"),i=m(r,p("__name__","in",s)),c=await I(i);if(c.empty)throw new Error("No business inventory items found");let u="Project";try{const h=await E.getProject(t);u=(h==null?void 0:h.name)||"Project"}catch(h){console.warn("Could not fetch project name for transaction notes:",h)}const _={project_id:t,transaction_date:o.toISOString(),source:"Inventory",transaction_type:"Purchase",payment_method:"Pending",amount:n.amount||"0.00",budget_category:"Furnishings",notes:n.notes||`${u} inventory purchase`,created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},w=g(d,"projects",t,"transactions"),v=y(w);e.set(v,_),a.push(v.id),c.docs.forEach(h=>{const l=h.data(),S=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,L=y(d,"projects",t,"items",S),F={item_id:S,description:l.description,source:l.source,sku:l.sku,project_price:l.project_price,market_value:l.market_value||"",payment_method:"1584",disposition:"keep",notes:l.notes||"",space:n.space||"",qr_key:`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:!1,transaction_id:v.id,project_id:t,date_created:l.date_created,last_updated:o.toISOString(),images:l.images||[]};e.set(L,F)}),s.forEach(h=>{const l=y(d,"business_inventory",h);e.update(l,{inventory_status:"sold",transaction_id:v.id,last_updated:o.toISOString()})}),await e.commit();const R=(await T.getItemsByProject(t)).length;return await E.updateProject(t,{metadata:{totalItems:R,lastActivity:o}}),a},async returnItemFromProject(s,t,n){const e=y(d,"projects",n,"transactions",t);await C(e,{status:"cancelled"}),await this.updateBusinessInventoryItem(s,{inventory_status:"available",transaction_id:void 0})},async markItemAsSold(s,t,n,e){const a=y(d,"projects",n,"transactions",t);await C(a,{status:"completed",transaction_date:new Date().toISOString(),payment_method:e}),await this.updateBusinessInventoryItem(s,{inventory_status:"sold",transaction_id:void 0})},async moveItemToBusinessInventory(s,t,n,e){const a=g(d,"projects",t,"items"),o=m(a,p("item_id","==",s)),r=await I(o);if(r.empty)throw new Error("Item not found in project");const i=r.docs[0].data(),c={project_id:t,transaction_date:new Date().toISOString(),source:"Client Purchase",transaction_type:"Purchase",payment_method:"Pending",amount:n,budget_category:"Furnishings",notes:e||"Client-purchased item moved to business inventory",created_by:"system",status:"pending",reimbursement_type:"We Owe",trigger_event:"Purchase from client"},u=g(d,"projects",t,"transactions"),_=await O(u,c),w={description:i.description,source:i.source,sku:i.sku,price:i.price,market_value:i.market_value,payment_method:i.payment_method,disposition:i.disposition||"keep",notes:i.notes,space:i.space,qr_key:i.qr_key,bookmark:i.bookmark||!1,inventory_status:"available",business_inventory_location:"Warehouse - Client Purchase",transaction_id:_.id,images:i.images||[]};return await this.createBusinessInventoryItem(w),await B(r.docs[0].ref),_.id}},N={async handleInventoryDesignation(s,t,n){if(console.log("🔄 handleInventoryDesignation called:",{itemId:s,projectId:t,disposition:n}),n!=="inventory"){console.log("⏭️ Skipping - disposition is not inventory:",n);return}try{console.log("🔍 Getting item details for:",s);const e=await T.getItemById(s);if(!e)throw new Error("Item not found");console.log("✅ Item found:",e.item_id,"disposition:",e.disposition,"project_id:",e.project_id),console.log("🏦 Creating/updating We Owe transaction for inventory designation");const a=await this.ensurePurchaseTransaction(e,t);console.log("📦 Moving item to business inventory..."),await T.updateItem(e.item_id,{project_id:null,inventory_status:"available",transaction_id:a,last_updated:new Date().toISOString()}),console.log("✅ Item moved to business inventory successfully"),console.log("✅ Deallocation completed successfully")}catch(e){throw console.error("❌ Error handling inventory designation:",e),e}},async ensurePurchaseTransaction(s,t,n){console.log("🏦 Creating/updating sale transaction for item:",s.item_id);let e="Other";try{const c=await E.getProject(t);e=(c==null?void 0:c.name)||"Other"}catch(c){console.warn("Could not fetch project name for transaction source:",c)}const a=`INV_SALE_${t}`;console.log("🔑 Canonical transaction ID:",a);const o=y(d,"transactions",a),r=await D(o),i={project_id:t,project_name:null,transaction_date:new Date().toISOString(),source:e,transaction_type:"To Inventory",payment_method:"Pending",budget_category:"Furnishings",notes:n||"Transaction for items purchased from project and moved to business inventory",status:"pending",reimbursement_type:"We Owe",trigger_event:"Inventory return",item_ids:[s.item_id],created_by:"system",created_at:new Date().toISOString(),last_updated:new Date().toISOString()};if(r.exists()){console.log("📋 Existing INV_SALE transaction found, updating with new item");const c=r.data(),u=c.item_ids||[],_=[...new Set([...u,s.item_id])],w=g(d,"items"),v=m(w,p("__name__","in",_)),R=(await I(v)).docs.map(l=>l.data().project_price||l.data().market_value||"0.00").reduce((l,S)=>l+parseFloat(S||"0"),0).toFixed(2),h={...c,item_ids:_,amount:R,notes:"Transaction for items purchased from project and moved to business inventory",last_updated:new Date().toISOString()};await A(o,h,{merge:!0}),console.log("🔄 Updated INV_SALE transaction with",_.length,"items, amount:",R)}else{const c=s.project_price||s.market_value||"0.00",u={...i,amount:parseFloat(c).toFixed(2)};console.log("🆕 Creating new INV_SALE transaction with amount:",u.amount),await A(o,u,{merge:!0})}return console.log("✅ Transaction created/updated successfully"),a}},G={async allocateBusinessInventoryToProject(s,t,n,e){return await T.allocateItemToProject(s,t,n,e)},async returnItemToBusinessInventory(s,t,n){await T.returnItemFromProject(s,n)},async completePendingTransaction(s,t,n,e){return await T.completePendingTransaction("sale",n,e)},async handleItemDeallocation(s,t,n){return await N.handleInventoryDesignation(s,t,n)}};export{z as businessInventoryService,N as deallocationService,G as integrationService,E as projectService,K as transactionService,T as unifiedItemsService};
//# sourceMappingURL=inventoryService.js.map
