import{t as p,z as m,N as h,O as C,m as u,P as O,B as f,Q as A,q as T,u as I,A as _,D as P,s as R,R as D,S as F,U as L}from"./firebase.js";import{e as w,f as S,d}from"./index.js";import"./vendor.js";import"./router.js";import"./ui.js";const Q={async getProjects(){await w();const a=p(d,"projects"),t=m(a,h("updatedAt","desc"));return(await I(t)).docs.map(e=>{const s=S(e.data());return{id:e.id,...s}})},async getProject(a){await w();const t=u(d,"projects",a),n=await T(t);if(n.exists()){const e=S(n.data());return{id:n.id,...e}}return null},async createProject(a){const t=p(d,"projects"),n=new Date,e={...a,createdAt:n,updatedAt:n};return(await A(t,e)).id},async updateProject(a,t){const n=u(d,"projects",a);await f(n,{...t,updatedAt:new Date})},async deleteProject(a){const t=u(d,"projects",a);await O(t)},subscribeToProjects(a){const t=p(d,"projects"),n=m(t,h("updatedAt","desc"));return C(n,e=>{const s=e.docs.map(o=>{const r=S(o.data());return{id:o.id,...r}});a(s)})}},K={async getTransactions(a){const t=p(d,"projects",a,"transactions"),n=m(t,h("created_at","desc"));return(await I(n)).docs.map(s=>{const o=S(s.data()),r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};return{transaction_id:s.id,...r}})},async getTransaction(a,t){const n=u(d,"projects",a,"transactions",t),e=await T(n);if(e.exists()){const s=S(e.data());console.log("inventoryService - raw data:",s),console.log("inventoryService - transaction_images:",s.transaction_images),console.log("inventoryService - transaction_images type:",typeof s.transaction_images);const o={...s,transaction_images:Array.isArray(s.transaction_images)?s.transaction_images:[],receipt_images:Array.isArray(s.receipt_images)?s.receipt_images:[],other_images:Array.isArray(s.other_images)?s.other_images:[]};return console.log("inventoryService - processed transactionData:",o),{transaction_id:e.id,...o}}return null},async getTransactionById(a){const t=await Q.getProjects();for(const n of t)try{const e=await this.getTransaction(n.id,a);if(e)return{transaction:e,projectId:n.id}}catch(e){console.error(`Error searching for transaction ${a} in project ${n.id}:`,e)}return{transaction:null,projectId:null}},async createTransaction(a,t,n){try{const e=p(d,"projects",a,"transactions"),o={...t,created_at:new Date().toISOString(),status:t.status||"completed",reimbursement_type:t.reimbursement_type||null,trigger_event:t.trigger_event||null};console.log("Creating transaction:",o),console.log("Transaction items:",n);const i=(await A(e,o)).id;if(console.log("Transaction created successfully:",i),n&&n.length>0){console.log("Creating items for transaction:",i);const c=await k.createTransactionItems(a,i,t.transaction_date,t.source,n);console.log("Created items:",c)}return i}catch(e){throw console.error("Error creating transaction:",e),e}},async updateTransaction(a,t,n){const e=u(d,"projects",a,"transactions",t),s={...n};s.status==="completed"&&s.reimbursement_type!==void 0&&(s.reimbursement_type=L()),s.reimbursement_type===""&&(s.reimbursement_type=L()),s.reimbursement_type&&s.status==="completed"&&(s.status="pending"),await f(e,s)},async deleteTransaction(a,t){const n=u(d,"projects",a,"transactions",t);await O(n)},subscribeToTransactions(a,t){const n=p(d,"projects",a,"transactions"),e=m(n,h("created_at","desc"));return C(e,s=>{const o=s.docs.map(r=>{const i=S(r.data()),c={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:r.id,...c}});t(o)})},subscribeToTransaction(a,t,n){const e=u(d,"projects",a,"transactions",t);return C(e,s=>{if(s.exists()){const o=S(s.data());console.log("inventoryService - real-time raw data:",o),console.log("inventoryService - real-time transaction_images:",o.transaction_images);const r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};console.log("inventoryService - real-time processed transactionData:",r);const i={transaction_id:s.id,...r};n(i)}else n(null)})},async getPendingTransactions(a){const t=p(d,"projects",a,"transactions"),n=m(t,_("status","==","pending"),h("created_at","desc"));return(await I(n)).docs.map(s=>{const o=S(s.data()),r={...o,transaction_images:Array.isArray(o.transaction_images)?o.transaction_images:[],receipt_images:Array.isArray(o.receipt_images)?o.receipt_images:[],other_images:Array.isArray(o.other_images)?o.other_images:[]};return{transaction_id:s.id,...r}})},async updateTransactionStatus(a,t,n,e){const s=u(d,"projects",a,"transactions",t),o={status:n,...e};n==="completed"&&!(e!=null&&e.transaction_date)&&(o.transaction_date=new Date().toISOString()),await f(s,o)}},k={async getItemsByProject(a,t,n){await w();const e=p(d,"items");let s=m(e,_("project_id","==",a));if(t!=null&&t.status&&(s=m(s,_("disposition","==",t.status))),t!=null&&t.category&&(s=m(s,_("source","==",t.category))),t!=null&&t.tags&&t.tags.length>0&&(s=m(s,_("tags","array-contains-any",t.tags))),t!=null&&t.priceRange&&(s=m(s,_("project_price",">=",t.priceRange.min),_("project_price","<=",t.priceRange.max))),t!=null&&t.searchQuery){const i=t.searchQuery.toLowerCase();s=m(s,_("description",">=",i),_("description","<=",i+""))}s=m(s,h("last_updated","desc")),n&&(s=m(s,D(n.limit)),n.page>0&&(s=m(s,D(n.page*n.limit))));let r=(await I(s)).docs.map(i=>({item_id:i.id,...i.data()}));if(t!=null&&t.searchQuery&&r.length>0){const i=t.searchQuery.toLowerCase();r=r.filter(c=>c.description.toLowerCase().includes(i)||c.source.toLowerCase().includes(i)||c.sku.toLowerCase().includes(i)||c.payment_method.toLowerCase().includes(i))}return r},subscribeToItemsByProject(a,t,n){const e=p(d,"items");let s=m(e,_("project_id","==",a),h("last_updated","desc"));if(n!=null&&n.status&&(s=m(s,_("disposition","==",n.status))),n!=null&&n.category&&(s=m(s,_("source","==",n.category))),n!=null&&n.searchQuery){const o=n.searchQuery.toLowerCase();s=m(s,_("description",">=",o),_("description","<=",o+""))}return C(s,o=>{let r=o.docs.map(i=>({item_id:i.id,...i.data()}));if(n!=null&&n.searchQuery){const i=n.searchQuery.toLowerCase();r=r.filter(c=>c.description.toLowerCase().includes(i)||c.source.toLowerCase().includes(i)||c.sku.toLowerCase().includes(i)||c.payment_method.toLowerCase().includes(i))}t(r)})},async getBusinessInventoryItems(a,t){await w();const n=p(d,"items");let e=m(n,_("project_id","==",null));a!=null&&a.status&&(e=m(e,_("inventory_status","==",a.status))),e=m(e,h("last_updated","desc")),t&&(e=m(e,D(t.limit)),t.page>0&&(e=m(e,D(t.page*t.limit))));let o=(await I(e)).docs.map(r=>({item_id:r.id,...r.data()}));if(a!=null&&a.searchQuery){const r=a.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}return o},subscribeToBusinessInventory(a,t){const n=p(d,"items");let e=m(n,_("project_id","==",null),h("last_updated","desc"));return t!=null&&t.status&&(e=m(e,_("inventory_status","==",t.status))),C(e,s=>{let o=s.docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}a(o)})},async createItem(a){await w();const t=p(d,"items"),n=new Date,e={...a,inventory_status:a.inventory_status||"available",date_created:n.toISOString(),last_updated:n.toISOString()};return(await A(t,e)).id},async updateItem(a,t){await w();const n=u(d,"items",a),e={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(e.inventory_status=t.inventory_status),t.project_id!==void 0&&(e.project_id=t.project_id),t.business_inventory_location!==void 0&&(e.business_inventory_location=t.business_inventory_location),t.transaction_id!==void 0&&(e.transaction_id=t.transaction_id),t.purchase_price!==void 0&&(e.purchase_price=t.purchase_price),t.project_price!==void 0&&(e.project_price=t.project_price),t.description!==void 0&&(e.description=t.description),t.source!==void 0&&(e.source=t.source),t.sku!==void 0&&(e.sku=t.sku),t.market_value!==void 0&&(e.market_value=t.market_value),t.payment_method!==void 0&&(e.payment_method=t.payment_method),t.disposition!==void 0&&(e.disposition=t.disposition),t.notes!==void 0&&(e.notes=t.notes),t.space!==void 0&&(e.space=t.space),t.bookmark!==void 0&&(e.bookmark=t.bookmark),t.images!==void 0&&(e.images=t.images),await f(n,e)},async deleteItem(a){await w();const t=u(d,"items",a);await O(t)},async getItemsForTransaction(a,t){await w();const n=p(d,"items"),e=m(n,_("transaction_id","==",t),h("date_created","asc"));return(await I(e)).docs.map(o=>({item_id:o.id,...o.data()}))},async allocateItemToProject(a,t,n,e){await w();const s=await this.getItemById(a);if(!s)throw new Error("Business inventory item not found");const o=n||s.project_price||s.market_value||"0.00",r=`INV_SALE_${t}`,i=u(d,"projects",t,"transactions",r),c={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:o,budget_category:"Furnishings",notes:e||"Item allocated from business inventory",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation",item_ids:[a],created_by:"system",last_updated:new Date().toISOString()};return await R(i,c,{merge:!0}),await this.updateItem(a,{project_id:t,inventory_status:"pending",transaction_id:r}),r},async batchAllocateItemsToProject(a,t,n={}){await w();const e=p(d,"items"),s=m(e,_("__name__","in",a),_("project_id","==",null)),o=await I(s);if(o.empty)throw new Error("No business inventory items found");const r=`INV_SALE_${t}`,i=n.amount||o.docs.map(y=>y.data().project_price||y.data().market_value||"0.00").reduce((y,j)=>y+parseFloat(j||"0"),0).toFixed(2),c=u(d,"projects",t,"transactions",r),g={project_id:t,transaction_date:new Date().toISOString(),source:"Batch Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:i,budget_category:"Furnishings",notes:n.notes||`Batch allocation of ${a.length} items from business inventory`,status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation",item_ids:a,created_by:"system",last_updated:new Date().toISOString()};await R(c,g,{merge:!0});const l=P(d);return o.docs.forEach(y=>{const j=y.id;l.update(u(d,"items",j),{project_id:t,inventory_status:"pending",transaction_id:r,last_updated:new Date().toISOString()})}),await l.commit(),r},async returnItemFromProject(a,t,n,e){await w();const s=await this.getItemById(a);if(!s)throw new Error("Item not found");const o=`INV_BUY_${t}`,r=n||s.purchase_price||s.market_value||"0.00",i=u(d,"projects",t,"transactions",o),c={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Return",transaction_type:"Reimbursement",payment_method:"Pending",amount:r,budget_category:"Furnishings",notes:e||"Item returned to business inventory",status:"pending",reimbursement_type:"We Owe",trigger_event:"Inventory return",item_ids:[a],created_by:"system",last_updated:new Date().toISOString()};return await R(i,c,{merge:!0}),await this.updateItem(a,{project_id:null,inventory_status:"available",transaction_id:o}),o},async completePendingTransaction(a,t,n){await w();const e=a==="sale"?`INV_SALE_${t}`:`INV_BUY_${t}`,s=u(d,"projects",t,"transactions",e),o=await T(s);if(!o.exists())throw new Error("Transaction not found");const i=o.data().item_ids||[];await f(s,{status:"completed",payment_method:n,transaction_date:new Date().toISOString(),last_updated:new Date().toISOString()});const c=P(d);for(const g of i){const l=u(d,"items",g);a==="sale"?c.update(l,{transaction_id:null,inventory_status:"sold",last_updated:new Date().toISOString()}):c.update(l,{project_id:null,transaction_id:null,inventory_status:"available",last_updated:new Date().toISOString()})}await c.commit()},async getItemById(a){await w();const t=u(d,"items",a),n=await T(t);return n.exists()?{item_id:n.id,...n.data()}:null},async duplicateItem(a,t){const n=await this.getItemById(t);if(!n)throw new Error("Original item not found");const e=new Date,s=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,o=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,r={item_id:s,description:n.description,source:n.source,sku:n.sku||"",purchase_price:n.purchase_price||"",project_price:n.project_price||"",market_value:n.market_value||"",payment_method:n.payment_method,disposition:"keep",notes:n.notes||"",space:n.space||"",qr_key:o,bookmark:!1,transaction_id:n.transaction_id,project_id:a,date_created:e.toISOString(),last_updated:e.toISOString(),images:n.images||[]};Object.keys(r).forEach(c=>{r[c]===void 0&&delete r[c]});const i=u(d,"items",s);return await R(i,r),s},async createTransactionItems(a,t,n,e,s){const o=P(d),r=[],i=new Date;return s.forEach(c=>{const g=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`;r.push(g);const l=u(d,"items",g),y=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,j={item_id:g,description:c.description,source:e,sku:c.sku||"",purchase_price:c.purchase_price,project_price:c.project_price,market_value:c.market_value||"",payment_method:"Client Card",disposition:"keep",notes:c.notes||"",qr_key:y,bookmark:!1,transaction_id:t,project_id:a,date_created:n,last_updated:i.toISOString(),images:[]};o.set(l,j)}),await o.commit(),r}},Y={async getBusinessInventoryItems(a,t){const n=p(d,"business_inventory");let e=m(n);a!=null&&a.status&&(e=m(e,_("inventory_status","==",a.status))),e=m(e,h("last_updated","desc")),t&&(e=m(e,D(t.limit)),t.page>0&&(e=m(e,D(t.page*t.limit))));let o=(await I(e)).docs.map(r=>({item_id:r.id,...r.data()}));if(a!=null&&a.searchQuery){const r=a.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}return o},async getBusinessInventoryItem(a){const t=u(d,"business_inventory",a),n=await T(t);return n.exists()?{item_id:n.id,...n.data()}:null},async duplicateBusinessInventoryItem(a){const t=await this.getBusinessInventoryItem(a);if(!t)throw new Error("Original business inventory item not found");const n=new Date,e=`BI-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,s=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,o={item_id:e,description:t.description,source:t.source,sku:t.sku||"",purchase_price:t.purchase_price||"",project_price:t.project_price||"",market_value:t.market_value||"",payment_method:t.payment_method,disposition:"keep",notes:t.notes||"",space:t.space||"",qr_key:s,bookmark:!1,inventory_status:"available",business_inventory_location:t.business_inventory_location||"",transaction_id:t.transaction_id,date_created:n.toISOString(),last_updated:n.toISOString(),images:t.images||[]};Object.keys(o).forEach(i=>{o[i]===void 0&&delete o[i]});const r=u(d,"business_inventory",e);return await R(r,o),e},async createBusinessInventoryItem(a){const t=p(d,"business_inventory"),n=new Date,e={...a,inventory_status:a.inventory_status||"available",date_created:n.toISOString(),last_updated:n.toISOString()};return(await A(t,e)).id},async updateBusinessInventoryItem(a,t){const n=u(d,"business_inventory",a),e={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(e.inventory_status=t.inventory_status),t.business_inventory_location!==void 0&&(e.business_inventory_location=t.business_inventory_location),t.purchase_price!==void 0&&(e.purchase_price=t.purchase_price),t.project_price!==void 0&&(e.project_price=t.project_price),t.description!==void 0&&(e.description=t.description),t.source!==void 0&&(e.source=t.source),t.sku!==void 0&&(e.sku=t.sku),t.market_value!==void 0&&(e.market_value=t.market_value),t.payment_method!==void 0&&(e.payment_method=t.payment_method),t.disposition!==void 0&&(e.disposition=t.disposition),t.notes!==void 0&&(e.notes=t.notes),t.space!==void 0&&(e.space=t.space),t.bookmark!==void 0&&(e.bookmark=t.bookmark),t.images!==void 0&&(e.images=t.images),await f(n,e)},async deleteBusinessInventoryItem(a){const t=u(d,"business_inventory",a);await O(t)},async getBusinessInventoryStats(){const a=p(d,"business_inventory"),t=await F(a),n=m(a),e=await I(n);let s=0,o=0,r=0;return e.docs.forEach(i=>{switch(i.data().inventory_status){case"available":s++;break;case"pending":o++;break;case"sold":r++;break}}),{totalItems:t.data().count,availableItems:s,pendingItems:o,soldItems:r}},subscribeToBusinessInventory(a,t){const n=p(d,"business_inventory");let e=m(n,h("last_updated","desc"));return t!=null&&t.status&&(e=m(e,_("inventory_status","==",t.status))),C(e,s=>{let o=s.docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();o=o.filter(i=>{var c;return i.description.toLowerCase().includes(r)||i.source.toLowerCase().includes(r)||i.sku.toLowerCase().includes(r)||((c=i.business_inventory_location)==null?void 0:c.toLowerCase().includes(r))})}a(o)})},async allocateItemToProject(a,t,n,e){const s=await this.getBusinessInventoryItem(a);if(!s)throw new Error("Business inventory item not found");const o=n||s.project_price||s.market_value||"0.00",r={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:o,budget_category:"Furnishings",notes:e||"Item allocated from business inventory",created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},i=p(d,"projects",t,"transactions"),c=await A(i,r);return await this.updateBusinessInventoryItem(a,{inventory_status:"pending",transaction_id:c.id}),c.id},async batchAllocateItemsToProject(a,t,n={}){const e=P(d),s=[],o=new Date,r=p(d,"business_inventory"),i=m(r,_("__name__","in",a)),c=await I(i);if(c.empty)throw new Error("No business inventory items found");const g={project_id:t,transaction_date:o.toISOString(),source:"Batch Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:n.amount||"0.00",budget_category:"Furnishings",notes:n.notes||`Batch allocation of ${a.length} items from business inventory`,created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},l=p(d,"projects",t,"transactions"),y=u(l);e.set(y,g),s.push(y.id),c.docs.forEach(b=>{const v=b.data(),q=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,$=u(d,"projects",t,"items",q),E={item_id:q,description:v.description,source:v.source,sku:v.sku,project_price:v.project_price,market_value:v.market_value||"",payment_method:"1584",disposition:"keep",notes:v.notes||"",space:n.space||"",qr_key:`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:!1,transaction_id:y.id,project_id:t,date_created:v.date_created,last_updated:o.toISOString(),images:v.images||[]};e.set($,E)}),a.forEach(b=>{const v=u(d,"business_inventory",b);e.update(v,{inventory_status:"sold",transaction_id:y.id,last_updated:o.toISOString()})}),await e.commit();const B=(await k.getItemsByProject(t)).length;return await Q.updateProject(t,{metadata:{totalItems:B,lastActivity:o}}),s},async returnItemFromProject(a,t,n){const e=u(d,"projects",n,"transactions",t);await f(e,{status:"cancelled"}),await this.updateBusinessInventoryItem(a,{inventory_status:"available",transaction_id:void 0})},async markItemAsSold(a,t,n,e){const s=u(d,"projects",n,"transactions",t);await f(s,{status:"completed",transaction_date:new Date().toISOString(),payment_method:e}),await this.updateBusinessInventoryItem(a,{inventory_status:"sold",transaction_id:void 0})},async moveItemToBusinessInventory(a,t,n,e){const s=p(d,"projects",t,"items"),o=m(s,_("item_id","==",a)),r=await I(o);if(r.empty)throw new Error("Item not found in project");const i=r.docs[0].data(),c={project_id:t,transaction_date:new Date().toISOString(),source:"Client Purchase",transaction_type:"Reimbursement",payment_method:"Pending",amount:n,budget_category:"Furnishings",notes:e||"Client-purchased item moved to business inventory",created_by:"system",status:"pending",reimbursement_type:"We Owe",trigger_event:"Purchase from client"},g=p(d,"projects",t,"transactions"),l=await A(g,c),y={description:i.description,source:i.source,sku:i.sku,price:i.price,market_value:i.market_value,payment_method:i.payment_method,disposition:i.disposition||"keep",notes:i.notes,space:i.space,qr_key:i.qr_key,bookmark:i.bookmark||!1,inventory_status:"available",business_inventory_location:"Warehouse - Client Purchase",transaction_id:l.id,images:i.images||[]};return await this.createBusinessInventoryItem(y),await O(r.docs[0].ref),l.id}},x={async handleInventoryDesignation(a,t,n){if(console.log("🔄 handleInventoryDesignation called:",{itemId:a,projectId:t,disposition:n}),n!=="inventory"){console.log("⏭️ Skipping - disposition is not inventory:",n);return}try{console.log("🔍 Getting item details for:",a);const e=await k.getItemById(a);if(!e)throw new Error("Item not found");console.log("✅ Item found:",e.item_id,"disposition:",e.disposition,"project_id:",e.project_id),console.log("🏦 Creating/updating We Owe transaction for inventory designation");const s=await this.ensurePurchaseTransaction(e,t,`Item designated for inventory: ${e.description}`);console.log("📦 Moving item to business inventory..."),await k.updateItem(e.item_id,{project_id:null,inventory_status:"available",transaction_id:s,last_updated:new Date().toISOString()}),console.log("✅ Item moved to business inventory successfully"),console.log("✅ Deallocation completed successfully")}catch(e){throw console.error("❌ Error handling inventory designation:",e),e}},async ensurePurchaseTransaction(a,t,n){console.log("🏦 Creating/updating purchase transaction for item:",a.item_id);const e=`INV_BUY_${t}`;console.log("🔑 Canonical transaction ID:",e);const s=u(d,"projects",t,"transactions",e),o=await T(s);let r={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Return",transaction_type:"Reimbursement",payment_method:"Pending",budget_category:"Furnishings",notes:n||"Item returned to business inventory",status:"pending",reimbursement_type:"We Owe",trigger_event:"Inventory return",item_ids:[a.item_id],created_by:"system",created_at:new Date().toISOString(),last_updated:new Date().toISOString()};if(o.exists()){console.log("📋 Existing transaction found, updating with new item");const i=o.data(),c=i.item_ids||[],g=[...new Set([...c,a.item_id])],l=p(d,"items"),y=m(l,_("__name__","in",g)),B=(await I(y)).docs.map(b=>b.data().purchase_price||b.data().market_value||"0.00").reduce((b,v)=>b+parseFloat(v||"0"),0).toFixed(2);r={...i,item_ids:g,amount:B,notes:i.notes||"Multiple items returned to business inventory",last_updated:new Date().toISOString()},console.log("🔄 Updated transaction with",g.length,"items, amount:",B)}else{const i=a.purchase_price||a.market_value||"0.00";r.amount=parseFloat(i).toFixed(2),console.log("🆕 Creating new transaction with amount:",r.amount)}return console.log("💾 Creating/updating transaction document..."),await R(s,r,{merge:!0}),console.log("✅ Transaction created/updated successfully"),e}},z={async allocateBusinessInventoryToProject(a,t,n,e){return await k.allocateItemToProject(a,t,n,e)},async returnItemToBusinessInventory(a,t,n){await k.returnItemFromProject(a,n)},async completePendingTransaction(a,t,n,e){return await k.completePendingTransaction("sale",n,e)},async handleItemDeallocation(a,t,n){return await x.handleInventoryDesignation(a,t,n)}};export{Y as businessInventoryService,x as deallocationService,z as integrationService,Q as projectService,K as transactionService,k as unifiedItemsService};
//# sourceMappingURL=inventoryService.js.map
