import{t as p,z as d,M as l,N as C,m as _,O as q,B as g,P as j,q as b,u as v,A as u,s as x,Q as O,R as A,S as B,U as L}from"./firebase.js";import{e as P,f as I,d as m}from"./index.js";const f={async getProjects(){await P();const n=p(m,"projects"),t=d(n,l("updatedAt","desc"));return(await v(t)).docs.map(a=>{const e=I(a.data());return{id:a.id,...e}})},async getProject(n){await P();const t=_(m,"projects",n),s=await b(t);if(s.exists()){const a=I(s.data());return{id:s.id,...a}}return null},async createProject(n){const t=p(m,"projects"),s=new Date,a={...n,createdAt:s,updatedAt:s};return(await j(t,a)).id},async updateProject(n,t){const s=_(m,"projects",n);await g(s,{...t,updatedAt:new Date})},async deleteProject(n){const t=_(m,"projects",n);await q(t)},subscribeToProjects(n){const t=p(m,"projects"),s=d(t,l("updatedAt","desc"));return C(s,a=>{const e=a.docs.map(i=>{const o=I(i.data());return{id:i.id,...o}});n(e)})}},S={async getItems(n,t,s){const a=p(m,"projects",n,"items");let e=d(a);if(t!=null&&t.status&&(e=d(e,u("disposition","==",t.status))),t!=null&&t.category&&(e=d(e,u("source","==",t.category))),t!=null&&t.tags&&t.tags.length>0&&(e=d(e,u("tags","array-contains-any",t.tags))),t!=null&&t.priceRange&&(e=d(e,u("price",">=",t.priceRange.min),u("price","<=",t.priceRange.max))),t!=null&&t.searchQuery){const r=t.searchQuery.toLowerCase();e=d(e,u("description",">=",r),u("description","<=",r+""))}e=d(e,l("last_updated","desc")),s&&(e=d(e,A(s.limit)),s.page>0&&(e=d(e,A(s.page*s.limit))));let o=(await v(e)).docs.map(r=>({item_id:r.id,...r.data()}));if(t!=null&&t.searchQuery&&o.length>0){const r=t.searchQuery.toLowerCase();o=o.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}return o},async getItem(n,t){var e,i;console.log("getItem called with:",{projectId:n,itemId:t}),await P();const s=_(m,"projects",n,"items",t);console.log("Document path:",s.path);const a=await b(s);if(a.exists()){const o=a.data();console.log("Raw Firebase data:",o),console.log("Images in Firebase:",((e=o.images)==null?void 0:e.length)||0,"images");const r={item_id:a.id,description:o.description,source:o.source,sku:o.sku,purchase_price:o.purchase_price,resale_price:o.resale_price,market_value:o.market_value,payment_method:o.payment_method,disposition:o.disposition,notes:o.notes,space:o.space,qr_key:o.qr_key,bookmark:o.bookmark,transaction_id:o.transaction_id,project_id:o.project_id,date_created:o.date_created,last_updated:o.last_updated,images:o.images||[]};return console.log("Mapped item data:",r),console.log("Mapped images:",((i=r.images)==null?void 0:i.length)||0,"images"),r}return console.log("Document does not exist at path:",s.path),console.log("itemSnap.exists():",a.exists()),console.log("Item not found"),null},async createItem(n,t){const s=p(m,"projects",n,"items"),a=new Date,e={description:t.description,source:t.source,sku:t.sku,purchase_price:t.purchase_price,resale_price:t.resale_price,market_value:t.market_value,payment_method:t.payment_method,disposition:t.disposition||"keep",notes:t.notes,space:t.space,qr_key:t.qr_key||`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:t.bookmark,transaction_id:t.transaction_id,project_id:t.project_id,date_created:a.toISOString(),last_updated:a.toISOString()},i=await j(s,e);return await f.updateProject(n,{metadata:{totalItems:await S.getItemCount(n)+1,lastActivity:a}}),i.id},async updateItem(n,t,s){var i;const a=_(m,"projects",n,"items",t),e={last_updated:new Date().toISOString()};s.purchase_price!==void 0&&(e.purchase_price=s.purchase_price),s.resale_price!==void 0&&(e.resale_price=s.resale_price),s.market_value!==void 0&&(e.market_value=s.market_value),s.description!==void 0&&(e.description=s.description),s.source!==void 0&&(e.source=s.source),s.sku!==void 0&&(e.sku=s.sku),s.payment_method!==void 0&&(e.payment_method=s.payment_method),s.disposition!==void 0&&(e.disposition=s.disposition),s.notes!==void 0&&(e.notes=s.notes),s.space!==void 0&&(e.space=s.space),s.bookmark!==void 0&&(e.bookmark=s.bookmark),s.images!==void 0&&(console.log("Updating item images:",(i=s.images)==null?void 0:i.length,"images"),e.images=s.images),console.log("Updating item in database:",t,"with updates:",Object.keys(e)),await g(a,e),console.log("Item updated successfully in database")},async addItemImage(n,t,s){const a=_(m,"projects",n,"items",t),e=await b(a);if(!e.exists())throw new Error("Item not found");const r=[...e.data().images||[],s];await g(a,{images:r,last_updated:new Date().toISOString()})},async updateItemImages(n,t,s){const a=_(m,"projects",n,"items",t);await g(a,{images:s,last_updated:new Date().toISOString()})},async removeItemImage(n,t,s){const a=_(m,"projects",n,"items",t),e=await b(a);if(!e.exists())throw new Error("Item not found");const r=(e.data().images||[]).filter(c=>c.url!==s);await g(a,{images:r,last_updated:new Date().toISOString()})},async setPrimaryImage(n,t,s){const a=_(m,"projects",n,"items",t),e=await b(a);if(!e.exists())throw new Error("Item not found");const r=(e.data().images||[]).map(c=>({...c,isPrimary:c.url===s}));await g(a,{images:r,last_updated:new Date().toISOString()})},async deleteItem(n,t){const s=_(m,"projects",n,"items",t);await q(s);const a=new Date;await f.updateProject(n,{metadata:{totalItems:Math.max(0,await S.getItemCount(n)-1),lastActivity:a}})},async getItemCount(n){const t=p(m,"projects",n,"items");return(await B(t)).data().count},subscribeToItems(n,t,s){const a=p(m,"projects",n,"items");let e=d(a,l("last_updated","desc"));return s!=null&&s.status&&(e=d(e,u("disposition","==",s.status))),s!=null&&s.category&&(e=d(e,u("source","==",s.category))),C(e,i=>{console.log("Real-time items snapshot received:",i.docs.length,"documents");let o=i.docs.map(r=>{const c=r.data();return{item_id:r.id,description:c.description,source:c.source,sku:c.sku,purchase_price:c.purchase_price,resale_price:c.resale_price,market_value:c.market_value,payment_method:c.payment_method,disposition:c.disposition,notes:c.notes,space:c.space,qr_key:c.qr_key,bookmark:c.bookmark,transaction_id:c.transaction_id,project_id:c.project_id,date_created:c.date_created,last_updated:c.last_updated,images:c.images||[]}});if(s!=null&&s.searchQuery){const r=s.searchQuery.toLowerCase();o=o.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}console.log("Real-time items callback with",o.length,"items"),t(o)})},async searchItems(n,t){if(t.length<2)return[];const s=p(m,"projects",n,"items"),a=d(s,u("description",">=",t.toLowerCase()),u("description","<=",t.toLowerCase()+""),l("description"),A(20));return(await v(a)).docs.map(i=>{const o=i.data();return{item_id:i.id,description:o.description,source:o.source,sku:o.sku,purchase_price:o.purchase_price,resale_price:o.resale_price,market_value:o.market_value,payment_method:o.payment_method,disposition:o.disposition,notes:o.notes,space:o.space,qr_key:o.qr_key,bookmark:o.bookmark,transaction_id:o.transaction_id,project_id:o.project_id,date_created:o.date_created,last_updated:o.last_updated}})},async batchUpdateItems(n,t){const s=O(m);t.forEach(({id:a,updates:e})=>{const i=_(m,"projects",n,"items",a),o={last_updated:new Date().toISOString()};e.purchase_price!==void 0&&(o.purchase_price=e.purchase_price),e.resale_price!==void 0&&(o.resale_price=e.resale_price),e.market_value!==void 0&&(o.market_value=e.market_value),e.description!==void 0&&(o.description=e.description),e.source!==void 0&&(o.source=e.source),e.sku!==void 0&&(o.sku=e.sku),e.payment_method!==void 0&&(o.payment_method=e.payment_method),e.disposition!==void 0&&(o.disposition=e.disposition),e.notes!==void 0&&(o.notes=e.notes),e.space!==void 0&&(o.space=e.space),e.bookmark!==void 0&&(o.bookmark=e.bookmark),s.update(i,o)}),await s.commit()},async createTransactionItems(n,t,s,a,e){const i=O(m),o=[],r=new Date;e.forEach(y=>{const w=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`;o.push(w);const k=_(m,"projects",n,"items",w),T=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,R={item_id:w,description:y.description,source:a,sku:y.sku||"",purchase_price:y.purchase_price,resale_price:y.resale_price,market_value:y.market_value||"",payment_method:"Client Card",disposition:"keep",notes:y.notes||"",qr_key:T,bookmark:!1,transaction_id:t,project_id:n,date_created:s,last_updated:r.toISOString(),images:[]};i.set(k,R)}),await i.commit();const c=await S.getItemCount(n);return await f.updateProject(n,{metadata:{totalItems:c,lastActivity:r}}),o},async getTransactionItems(n,t){const s=p(m,"projects",n,"items"),a=d(s,u("transaction_id","==",t),l("date_created","asc"));return(await v(a)).docs.map(i=>i.id)},async addItemToTransaction(n,t,s,a,e){const i=new Date,o=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,r=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,c={item_id:o,description:e.description,source:a,sku:e.sku||"",purchase_price:e.purchase_price,resale_price:e.resale_price,market_value:e.market_value||"",payment_method:"Client Card",disposition:"keep",notes:e.notes||"",space:"",qr_key:r,bookmark:!1,transaction_id:t,project_id:n,date_created:s,last_updated:i.toISOString(),images:[]},y=_(m,"projects",n,"items",o);return await x(y,c),await f.updateProject(n,{metadata:{totalItems:await S.getItemCount(n)+1,lastActivity:i}}),o}},F={async getTransactions(n){const t=p(m,"projects",n,"transactions"),s=d(t,l("created_at","desc"));return(await v(s)).docs.map(e=>{const i=I(e.data()),o={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:e.id,...o}})},async getTransaction(n,t){const s=_(m,"projects",n,"transactions",t),a=await b(s);if(a.exists()){const e=I(a.data());console.log("inventoryService - raw data:",e),console.log("inventoryService - transaction_images:",e.transaction_images),console.log("inventoryService - transaction_images type:",typeof e.transaction_images);const i={...e,transaction_images:Array.isArray(e.transaction_images)?e.transaction_images:[],receipt_images:Array.isArray(e.receipt_images)?e.receipt_images:[],other_images:Array.isArray(e.other_images)?e.other_images:[]};return console.log("inventoryService - processed transactionData:",i),{transaction_id:a.id,...i}}return null},async getTransactionById(n){const t=await f.getProjects();for(const s of t)try{const a=await this.getTransaction(s.id,n);if(a)return{transaction:a,projectId:s.id}}catch(a){console.error(`Error searching for transaction ${n} in project ${s.id}:`,a)}return{transaction:null,projectId:null}},async createTransaction(n,t,s){try{const a=p(m,"projects",n,"transactions"),i={...t,created_at:new Date().toISOString(),status:t.status||"completed",reimbursement_type:t.reimbursement_type||null,trigger_event:t.trigger_event||null};console.log("Creating transaction:",i),console.log("Transaction items:",s);const r=(await j(a,i)).id;if(console.log("Transaction created successfully:",r),s&&s.length>0){console.log("Creating items for transaction:",r);const c=await S.createTransactionItems(n,r,t.transaction_date,t.source,s);console.log("Created items:",c)}return r}catch(a){throw console.error("Error creating transaction:",a),a}},async updateTransaction(n,t,s){const a=_(m,"projects",n,"transactions",t),e={...s};e.status==="completed"&&e.reimbursement_type!==void 0&&(e.reimbursement_type=L()),e.reimbursement_type===""&&(e.reimbursement_type=L()),e.reimbursement_type&&e.status==="completed"&&(e.status="pending"),await g(a,e)},async deleteTransaction(n,t){const s=_(m,"projects",n,"transactions",t);await q(s)},subscribeToTransactions(n,t){const s=p(m,"projects",n,"transactions"),a=d(s,l("created_at","desc"));return C(a,e=>{const i=e.docs.map(o=>{const r=I(o.data()),c={...r,transaction_images:Array.isArray(r.transaction_images)?r.transaction_images:[],receipt_images:Array.isArray(r.receipt_images)?r.receipt_images:[],other_images:Array.isArray(r.other_images)?r.other_images:[]};return{transaction_id:o.id,...c}});t(i)})},subscribeToTransaction(n,t,s){const a=_(m,"projects",n,"transactions",t);return C(a,e=>{if(e.exists()){const i=I(e.data());console.log("inventoryService - real-time raw data:",i),console.log("inventoryService - real-time transaction_images:",i.transaction_images);const o={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};console.log("inventoryService - real-time processed transactionData:",o);const r={transaction_id:e.id,...o};s(r)}else s(null)})},async getPendingTransactions(n){const t=p(m,"projects",n,"transactions"),s=d(t,u("status","==","pending"),l("created_at","desc"));return(await v(s)).docs.map(e=>{const i=I(e.data()),o={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:e.id,...o}})},async updateTransactionStatus(n,t,s,a){const e=_(m,"projects",n,"transactions",t),i={status:s,...a};s==="completed"&&!(a!=null&&a.transaction_date)&&(i.transaction_date=new Date().toISOString()),await g(e,i)}},U={async getBusinessInventoryItems(n,t){const s=p(m,"business_inventory");let a=d(s);n!=null&&n.status&&(a=d(a,u("inventory_status","==",n.status))),a=d(a,l("last_updated","desc")),t&&(a=d(a,A(t.limit)),t.page>0&&(a=d(a,A(t.page*t.limit))));let i=(await v(a)).docs.map(o=>({item_id:o.id,...o.data()}));if(n!=null&&n.searchQuery){const o=n.searchQuery.toLowerCase();i=i.filter(r=>{var c;return r.description.toLowerCase().includes(o)||r.source.toLowerCase().includes(o)||r.sku.toLowerCase().includes(o)||((c=r.business_inventory_location)==null?void 0:c.toLowerCase().includes(o))})}return i},async getBusinessInventoryItem(n){const t=_(m,"business_inventory",n),s=await b(t);return s.exists()?{item_id:s.id,...s.data()}:null},async createBusinessInventoryItem(n){const t=p(m,"business_inventory"),s=new Date,a={...n,inventory_status:n.inventory_status||"available",date_created:s.toISOString(),last_updated:s.toISOString()};return(await j(t,a)).id},async updateBusinessInventoryItem(n,t){const s=_(m,"business_inventory",n),a={last_updated:new Date().toISOString()};t.inventory_status!==void 0&&(a.inventory_status=t.inventory_status),t.current_project_id!==void 0&&(a.current_project_id=t.current_project_id),t.business_inventory_location!==void 0&&(a.business_inventory_location=t.business_inventory_location),t.pending_transaction_id!==void 0&&(a.pending_transaction_id=t.pending_transaction_id),t.purchase_price!==void 0&&(a.purchase_price=t.purchase_price),t.resale_price!==void 0&&(a.resale_price=t.resale_price),t.description!==void 0&&(a.description=t.description),t.source!==void 0&&(a.source=t.source),t.sku!==void 0&&(a.sku=t.sku),t.market_value!==void 0&&(a.market_value=t.market_value),t.payment_method!==void 0&&(a.payment_method=t.payment_method),t.disposition!==void 0&&(a.disposition=t.disposition),t.notes!==void 0&&(a.notes=t.notes),t.space!==void 0&&(a.space=t.space),t.bookmark!==void 0&&(a.bookmark=t.bookmark),t.images!==void 0&&(a.images=t.images),await g(s,a)},async deleteBusinessInventoryItem(n){const t=_(m,"business_inventory",n);await q(t)},async getBusinessInventoryStats(){const n=p(m,"business_inventory"),t=await B(n),s=d(n),a=await v(s);let e=0,i=0,o=0;return a.docs.forEach(r=>{switch(r.data().inventory_status){case"available":e++;break;case"pending":i++;break;case"sold":o++;break}}),{totalItems:t.data().count,availableItems:e,pendingItems:i,soldItems:o}},subscribeToBusinessInventory(n,t){const s=p(m,"business_inventory");let a=d(s,l("last_updated","desc"));return t!=null&&t.status&&(a=d(a,u("inventory_status","==",t.status))),C(a,e=>{let i=e.docs.map(o=>({item_id:o.id,...o.data()}));if(t!=null&&t.searchQuery){const o=t.searchQuery.toLowerCase();i=i.filter(r=>{var c;return r.description.toLowerCase().includes(o)||r.source.toLowerCase().includes(o)||r.sku.toLowerCase().includes(o)||((c=r.business_inventory_location)==null?void 0:c.toLowerCase().includes(o))})}n(i)})},async allocateItemToProject(n,t,s,a){const e={project_id:t,transaction_date:new Date().toISOString(),source:"Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:s,budget_category:"Furnishings",notes:a||"Item allocated from business inventory",created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},i=p(m,"projects",t,"transactions"),o=await j(i,e);return await this.updateBusinessInventoryItem(n,{inventory_status:"pending",current_project_id:t,pending_transaction_id:o.id}),o.id},async batchAllocateItemsToProject(n,t,s={}){const a=O(m),e=[],i=new Date,o=p(m,"business_inventory"),r=d(o,u("__name__","in",n)),c=await v(r);if(c.empty)throw new Error("No business inventory items found");const y={project_id:t,transaction_date:i.toISOString(),source:"Batch Inventory Allocation",transaction_type:"Reimbursement",payment_method:"Pending",amount:s.amount||"0.00",budget_category:"Furnishings",notes:s.notes||`Batch allocation of ${n.length} items from business inventory`,created_by:"system",status:"pending",reimbursement_type:"Client Owes",trigger_event:"Inventory allocation"},w=p(m,"projects",t,"transactions"),k=_(w);a.set(k,y),e.push(k.id),c.docs.forEach(R=>{const h=R.data(),D=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,$=_(m,"projects",t,"items",D),Q={item_id:D,description:h.description,source:h.source,sku:h.sku,resale_price:h.resale_price,market_value:h.market_value||"",payment_method:"1584",disposition:"keep",notes:h.notes||"",space:s.space||"",qr_key:`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:!1,transaction_id:k.id,project_id:t,date_created:h.date_created,last_updated:i.toISOString(),images:h.images||[]};a.set($,Q)}),n.forEach(R=>{const h=_(m,"business_inventory",R);a.update(h,{inventory_status:"sold",current_project_id:t,pending_transaction_id:k.id,last_updated:i.toISOString()})}),await a.commit();const T=await S.getItemCount(t);return await f.updateProject(t,{metadata:{totalItems:T,lastActivity:i}}),e},async returnItemFromProject(n,t,s){const a=_(m,"projects",s,"transactions",t);await g(a,{status:"cancelled"}),await this.updateBusinessInventoryItem(n,{inventory_status:"available",current_project_id:void 0,pending_transaction_id:void 0})},async markItemAsSold(n,t,s,a){const e=_(m,"projects",s,"transactions",t);await g(e,{status:"completed",transaction_date:new Date().toISOString(),payment_method:a}),await this.updateBusinessInventoryItem(n,{inventory_status:"sold",current_project_id:void 0,pending_transaction_id:void 0})},async moveItemToBusinessInventory(n,t,s,a){const e=p(m,"projects",t,"items"),i=d(e,u("item_id","==",n)),o=await v(i);if(o.empty)throw new Error("Item not found in project");const r=o.docs[0].data(),c={project_id:t,transaction_date:new Date().toISOString(),source:"Client Purchase",transaction_type:"Reimbursement",payment_method:"Pending",amount:s,budget_category:"Furnishings",notes:a||"Client-purchased item moved to business inventory",created_by:"system",status:"pending",reimbursement_type:"We Owe",trigger_event:"Purchase from client"},y=p(m,"projects",t,"transactions"),w=await j(y,c),k={description:r.description,source:r.source,sku:r.sku,price:r.price,market_value:r.market_value,payment_method:r.payment_method,disposition:r.disposition||"keep",notes:r.notes,space:r.space,qr_key:r.qr_key,bookmark:r.bookmark||!1,inventory_status:"available",business_inventory_location:"Warehouse - Client Purchase",transaction_id:w.id,images:r.images||[]};return await this.createBusinessInventoryItem(k),await q(o.docs[0].ref),w.id}};export{U as b,S as i,f as p,F as t};
//# sourceMappingURL=inventoryService.js.map
