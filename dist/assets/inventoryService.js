import{t as u,z as d,M as _,N as S,m as p,O as b,B as y,P as A,q as h,u as k,A as g,Q as q,R as j,S as x}from"./firebase.js";import{e as f,c as l,d as m}from"./index.js";const R={async getProjects(){await f();const s=u(m,"projects"),e=d(s,_("updatedAt","desc"));return(await k(e)).docs.map(n=>{const t=l(n.data());return{id:n.id,...t}})},async getProject(s){await f();const e=p(m,"projects",s),a=await h(e);if(a.exists()){const n=l(a.data());return{id:a.id,...n}}return null},async createProject(s){const e=u(m,"projects"),a=new Date,n={...s,createdAt:a,updatedAt:a};return(await A(e,n)).id},async updateProject(s,e){const a=p(m,"projects",s);await y(a,{...e,updatedAt:new Date})},async deleteProject(s){const e=p(m,"projects",s);await b(e)},subscribeToProjects(s){const e=u(m,"projects"),a=d(e,_("updatedAt","desc"));return S(a,n=>{const t=n.docs.map(i=>{const o=l(i.data());return{id:i.id,...o}});s(t)})}},v={async getItems(s,e,a){const n=u(m,"projects",s,"items");let t=d(n);if(e!=null&&e.status&&(t=d(t,g("status","==",e.status))),e!=null&&e.category&&(t=d(t,g("category","==",e.category))),e!=null&&e.tags&&e.tags.length>0&&(t=d(t,g("tags","array-contains-any",e.tags))),e!=null&&e.priceRange&&(t=d(t,g("price",">=",e.priceRange.min),g("price","<=",e.priceRange.max))),e!=null&&e.searchQuery){const r=e.searchQuery.toLowerCase();t=d(t,g("description",">=",r),g("description","<=",r+""))}t=d(t,_("last_updated","desc")),a&&(t=d(t,j(a.limit)),a.page>0&&(t=d(t,j(a.page*a.limit))));let o=(await k(t)).docs.map(r=>({item_id:r.id,...r.data()}));if(e!=null&&e.searchQuery&&o.length>0){const r=e.searchQuery.toLowerCase();o=o.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}return o},async getItem(s,e){var t,i;console.log("getItem called with:",{projectId:s,itemId:e}),await f();const a=p(m,"projects",s,"items",e);console.log("Document path:",a.path);const n=await h(a);if(n.exists()){const o=n.data();console.log("Raw Firebase data:",o),console.log("Images in Firebase:",((t=o.images)==null?void 0:t.length)||0,"images");const r={item_id:n.id,description:o.description,source:o.source,sku:o.sku,price:o.price,market_value:o.market_value,payment_method:o.payment_method,disposition:o.disposition,notes:o.notes,space:o.space,qr_key:o.qr_key,bookmark:o.bookmark,transaction_id:o.transaction_id,project_id:o.project_id,date_created:o.date_created,last_updated:o.last_updated,images:o.images||[]};return console.log("Mapped item data:",r),console.log("Mapped images:",((i=r.images)==null?void 0:i.length)||0,"images"),r}return console.log("Document does not exist at path:",a.path),console.log("itemSnap.exists():",n.exists()),console.log("Item not found"),null},async createItem(s,e){const a=u(m,"projects",s,"items"),n=new Date,t={description:e.description,source:e.source,sku:e.sku,price:e.price,market_value:e.market_value,payment_method:e.payment_method,disposition:e.disposition||"keep",notes:e.notes,space:e.space,qr_key:e.qr_key||`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,bookmark:e.bookmark,transaction_id:e.transaction_id,project_id:e.project_id,date_created:n.toISOString(),last_updated:n.toISOString()},i=await A(a,t);return await R.updateProject(s,{metadata:{totalItems:await v.getItemCount(s)+1,lastActivity:n}}),i.id},async updateItem(s,e,a){var i;const n=p(m,"projects",s,"items",e),t={last_updated:new Date().toISOString()};a.market_value!==void 0&&(t.market_value=a.market_value),a.description!==void 0&&(t.description=a.description),a.source!==void 0&&(t.source=a.source),a.sku!==void 0&&(t.sku=a.sku),a.price!==void 0&&(t.price=a.price),a.payment_method!==void 0&&(t.payment_method=a.payment_method),a.disposition!==void 0&&(t.disposition=a.disposition),a.notes!==void 0&&(t.notes=a.notes),a.space!==void 0&&(t.space=a.space),a.bookmark!==void 0&&(t.bookmark=a.bookmark),a.images!==void 0&&(console.log("Updating item images:",(i=a.images)==null?void 0:i.length,"images"),t.images=a.images),console.log("Updating item in database:",e,"with updates:",Object.keys(t)),await y(n,t),console.log("Item updated successfully in database")},async addItemImage(s,e,a){const n=p(m,"projects",s,"items",e),t=await h(n);if(!t.exists())throw new Error("Item not found");const r=[...t.data().images||[],a];await y(n,{images:r,last_updated:new Date().toISOString()})},async updateItemImages(s,e,a){const n=p(m,"projects",s,"items",e);await y(n,{images:a,last_updated:new Date().toISOString()})},async removeItemImage(s,e,a){const n=p(m,"projects",s,"items",e),t=await h(n);if(!t.exists())throw new Error("Item not found");const r=(t.data().images||[]).filter(c=>c.url!==a);await y(n,{images:r,last_updated:new Date().toISOString()})},async setPrimaryImage(s,e,a){const n=p(m,"projects",s,"items",e),t=await h(n);if(!t.exists())throw new Error("Item not found");const r=(t.data().images||[]).map(c=>({...c,isPrimary:c.url===a}));await y(n,{images:r,last_updated:new Date().toISOString()})},async deleteItem(s,e){const a=p(m,"projects",s,"items",e);await b(a);const n=new Date;await R.updateProject(s,{metadata:{totalItems:Math.max(0,await v.getItemCount(s)-1),lastActivity:n}})},async getItemCount(s){const e=u(m,"projects",s,"items");return(await x(e)).data().count},subscribeToItems(s,e,a){const n=u(m,"projects",s,"items");let t=d(n,_("last_updated","desc"));return a!=null&&a.status&&(t=d(t,g("disposition","==",a.status))),a!=null&&a.category&&(t=d(t,g("source","==",a.category))),S(t,i=>{console.log("Real-time items snapshot received:",i.docs.length,"documents");let o=i.docs.map(r=>{const c=r.data();return{item_id:r.id,description:c.description,source:c.source,sku:c.sku,price:c.price,market_value:c.market_value,payment_method:c.payment_method,disposition:c.disposition,notes:c.notes,space:c.space,qr_key:c.qr_key,bookmark:c.bookmark,transaction_id:c.transaction_id,project_id:c.project_id,date_created:c.date_created,last_updated:c.last_updated,images:c.images||[]}});if(a!=null&&a.searchQuery){const r=a.searchQuery.toLowerCase();o=o.filter(c=>c.description.toLowerCase().includes(r)||c.source.toLowerCase().includes(r)||c.sku.toLowerCase().includes(r)||c.payment_method.toLowerCase().includes(r))}console.log("Real-time items callback with",o.length,"items"),e(o)})},async searchItems(s,e){if(e.length<2)return[];const a=u(m,"projects",s,"items"),n=d(a,g("description",">=",e.toLowerCase()),g("description","<=",e.toLowerCase()+""),_("description"),j(20));return(await k(n)).docs.map(i=>{const o=i.data();return{item_id:i.id,description:o.description,source:o.source,sku:o.sku,price:o.price,market_value:o.market_value,payment_method:o.payment_method,disposition:o.disposition,notes:o.notes,space:o.space,qr_key:o.qr_key,bookmark:o.bookmark,transaction_id:o.transaction_id,project_id:o.project_id,date_created:o.date_created,last_updated:o.last_updated}})},async batchUpdateItems(s,e){const a=q(m);e.forEach(({id:n,updates:t})=>{const i=p(m,"projects",s,"items",n),o={last_updated:new Date().toISOString()};t.market_value!==void 0&&(o.market_value=t.market_value),t.description!==void 0&&(o.description=t.description),t.source!==void 0&&(o.source=t.source),t.sku!==void 0&&(o.sku=t.sku),t.price!==void 0&&(o.price=t.price),t.payment_method!==void 0&&(o.payment_method=t.payment_method),t.disposition!==void 0&&(o.disposition=t.disposition),t.notes!==void 0&&(o.notes=t.notes),t.space!==void 0&&(o.space=t.space),t.bookmark!==void 0&&(o.bookmark=t.bookmark),a.update(i,o)}),await a.commit()},async createTransactionItems(s,e,a,n,t){const i=q(m),o=[],r=new Date;t.forEach(w=>{const I=`I-${Date.now()}-${Math.random().toString(36).substr(2,4)}`;o.push(I);const C=p(m,"projects",s,"items",I),T=`QR-${Date.now()}-${Math.random().toString(36).substr(2,4)}`,D={item_id:I,description:w.description,source:n,sku:w.sku||"",price:w.price,market_value:w.market_value||"",payment_method:"Client Card",disposition:"keep",notes:w.notes||"",qr_key:T,bookmark:!1,transaction_id:e,project_id:s,date_created:a,last_updated:r.toISOString(),images:[]};i.set(C,D)}),await i.commit();const c=await v.getItemCount(s);return await R.updateProject(s,{metadata:{totalItems:c,lastActivity:r}}),o},async getTransactionItems(s,e){const a=u(m,"projects",s,"items"),n=d(a,g("transaction_id","==",e),_("date_created","asc"));return(await k(n)).docs.map(i=>i.id)}},O={async getTransactions(s){const e=u(m,"projects",s,"transactions"),a=d(e,_("created_at","desc"));return(await k(a)).docs.map(t=>{const i=l(t.data()),o={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};return{transaction_id:t.id,...o}})},async getTransaction(s,e){const a=p(m,"projects",s,"transactions",e),n=await h(a);if(n.exists()){const t=l(n.data());console.log("inventoryService - raw data:",t),console.log("inventoryService - transaction_images:",t.transaction_images),console.log("inventoryService - transaction_images type:",typeof t.transaction_images);const i={...t,transaction_images:Array.isArray(t.transaction_images)?t.transaction_images:[],receipt_images:Array.isArray(t.receipt_images)?t.receipt_images:[],other_images:Array.isArray(t.other_images)?t.other_images:[]};return console.log("inventoryService - processed transactionData:",i),{transaction_id:n.id,...i}}return null},async createTransaction(s,e,a){try{const n=u(m,"projects",s,"transactions"),i={...e,created_at:new Date().toISOString()};console.log("Creating transaction:",i),console.log("Transaction items:",a);const r=(await A(n,i)).id;if(console.log("Transaction created successfully:",r),a&&a.length>0){console.log("Creating items for transaction:",r);const c=await v.createTransactionItems(s,r,e.transaction_date,e.source,a);console.log("Created items:",c)}return r}catch(n){throw console.error("Error creating transaction:",n),n}},async updateTransaction(s,e,a){const n=p(m,"projects",s,"transactions",e);await y(n,a)},async deleteTransaction(s,e){const a=p(m,"projects",s,"transactions",e);await b(a)},subscribeToTransactions(s,e){const a=u(m,"projects",s,"transactions"),n=d(a,_("created_at","desc"));return S(n,t=>{const i=t.docs.map(o=>{const r=l(o.data()),c={...r,transaction_images:Array.isArray(r.transaction_images)?r.transaction_images:[],receipt_images:Array.isArray(r.receipt_images)?r.receipt_images:[],other_images:Array.isArray(r.other_images)?r.other_images:[]};return{transaction_id:o.id,...c}});e(i)})},subscribeToTransaction(s,e,a){const n=p(m,"projects",s,"transactions",e);return S(n,t=>{if(t.exists()){const i=l(t.data());console.log("inventoryService - real-time raw data:",i),console.log("inventoryService - real-time transaction_images:",i.transaction_images);const o={...i,transaction_images:Array.isArray(i.transaction_images)?i.transaction_images:[],receipt_images:Array.isArray(i.receipt_images)?i.receipt_images:[],other_images:Array.isArray(i.other_images)?i.other_images:[]};console.log("inventoryService - real-time processed transactionData:",o);const r={transaction_id:t.id,...o};a(r)}else a(null)})}};export{v as i,R as p,O as t};
//# sourceMappingURL=inventoryService.js.map
